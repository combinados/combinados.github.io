{"version":3,"sources":["seguranca/facebook.svg","seguranca/google.svg","carregando/logo.svg","seguranca/deslogado.svg","carregando/actions.js","app/actions.js","usuario/actions.js","usuario/reducers.js","palpite/actions.js","admin/actions.js","seguranca/actions.js","seguranca/reducers.js","palpite/reducers.js","admin/reducers.js","simulador/actions.js","simulador/reducers.js","carregando/reducers.js","app/reducers.js","store.js","simulador/seletores.js","classificacao/seletores.js","usuario/ListaUsuarios.js","classificacao/index.js","seguranca/index.js","app/NavLink.js","rodada/jogos.js","rodada/index.js","simulador/index.js","admin/index.js","admin/seletores.js","admin/Situacao.js","admin/Auditoria.js","palpite/index.js","regra/index.js","carregando/index.js","app/index.js","app/erro.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CARREGANDO_DESLIGADO","cancelar","dispatch","type","MENSAGENS","actions_adicionarMensagens","mensagens","console","log","String","text","action","message","code","name","_ref","adicionarMensagensFirebase","limparMensagens","ADICIONAR_USUARIO","initialState","usuarios","ADICIONAR_PALPITE","actions_buscarPalpites","rodadaId","arguments","length","undefined","usuarioId","getState","carregando","actions_verificarDependencias","then","retorno","rodadaPalpites","palpite","palpites","filter","rodada","MAXIMO_JOGOS_RODADA","Promise","resolve","firebase_default","a","firestore","collection","where","get","querySnapshot","size","forEach","doc","palpite_actions_objectSpread","id","data","metadata","fromCache","find","concat","_toConsumableArray","map","includes","actions_reconciliarBase","catch","erros","jogos","admin","palpitesVazios","Object","keys","jogoId","jogo","mandante_placar","visitante_placar","_ref2","actions_salvarPalpites","batch","pg","_ref3","palpiteDocRef","delete","commit","reject","verificarPalpitesRepetidos","palpiteCorpo","set","actions_quandoMudar","bloquear","config","_getState$palpite","todosPalpites","rodadaSelecionada","_todosPalpites$find","parseInt","base10","repetidos","chave","all","usuario","uid","actions_defineProperty","actions_objectSpread","actions_buscar","actions_buscarRodada","primeiroTurno","actions_verificarConexao","_getState$admin","ultimaVerificacao","_getState$admin$confi","dezMinutosDepois","Date","now","getTime","atualizacaoAutomatica","exists","sistemaConectado","actions_atualizarTudo","persistor","purge","window","location","reload","actions_buscarConfig","admin_actions_quandoMudar","time","ehAdmin","actions_enviarTudo","_getState","usuariosCache","jogosCache","palpitesPrimeiroTurno","JSON","stringify","palpitesSegundoTurno","palpitesPrimeiroTurnoDocRef","palpitesSegundoTurnoDocRef","usuariosDocRef","jogosDocRef","parse","actions_toConsumableArray","forcarAtualizacao","actions_buscarTodos","actions_buscarRodadas","forcarAtualizar","_slicedToArray","querySnapshotJogos","querySnapshotPalpites","empty","admin_actions_defineProperty","admin_actions_objectSpread","push","actions_atualizar","_ref4","adicionarMensagens","actions_buscarGabarito","_getState$admin$confi2","_getState$admin$confi3","campeonato","nome","buscarGabaritoCopa","jogosPorRodada","rodadaGabarito","jogoGabarito","buscarGabaritoBrasileiroA","actions_salvarRodada","jogoDocRef","jogoAtualizado","_","headers","Headers","caminho","fetch","proxy_url","method","r","ok","html","rodadaHtml","DOMParser","parseFromString","rodadaJson","querySelectorAll","reduce","acumulador","j","anterior","atual","i","_ref6","textContent","match","_ref6$","_ref6$2","local","_ref6$3","hora","src","btoa","mandante_nome","visitante_nome","body","actions_removerUsuario","exclusaoConfirmada","_getState2","usuarioIdSelecionado","usuarioDocRef","actions_apagarCache","ENTRAR","SAIR","state","usuarioLogado","seguranca","_state$admin$config","_state$admin$config$u","usuarioAdmin","actions_sair","auth","signOut","actions_entrarComGoogle","provider","GoogleAuthProvider","languageCode","signInWithRedirect","actions_entrarComFacebook","FacebookAuthProvider","actions_atualizarUsuario","usuarioLogadoCache","providerId","foto","runTransaction","transaction","usuarioDoc","update","seguranca_actions_objectSpread","usuarioExiste","resposta","seguranca_actions_defineProperty","reducers_initialState","palpite_reducers_initialState","admin_reducers_initialState","jogosGabarito","modalAberto","simulador_actions_quandoMudar","simulador_actions_buscarRodada","jogoSimulador","simulador_actions_defineProperty","simulador_actions_objectSpread","simulador_reducers_initialState","jogosSimulador","carregando_reducers_initialState","app_reducers_initialState","app_reducers","redux_es","reducers_objectSpread","_state$usuarios","_objectWithoutProperties","seguranca_reducers_objectSpread","palpite_reducers_objectSpread","reducers_toConsumableArray","app","app_reducers_objectSpread","app_reducers_toConsumableArray","admin_reducers_objectSpread","_action$time","reducers_objectWithoutProperties","admin_reducers_defineProperty","simulador","simulador_reducers_objectSpread","simulador_reducers_objectWithoutProperties","simulador_reducers_defineProperty","carregando_reducers_objectSpread","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","persistConfig","key","storage","storage_default","persistedReducer","redux_persist_es","middleware","redux_thunk_es","composedEnhancers","meuCompose","applyMiddleware","store","src_store","onAuthStateChanged","usuarioFirebase","providerData","_ref$providerId","_ref$uid","_ref$photoURL","photoURL","_ref$displayName","displayName","email","ultimoLogin","lastSignInTime","mapearUsuarioBolao","getRedirectResult","result","user","seletores_buscarJogos","_state$simulador","sort","b","classificacao","rodadaSimulada","seletores_objectSpread","classificacao_seletores_buscarJogos","pontos","placares","assign","calcularPontos","localeCompare","ponto","acumulado","gabarito","gm","gv","pm","pv","usuario_ListaUsuarios","props","usuariosPremiados","uidsPremiados","premiado","usuariosNaoPremiados","react_default","createElement","className","react_md_es","primaryText","ehSimulacao","onClick","atualizarTudo","primary","icon","secondary","md","inset","component","Link","to","leftAvatar","split","replace","pegarFoto","role","rightAvatar","suffix","secondaryText","rightIcon","classificacao_Classificacao","this","verificarConexao","react","src_classificacao","withRouter","es","seguranca_Login","_ref$nome","nomeUsuarioLogado","_ref$foto","deslogado_default","itens","divider","entrarComGoogle","google_default","entrarComFacebook","facebook_default","sair","leftIcon","listHeightRestricted","menuItems","style","width","height","app_NavLink","label","exact","Route","path","active","rodada_jogos","noSpacing","phoneSize","desktopSize","alt","mandante_escudo","exibirPlacar","readOnly","inputStyle","textAlign","lineDirection","fullWidth","substring","value","ehGabarito","onChange","placar","quandoMudar","visitante_escudo","src_rodada","_props$usuario","listStyle","classificacaoUsuario","rodada_toConsumableArray","Array","rodadas","e","buscar","padding","exibirBotoes","raised","salvar","simulador_Simulador","exibirClassificacao","_this","setState","_this$props","simulador_objectSpread","_ref$ehSimulacao","_ref$exibirPlacar","_ref$exibirBotoes","_state$admin$config$c","admin_Admin","Admin","admin_classCallCheck","admin_possibleConstructorReturn","admin_getPrototypeOf","call","exibirMenuSecreto","contador","menuSecreto","title","enviarTudo","desbloquear","query","src_admin","admin_objectSpread","_state$admin","admin_seletores_objectSpread","admin_seletores_buscarJogos","atualizar","admin_Situacao","somenteAdmin","situacaoPreenchimento","conta","acc","curr","removerUsuario","subtitle","avatar","flat","plain","visible","onHide","actions","admin_Auditoria","auditoriaPrimeiroTurno","adjusted","colSpan","palpite_Palpite","src_palpite","ownProps","params","_buscarJogos","regra_Regra","regras","titulo","subTitulo","descricao","regra","valor","icone","container","isArray","backgroundColor","src_carregando","Carregando","carregando_classCallCheck","carregando_possibleConstructorReturn","carregando_getPrototypeOf","logo_default","navItems","exibir","app_App","buscarConfig","render","temporaryIcon","persistentIcon","drawerTitle","toolbarTitle","toolbarActions","Switch","toasts","autohide","autohideTimeout","onDismiss","src_app","iniciado","erro_Erro","Erro","erro_classCallCheck","erro_possibleConstructorReturn","erro_getPrototypeOf","hasError","error","info","erro_objectSpread","_this2","iconClassName","children","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","target","document","querySelector","react_dom","integration_react","loading","BrowserRouter","URL","origin","addEventListener","response","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"0HAAAA,EAAAC,QAAAC,EAAAC,EAAA,yDCAAH,EAAAC,QAAAC,EAAAC,EAAA,uDCAAH,EAAAC,QAAAC,EAAAC,EAAA,qDCAAH,EAAAC,QAAAC,EAAAC,EAAA,4JCAaC,EAAuB,kCAEvBC,EAAW,kBAAM,SAAAC,GAAA,OAAYA,GAAWC,KAAMH,MCApD,IAAMI,EAAY,gBAiCZC,EAAqB,SAAAC,GAAA,OAAa,SAAAJ,GAI3C,GAHAK,QAAQC,IAAIF,GAEZJ,GAAWC,KAAMH,IACQ,kBAAdM,GAA0BA,aAAqBG,OACtD,OAAOP,GAAWC,KAAMC,EAAWE,YAAcI,KAAMJ,EAAWK,OAAQ,aALvB,IAO/CC,EAAwBN,EAAxBM,QAASC,EAAeP,EAAfO,KAAMC,EAASR,EAATQ,KACvB,OAAIF,GAAWC,GAAQC,EACZZ,EA9BoB,SAAAa,GAA6B,IAA1BH,EAA0BG,EAA1BH,QAASC,EAAiBE,EAAjBF,KAAiBE,EAAXD,KAEjD,OAAQD,GACJ,IAAK,oBACD,OACIV,KAAMC,EACNE,YAAcI,KAAM,uBAAqBC,OAAQ,YAEzD,IAAK,qBACD,OACIR,KAAMC,EACNE,YAAcI,KAAM,+CAA6CC,OAAQ,YAEjF,QACI,OACIR,KAAMC,EACNE,YAAcI,KAAME,EAASD,OAAQ,aAc7BK,CAA2BV,IAG3CM,EACOV,GAAWC,KAAMC,EAAWE,YAAcI,KAAME,EAASD,OAAQ,kBAD5E,IAKSM,EAAkB,kBAAM,SAAAf,GAAA,OAAYA,GAAWC,KAjD5B,wdCAzB,IAEMe,EAAoB,ydCGjC,IAAMC,GACJC,+xBCFK,IACMC,EAAoB,4BAMpBC,EAAiB,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAY,IAAKG,EAAjBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAA+B,SAACxB,EAAU0B,GACtE1B,EJXmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCIe/BD,GAAWC,KATqB,6BASKoB,aACrCrB,EAAS4B,EAAsBP,EAAUI,IACtCI,KAAK,SAAAC,GAEJ,IACMC,EADWL,IAAWM,QAAQC,SACJC,OAAO,SAAAF,GAAA,OAAWA,EAAQP,YAAcA,GAAaO,EAAQG,SAAWd,IAExG,OAAIU,EAAeR,SAAWa,EACrBC,QAAQC,SAAUrC,KAAMH,KAGjCE,EJvB+B,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCI2BpBsC,EAAAC,EAASC,YAAYC,WAAW,YACpCC,MAAM,YAAa,KAAMlB,GACzBkB,MAAM,SAAU,KAAMtB,GACtBuB,MACAf,KAAK,SAAAgB,GACJ,GAAIA,EAAcC,OAASV,EAKzB,OAJAS,EAAcE,QAAQ,SAAAC,GACpB,IAAMhB,EAAAiB,GAAYC,GAAIF,EAAIE,IAAOF,EAAIG,QACrCnD,GAAWC,KAAMkB,EAAmBa,cAE/BK,QAAQC,SAAUrC,KAAMH,IAGjC,GAAI+C,EAAcO,SAASC,UAEzB,OADArD,EAASG,EAAmB,4GACrBkC,QAAQC,SAAUrC,KAAMH,IAGjC,IAAImC,KAOJ,OANAY,EAAcE,QAAQ,SAAAC,GACpBf,GAAWgB,KAAMlB,EAAeuB,KAAK,SAAAzD,GAAA,OAAKA,EAAEqD,KAAOF,EAAIE,MAAKA,GAAIF,EAAIE,IAAOF,EAAIG,WAGjFlB,IAAeA,GAAfsB,OAAAC,EAA4BzB,EAAeG,OAAO,SAAArC,GAAA,OAAMoC,EAASwB,IAAI,SAAA5C,GAAA,OAAAA,EAAGqC,KAAaQ,SAAS7D,EAAEqD,QAEzFlD,EAAS2D,EAAgB1B,EAAUR,EAAWJ,MAEtDuC,MAAM,SAAAC,GAEL,OADA7D,EAASG,EAAmB0D,IACrBxB,QAAQC,SAAUrC,KAAMH,SAGpC+B,KAAK,SAAApB,GACJT,EAASS,KAEVmD,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,QAI5BF,EAAkB,SAAC1B,EAAUR,EAAWJ,GAAtB,OAAmC,SAACrB,EAAU0B,GACpE,GAAIO,EAASV,OAASa,EAAqB,CAEzC,IAAM0B,EAAQpC,IAAWqC,MAAMD,MAKzBE,EAJiBC,OACpBC,KAAKJ,GACL5B,OAAO,SAAAiC,GAAA,OAAUL,EAAMK,GAAQhC,SAAWd,IAC1CoC,IAAI,SAAAU,GAAA,OAAAlB,GAAakB,UAAWL,EAAMK,MACCV,IAAI,SAAAW,GAAA,OAAAnB,KAAcmB,GAAMC,gBAAiB,KAAMC,iBAAkB,SAEvG,OADArC,IAAeA,GAAfsB,OAAAC,EAA4BQ,EAAe9B,OAAO,SAAArC,GAAA,OAAMoC,EAASwB,IAAI,SAAAc,GAAA,OAAAA,EAAGJ,SAAqBT,SAAS7D,EAAEsE,YACjGnE,EAASwE,EAAevC,EAAUR,IAG3C,GAAIQ,EAASV,OAASa,EAAqB,CACzC,IAAMqC,EAAQlC,EAAAC,EAASC,YAAYgC,QAG7B5E,GADNoC,EAAWP,IAAWM,QAAQC,SAASC,OAAO,SAAArC,GAAA,OAAKA,EAAE4B,YAAcA,KAEhES,OAAO,SAAArC,GAAA,OAAKoC,EACVC,OAAO,SAAAwC,GAAA,OAAM7E,EAAEsC,SAAWuC,EAAGvC,QAAUtC,EAAE4B,YAAciD,EAAGjD,WAAa5B,EAAEsE,SAAWO,EAAGP,SAAQ5C,OAAS,IAE1GW,OAAO,SAAArC,GAAA,OAA2B,OAAtBA,EAAEwE,kBACdZ,IAAI,SAAAkB,GAAY,IAATzB,EAASyB,EAATzB,GACA0B,EAAgBrC,EAAAC,EAASC,YAAYC,WAAW,YAAYM,IAAIE,GAEtE,OADAuB,EAAMI,OAAOD,GACN1B,IAGX,OAAOuB,EAAMK,SACVjD,KAAK,WAGJ,OAFA7B,EAASG,EAAmB,sCAC5BH,GAAWC,KAxFa,2BAwFWgC,SAAUpC,IACtCwC,QAAQC,SAAUrC,KAAMH,MAEhC8D,MAAM,SAAAC,GAEL,OADA7D,EAASG,EAAmB0D,IACrBxB,QAAQ0C,OAAOlB,QAKjBW,EAAiB,SAACvC,EAAUR,GAAX,OAAyB,SAACzB,EAAU0B,GAChE,GAAIsD,EAA2B/C,GAC7B,OAAOI,QAAQC,QAAQtC,EAASG,EAAmB,wCAGrDH,EJ9GmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCIkH/B,IAAMwE,EAAQlC,EAAAC,EAASC,YAAYgC,QAYnC,OAXAxC,EAASc,QAAQ,SAAAlD,GACf,IAAM+E,EAAgB/E,EAAEqD,GACpBX,EAAAC,EAASC,YAAYC,WAAW,YAAYM,IAAInD,EAAEqD,IAClDX,EAAAC,EAASC,YAAYC,WAAW,YAAYM,MACxCmB,EAAsDtE,EAAtDsE,OAAQE,EAA8CxE,EAA9CwE,gBAAiBC,EAA6BzE,EAA7ByE,iBAAkBnC,EAAWtC,EAAXsC,OAC7C8C,GAAiBd,SAAQ1C,YAAW4C,kBAAiBC,mBAAkBnC,UAC7EsC,EAAMS,IAAIN,EAAV3B,KAA8BgC,IAE9B,IAAMjD,EAAAiB,GAAYC,GAAI0B,EAAc1B,IAAO+B,GAC3CjF,GAAWC,KAAMkB,EAAmBa,cAE/ByC,EAAMK,SACVjD,KAAK,WAEJ,OADA7B,EAASG,EAAmB,sCACrBkC,QAAQC,SAAUrC,KAAMH,MAEhC8D,MAAM,SAAAC,GAEL,OADA7D,EAASG,EAAmB0D,IACrBxB,QAAQ0C,OAAOlB,OAIfsB,EAAc,SAAAnD,GAAA,OAAW,SAAChC,EAAU0B,GAAa,IAC1C0D,EAAe1D,IAAWqC,MAApCsB,OAAUD,SAD0CE,EAEL5D,IAAWM,QAAhDuD,EAF0CD,EAEpDrD,SAAyBuD,EAF2BF,EAE3BE,kBACjC,GAAIJ,EACF,OAAOpF,EAASG,EAAmB,wBAJuB,IAAAsF,EAM9BF,EAAcjC,KAAK,SAAAzD,GAAA,OAAKA,EAAEqD,KAAOlB,EAAQkB,KAA/DzB,EANoDgE,EAMpDhE,UAAWU,EANyCsD,EAMzCtD,OAEfuD,SAASvD,EAAQwD,GAIrB,IAAI1D,EAAWsD,EAAcrD,OAAO,SAAArC,GAAA,OAAKA,EAAEsC,SAAWqD,GAAqB3F,EAAE4B,YAAcA,IAK3F,GAHAO,EAAAiB,KAAehB,EAASqB,KAAK,SAAAzD,GAAA,OAAKA,EAAEqD,KAAOlB,EAAQkB,KAAQlB,GAC3DC,IAAeA,EAASC,OAAO,SAAArC,GAAA,OAAKA,EAAEqD,KAAOlB,EAAQkB,MAArDK,QAAAN,KAA+DjB,KAE3DgD,EAA2B/C,GAC7B,OAAOjC,EAASG,EAAmB,uCAErCH,GAAWC,KAAMkB,EAAmBa,cAGhCgD,EAA6B,SAAA/C,GACjC,IAAI2D,KAKJ,OAJA3D,EACGC,OAAO,SAAArC,GAAA,OAA2B,OAAtBA,EAAEwE,iBAAmD,OAAvBxE,EAAEyE,mBAC5Cb,IAAI,SAAA5D,GAAA,WAAA0D,OAAU1D,EAAEwE,gBAAZ,OAAAd,OAAiC1D,EAAEyE,oBACvCvB,QAAQ,SAAAlD,GAAA,OAAK+F,EAAU/F,GAAK+F,EAAU/F,GAAK+F,EAAU/F,GAAK,EAAI,IACzDoE,OAAOC,KAAK0B,GAAWtC,KAAK,SAAAuC,GAAA,OAASD,EAAUC,GAAS,KAGrDjE,EAAwB,SAACP,EAAUI,GAAX,OAAyB,SAACzB,EAAU0B,GAAX,OAAwBW,QACnFyD,KAAK9F,EF5Ic,SAACyB,GAADH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,UAA0C,SAACtB,EAAU0B,GAEzE,GADA1B,EF5BmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCEgC3BwB,EAAW,CACb,IAAMsE,EAAUrE,IAAWqE,QAAQ7E,SAASO,GAC5C,OAAIsE,GACF/F,GAAWC,KAAMH,IACVuC,QAAQC,QAAR,cAAAiB,OAA2BwC,EAAQC,IAAnC,eAEFzD,EAAAC,EACJC,YACAC,WAAW,YACXM,IAAIvB,GACJmB,MACAf,KAAK,SAAAmB,GACJ,IAAM+C,EAAAE,KAAajD,EAAIE,GAAjBgD,KAA2BlD,EAAIG,SAGrC,OAFAnD,GAAWC,KAAMe,EAAmB+E,YACpC/F,GAAWC,KAAMH,IACVuC,QAAQC,QAAR,cAAAiB,OAA2BwC,EAAQC,IAAnC,+CAERpC,MAAM,SAAAC,GAAA,OAASxB,QAAQ0C,OAAO/E,EAASG,EAAmB0D,SEyHhDsC,CAAe1E,IAAazB,EAASoG,EAAa/E,4qCCpK5D,IAUMsE,EAAS,GACTU,EAAgB,GAChBjE,EAAsB,GAEtBkE,EAAmB,kBAAM,SAACtG,EAAU0B,GAAa,IAAA6E,EACnB7E,IAAWqC,MAA9CyC,EADsDD,EACtDC,kBADsDC,EAAAF,EACnClB,cADmC,IAAAoB,OAEtDC,EAAmB,IAAIC,KAAKA,KAAKC,MAAS,KAAiBC,UAEjE,OAAKL,EAWDG,KAAKC,MAAQJ,GAAqBnB,EAAOyB,uBAC3C9G,GAAWC,KAvBuB,+BAuBOyG,qBAClCnE,EAAAC,EAASC,YAAYC,WAAW,SAASM,IAAI,UACjDJ,MACAf,KAAK,SAAAmB,GACJ,GAAIA,EAAI+D,QAAU/D,EAAIG,OAAO6D,iBAE3B,OADA3G,QAAQC,IAAI,iBAAkB0C,EAAIG,QAC3BnD,EAASiH,OAGnBrD,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,YAXlC,EAVSqD,GAAUC,QACdtF,KAAK,SAAAC,GAEJ,OADA9B,GAAWC,KAdmB,+BAcWyG,qBAClC1G,EAASiH,OAEjBpF,KAAK,SAAAmB,GACJ,OAAOoE,OAAOC,SAASC,aAoBlBC,EAAe,kBAAM,SAAAvH,GAAA,OAAYuC,EAAAC,EAC3CC,YACAC,WAAW,SACXM,IAAI,UACJJ,MACAf,KAAK,SAAAmB,GACJ,GAAIA,EAAI+D,OACN,OAAO/G,GAAWC,KA5CQ,yBA4CgBoF,OAAQrC,EAAIG,WAGzDS,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,QAGnB2D,EAAc,SAAAC,GAAA,OAAQ,SAACzH,EAAU0B,GACxCgG,GAAQhG,MACV1B,GAAWC,KA3DiB,yBA2DOwH,WAI1BE,EAAa,kBAAM,SAAC3H,EAAU0B,GAEzC,GAAIgG,GAAQhG,KAAa,CACvB1B,ELvEiC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCKyEN,IAAA2H,EAMnBlG,IAHSO,EAHU2F,EAGrB5F,QAAWC,SACU4F,EAJAD,EAIrB7B,QAAW7E,SACK4G,EALKF,EAKrB7D,MAASD,MAILiE,EAAwBC,KAAKC,UAAUhG,EAASC,OAAO,SAAArC,GAAA,OAAK6F,SAAS7F,EAAEsC,OAAQwD,IAAWU,KAC1F6B,EAAuBF,KAAKC,UAAUhG,EAASC,OAAO,SAAArC,GAAA,OAAK6F,SAAS7F,EAAEsC,OAAQwD,GAAUU,KACxFnF,EAAW8G,KAAKC,UAAUJ,GAC1B/D,EAAQkE,KAAKC,UAAUH,GAEvBrD,EAAQlC,EAAAC,EAASC,YAAYgC,QAK7B0D,EAA8B5F,EAAAC,EAASC,YAAYC,WAAW,SAASM,IAAI,yBACjFyB,EAAMS,IAAIiD,GAA+BJ,0BAEzC,IAAMK,EAA6B7F,EAAAC,EAASC,YAAYC,WAAW,SAASM,IAAI,wBAChFyB,EAAMS,IAAIkD,GAA8BF,yBAExC,IAAMG,EAAiB9F,EAAAC,EAASC,YAAYC,WAAW,SAASM,IAAI,YACpEyB,EAAMS,IAAImD,GAAkBnH,aAE5B,IAAMoH,EAAc/F,EAAAC,EAASC,YAAYC,WAAW,SAASM,IAAI,SACjEyB,EAAMS,IAAIoD,GAAexE,UAIzBW,EAAMK,SACHjD,KAAK,WACJ7B,EAASG,EAAmB,0CAE7ByD,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,SAKvBoD,EAAgB,kBAAM,SAACjH,EAAU0B,GAE5C,IAAKgG,GAAQhG,KAEX,OADA1B,ELpHiC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCKwHtBsC,EAAAC,EAASC,YAAYC,WAAW,SAASE,MAC7Cf,KAAK,SAAUgB,GACd,IAAIZ,KAwBJ,OAvBAY,EAAcE,QAAQ,SAAAC,GACpB,OAAQA,EAAIE,IACV,IAAK,QACHlD,GAAWC,KApHM,wBAoHiB6D,MAAOkE,KAAKO,MAAMvF,EAAIG,OAAOH,EAAIE,OACnE,MACF,IAAK,wBACL,IAAK,uBACHjB,EAAAuG,EAAevG,GAAfsB,OAAAiF,EAA4BR,KAAKO,MAAMvF,EAAIG,OAAOH,EAAIE,OACtDlD,GAAWC,KD3HS,6BC2HiBgC,aACrC,MACF,IAAK,WACHjC,GAAWC,KHjIS,6BGiIiBiB,SAAU8G,KAAKO,MAAMvF,EAAIG,OAAOH,EAAIE,OACzE,MACF,IAAK,SACH,IAAMmC,EAASrC,EAAIG,OACnBnD,GAAWC,KA5HO,yBA4HiBoF,WACnC,MACF,QACErF,EAASG,EAAmB,6DAIlCH,EAASG,EAAmB,2CACrBkC,QAAQC,QAAQ,QAExBsB,MAAM,SAAAC,GACL,OAAOxB,QAAQ0C,OAAOlB,KAK5B,OAAOxB,QAAQyD,KAAK9F,EHlJK,eAACyI,EAADnH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,UAA+B,SAACtB,EAAU0B,GAEnE,OADA1B,EFNmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCEU3BwI,EACKlG,EAAAC,EACJC,YACAC,WAAW,YACXE,MACAf,KAAK,SAAAgB,GAMJ,OALAA,EAAcE,QAAQ,SAAAC,GACpB,IAAM+C,EAAAE,KAAajD,EAAIE,GAAjBgD,KAA2BlD,EAAIG,SACrCnD,GAAWC,KAAMe,EAAmB+E,cAEtC/F,GAAWC,KAAMH,IACVuC,QAAQC,QAAR,gCAERsB,MAAM,SAAAC,GAAA,OAASxB,QAAQ0C,OAAO/E,EAASG,EAAmB0D,OAGtD7D,GAAWC,KAAMH,KGgIG4I,EADH,IACuC1I,EAAS2I,GADhD,QAIfA,EAAgB,eAACC,EAADtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,UAA6B,SAAAtB,GAGxD,GAFAA,EL3JmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCKgK3B2I,EAEF,OAAOvG,QAAQyD,KAAKvD,EAAAC,EAASC,YAAYC,WAAW,SAASE,MAAOL,EAAAC,EAASC,YAAYC,WAAW,YAAYE,QAC7Gf,KAAK,SAAAhB,GAAiD,IAAA0D,EAAAsE,EAAAhI,EAAA,GAA/CiI,EAA+CvE,EAAA,GAA3BwE,EAA2BxE,EAAA,GACrD,IAAKuE,EAAmBE,MAAO,CAC7B,IAAIlF,KACJgF,EAAmB/F,QAAQ,SAAAC,GACzB,IAAMoB,EAAA6E,KAAUjG,EAAIE,GAAdgG,KAAwBlG,EAAIG,SAClCW,EAAAoF,KAAapF,EAAUM,KAEzBpE,GAAWC,KAhKU,wBAgKa6D,UAEpC,IAAKiF,EAAsBC,MAAO,CAChC,IAAI/G,KACJ8G,EAAsBhG,QAAQ,SAAAC,GAC5B,IAAMhB,EAAAkH,GAAYhG,GAAIF,EAAIE,IAAOF,EAAIG,QACrClB,EAASkH,KAAKnH,KAEhBhC,GAAWC,KD1Ka,6BC0KagC,aAGvC,OADAjC,GAAWC,KAAMH,IACVuC,QAAQC,QAAQ,MAExBsB,MAAM,SAAAC,GAEL,OADA7D,EAASG,EAAmB0D,IACrBxB,QAAQ0C,OAAOlB,OAKjBuF,EAAY,SAAC/H,EAAUI,GAAX,OAAyB,SAAAzB,GAChDA,EL5LmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCKiM/BoC,QAAQyD,KACNvD,EAAAC,EAASC,YAAYC,WAAW,SAASC,MAAM,SAAU,KAAMtB,GAAUuB,MACzEnB,EACIc,EAAAC,EAASC,YAAYC,WAAW,YAAYC,MAAM,YAAa,KAAMlB,GAAWkB,MAAM,SAAU,KAAMtB,GAAUuB,MAChHP,QAAQC,SAAU0G,OAAO,MAE5BnH,KAAK,SAAA8C,GAAiD,IAAA0E,EAAAR,EAAAlE,EAAA,GAA/CmE,EAA+CO,EAAA,GAA3BN,EAA2BM,EAAA,GAChDP,EAAmBE,OACtBF,EAAmB/F,QAAQ,SAAAC,GACzB,IAAMoB,EAAA6E,KAAUjG,EAAIE,GAAdgG,KAAwBlG,EAAIG,SAClCnD,GAAWC,KAlMS,uBAkMamE,WAGhC2E,EAAsBC,OACzBD,EAAsBhG,QAAQ,SAAAC,GAC5B,IAAMhB,EAAAkH,GAAYhG,GAAIF,EAAIE,IAAOF,EAAIG,QACrCnD,GAAWC,KAAMkB,EAAmBa,cAGxChC,EAASG,EAAAmJ,qCAAiDjI,EAAjD,+BACTrB,GAAWC,KAAMH,MAElB8D,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,QAIrBuC,EAAe,eAAC/E,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAY,IAAZ,OAAoB,SAACtB,EAAU0B,GACzD1B,EL1NmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCK8N/BD,GAAWC,KAxNqB,2BAwNKoB,aAErC,IAAMyC,EAAQpC,IAAWqC,MAAMD,MAK/B,OAJuBG,OAAOC,KAAKJ,GAChC5B,OAAO,SAAAiC,GAAA,OAAUL,EAAMK,GAAQhC,SAAWd,IAC1CoC,IAAI,SAAAU,GAAA,OAAA+E,GAAa/E,UAAWL,EAAMK,MAElB5C,SAAWa,GAC5BpC,GAAWC,KAAMH,IACVuC,QAAQC,QAAR,sBAAAiB,OAAsClC,EAAtC,eAGFkB,EAAAC,EAASC,YACbC,WAAW,SACXC,MAAM,SAAU,KAAMtB,GACtBuB,MACAf,KAAK,SAAAgB,GACJ,OAAKA,EAAcmG,MAQZ3G,QAAQ0C,OAAO,uDAPpBlC,EAAcE,QAAQ,SAAAC,GACpB,IAAMoB,EAAA6E,KAAUjG,EAAIE,GAAdgG,KAAwBlG,EAAIG,SAClCnD,GAAWC,KAzOS,uBAyOamE,WAEnCpE,GAAWC,KAAMH,IACVuC,QAAQC,QAAR,sBAAAiB,OAAsClC,EAAtC,wBAIVuC,MAAM,SAAAC,GAEL,OADA7D,EAASG,EAAmB0D,IACrBxB,QAAQ0C,OAAOlB,OAIf0F,EAAiB,eAAClI,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAY,IAAZ,OAAoB,SAACtB,EAAU0B,GAI3D,GAHA1B,EL7PmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCKiQ/BD,GAAWC,KA3PqB,2BA2PKoB,aAEjCqG,GAAQhG,KAAa,KAAA8H,EAKnB9H,IAAWqC,MAHbsB,OAFqBoE,GAAAD,OAAA,IAAAA,QAGnBE,kBAHmB,IAAAD,OAMC,qBAApBC,EAAWC,MACbC,EAAmBvI,EAAUqI,EAAWG,gBACrChI,KAAK,SAAAiI,GACJ7F,OAAOC,KAAK4F,GAAgB/G,QAAQ,SAAAoB,GAClC,IAAM4F,EAAAd,KAAkB9E,EAAlB+E,KAAgCY,EAAe3F,KACrDnE,GAAWC,KAnQgB,gCAmQe8J,mBAE5C/J,GAAWC,KAAMH,IACjBO,QAAQC,IAAR,sBAAAiD,OAAkClC,EAAlC,6BAEDuC,MAAM,SAAAC,GAAA,OAAS7D,EAASG,EAAmB0D,MAExB,0BAApB6F,EAAWC,MACbK,EAA0B3I,EAAUqI,EAAWG,gBAC5ChI,KAAK,SAAAiI,GACJ7F,OAAOC,KAAK4F,GAAgB/G,QAAQ,SAAAoB,GAClC,IAAM4F,EAAAd,KAAkB9E,EAAlB+E,KAAgCY,EAAe3F,KACrDnE,GAAWC,KA/QgB,gCA+Qe8J,mBAE5C/J,GAAWC,KAAMH,IACjBO,QAAQC,IAAR,sBAAAiD,OAAkClC,EAAlC,6BAKRrB,GAAWC,KAAMH,IACjBE,EAASoG,EAAa/E,IACnBQ,KAAK,SAAAC,GAAA,OAAW9B,EAASG,EAAmB2B,MAC5C8B,MAAM,SAAAC,GAAA,OAAS7D,EAASG,EAAmB0D,QAGnCoG,EAAe,SAAA9H,GAAA,OAAU,SAAAnC,GACpCA,ELtSmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCK2S/B,IAAMwE,EAAQlC,EAAAC,EAASC,YAAYgC,QAE7BX,EAAQ3B,EAAOsB,IAAI,SAAAW,GACvB,IAAM8F,EAAa3H,EAAAC,EAASC,YAAYC,WAAW,SAASM,IAAIoB,EAAKD,QAK/DgG,EAAAjB,KAAsB9E,GAE5B,OADAK,EAAMS,IAAIgF,EAAVhB,KAA2BiB,IACpBA,IAGT1F,EAAMK,SACHjD,KAAK,SAAAuI,GACJtG,EAAMf,QAAQ,SAAAqB,GAAA,OAAQpE,GAAWC,KAjTT,uBAiT+BmE,KAAA6E,KAAS7E,EAAKD,OAAd+E,KAA4B9E,QAEnF/D,QAAQC,IAAI,uCACZN,GAAWC,KAAMH,IACjBE,EAASG,EAAmB,gCAE7ByD,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,QAI5BmG,EAA4B,WAAoC,IAAnC3I,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,IAAKuI,EAAmBvI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D6I,EAAU,IAAIC,QAGdC,wIAAyIlJ,EAAzI,eAON,OAAOmJ,MAAMC,sEAAuBF,GAJlCG,OAAQ,MACRL,QAASA,IAIRxI,KAAK,SAAA8I,GAAA,OAAKA,EAAEC,GAAKD,EAAEnK,OAAS6B,QAAQ0C,OAAO4F,KAC3C9I,KAAK,SAAAgJ,GACJ,IAAMC,GAAa,IAAIC,WAAYC,gBAAgBH,EAAM,aAEnDI,EAAajD,KAAKO,MAAMC,EAAIsC,EAAWI,iBAAiB,iBAC3DzH,IAAI,SAAAW,GAAA,OAAAoE,EAAYpE,EAAK8G,iBAAiB,oNACtCC,OAAO,SAACC,EAAY3D,EAAM4D,GACzB,IAAIjH,EAAO4D,KAAKO,MAAMd,EAAK0D,OAAO,SAACG,EAAUC,EAAOC,GAClD,GAAU,IAANA,EAAS,KAAAC,EAAA5C,EACkC0C,EAAMG,YAAYC,MAAM,sDAD1D,GAAAC,EAAAH,EAAA,GACFtI,OADE,IAAAyI,EACK,GADLA,EAAAC,EAAAJ,EAAA,GACSK,OADT,IAAAD,EACiB,GADjBA,EAAAE,EAAAN,EAAA,GACqBO,OADrB,IAAAD,EAC4B,GAD5BA,EAEX,OAAOT,qBAAuBnI,EAAvB,cAAAI,OAAwCyI,EAAxC,eAAAzI,OAA0DuI,EAA1D,MAET,OAAU,IAANN,EAAgBF,6BAA+BC,EAAMG,YAArC,MACV,IAANF,EAAgBF,+BAAiCC,EAAMU,IAAvC,MACV,IAANT,EAAgBF,8BAAgCC,EAAMG,aAAe,KAArD,KACV,IAANF,EAAgBF,+BAAiCC,EAAMG,aAAe,KAAtD,KACV,IAANF,EAAgBF,gCAAkCC,EAAMU,IAAxC,MACV,IAANT,EAAgBF,8BAAgCC,EAAMG,YAAtC,iBAAAnI,OAAiElC,EAAjE,MACb,IACN,KACH,SAAAkC,OAAU6H,EAAV,KAAA7H,OAAwB6D,OAAO8E,KAAP,GAAA3I,OAAea,EAAK+H,cAApB,KAAA5I,OAAqCa,EAAKgI,eAA1C,KAAA7I,OAA4DlC,IAApF,MAAAkC,OAAoGyE,KAAKC,UAAU7D,IAAnHb,OAA2H8H,IAAMxB,EAAiB,EAAI,IAAM,MAC3J,MAEL,OAAOxH,QAAQC,QAAQ2I,KAExBrH,MAAM,SAAAC,GAAA,OAASxB,QAAQ0C,OAAOlB,MAG7B+F,EAAqB,WAAoB,IAAnBvI,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,IAC/B+I,EAAU,IAAIC,QAGdC,gJAAiJlJ,EAAjJ,eAON,OAAOmJ,MAAMC,wEAAuBF,GAJlCG,OAAQ,MACRL,QAASA,IAIRxI,KAAK,SAAA8I,GAAA,OAAKA,EAAEC,GAAKD,EAAEnK,OAAS6B,QAAQ0C,OAAO4F,KAC3C9I,KAAK,SAAAgJ,GACJ,IAAMC,GAAa,IAAIC,WAAYC,gBAAgBhD,KAAKO,MAAMsC,GAAMwB,KAAM,aAEpEpB,EAAajD,KAAKO,MAAMC,EAAIsC,EAAWI,iBAAiB,yBAC3DzH,IAAI,SAAAW,GAAA,OAAAoE,EAAYpE,EAAK8G,iBAAiB,0LACtCC,OAAO,SAACC,EAAY3D,EAAM4D,GACzB,IAAIjH,EAAO4D,KAAKO,MAAMd,EAAK0D,OAAO,SAACG,EAAUC,EAAOC,GAClD,OAAU,IAANA,EAAgBF,8BAAgCC,EAAMG,YAAtC,MACV,IAANF,EAAgBF,+BAAiCC,EAAMU,IAAvC,MACV,IAANT,EAAgBF,8BAAgCC,EAAMG,aAAe,KAArD,KACV,IAANF,EAAgBF,+BAAiCC,EAAMG,aAAe,KAAtD,KACV,IAANF,EAAgBF,gCAAkCC,EAAMU,IAAxC,MACV,IAANT,EAAgBF,8BAAgCC,EAAMG,YAAtC,iBAAAnI,OAAiElC,EAAjE,MACb,IACN,KACH,SAAAkC,OAAU6H,EAAV,KAAA7H,OAAwB6D,OAAO8E,KAAP,GAAA3I,OAAea,EAAK+H,cAApB,KAAA5I,OAAqCa,EAAKgI,eAA1C,KAAA7I,OAA4DlC,IAApF,MAAAkC,OAAoGyE,KAAKC,UAAU7D,IAAnHb,OAAiI,KAAN8H,EAAW,IAAM,MAC3I,MAEL,OAAOhJ,QAAQC,QAAQ2I,KAExBrH,MAAM,SAAAC,GAAA,OAASxB,QAAQ0C,OAAOlB,MAGtByI,EAAiB,eAACC,EAADjL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAA6BG,EAA7BH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAA2C,SAACxB,EAAU0B,GAClF,GAAI6K,EAAoB,CACtBvM,ELhZiC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCKkZP,IAAAuM,EAEkD9K,IAArDO,EAFGuK,EAEdxK,QAAWC,SAA2C+D,EAFxCwG,EAESzI,MAAS0I,qBAElChI,EAAQlC,EAAAC,EAASC,YAAYgC,QAC7BiI,EAAgBnK,EAAAC,EAASC,YAAYC,WAAW,YAAYM,IAAIgD,GACtEvB,EAAMI,OAAO6H,GAEb,IAAM7M,EAAIoC,EACPC,OAAO,SAAArC,GAAA,OAAKA,EAAE4B,YAAcuE,IAC5BvC,IAAI,SAAA5D,GACH,IAAM+E,EAAgBrC,EAAAC,EAASC,YAAYC,WAAW,YAAYM,IAAInD,EAAEqD,IAExE,OADAuB,EAAMI,OAAOD,GACN/E,IAGX4E,EAAMK,SACHjD,KAAK,WACJ7B,GAAWC,KD1Za,2BC0ZWgC,SAAUpC,IAC7CG,GAAWC,KH/ZY,0BG+ZW+F,QAClChG,GAAWC,KAAMH,IACjBE,EAASG,EAAmB,wDAE7ByD,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,MAGhC7D,GAAWC,KAja+B,8CAoa1CD,GAAWC,KApa+B,uCAoaOwB,gBAIxCkL,EAAc,kBAAMzF,GAC9BC,QACAtF,KAAK,SAAAC,GACJsF,OAAOC,SAASC,WAEjB1D,MAAM,SAAAC,GACLuD,OAAOC,SAASC,4cCrbb,IAAMsF,GAAS,mBACTC,GAAO,iBAEPnF,GAAU,SAAAoF,GAAS,IAEfC,EAIXD,EAJFE,UAAaD,cAFeE,EAM1BH,EAHF/I,MACEsB,OAJ0B6H,GAAAD,OAAA,IAAAA,QAIhBE,oBAJgB,IAAAD,OAO9B,OAAOC,EAAanH,KAAO+G,EAAc/G,MAAQmH,EAAanH,KAGnDoH,GAAO,kBAAM,SAAApN,GACxBuC,EAAAC,EAAS6K,OAAOC,UACbzL,KAAK,WACJ7B,GACEC,KAAM4M,OAGTjJ,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,QAIrB0J,GAAkB,kBAAM,SAAAvN,GACnCA,EN5BmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCMiC/B,IAAMuN,EAAW,IAAIjL,EAAAC,EAAS6K,KAAKI,mBACnClL,EAAAC,EAAS6K,OAAOK,aAAe,QAC/BnL,EAAAC,EAAS6K,OAAOM,mBAAmBH,GAChC5J,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,IAE5B7D,GACEC,KAAMH,QAKD8N,GAAoB,kBAAM,SAAA5N,GACrCA,EN3CmC,SAACA,EAAU0B,IAC7CA,IAAWC,WAAWA,YAAc3B,GAAWC,KAJjB,mCM+C/B,IAAMuN,EAAW,IAAIjL,EAAAC,EAAS6K,KAAKQ,qBACnCtL,EAAAC,EAAS6K,OAAOK,aAAe,QAC/BnL,EAAAC,EAAS6K,OAAOM,mBAAmBH,GAChC5J,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,IAE5B7D,GACEC,KAAMH,QAuCDgO,GAAmB,eAACf,EAADzL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,aAAwB,SAACtB,EAAU0B,GAAa,IAE1CqM,EAAyBrM,IAArDsL,UAAaD,cAErB,GAAIgB,GACChB,EAAciB,aAAeD,EAAmBC,YAChDjB,EAAckB,OAASF,EAAmBE,MAC1ClB,EAAcpD,OAASoE,EAAmBpE,KAC7C,OAAO3J,GAAWC,KAAMH,IAG1B,IAAM4M,EAAgBnK,EAAAC,EAASC,YAAYC,WAAW,YAAYM,IAAI+J,EAAc/G,KACpFzD,EAAAC,EAASC,YAAYyL,eAAe,SAAAC,GAClC,OAAOA,EAAYvL,IAAI8J,GACpB7K,KAAK,SAAAuM,GAOJ,OANIA,EAAWrH,OACboH,EAAYE,OAAO3B,EAAnB4B,MAAuCvB,IAGvCoB,EAAYjJ,IAAIwH,EAAhB4B,MAAoCvB,IAE/BqB,EAAWrH,WAGrBlF,KAAK,SAAA0M,GAGJ,GAFAlO,QAAQC,IAAI,wCAEPiO,EACH,OAAOvO,EAASiH,KACbpF,KAAK,SAAA2M,GACJxO,GAAWC,KAAM2M,GAAQG,kBACzB,IAAMhH,EAAA0I,MAAa1B,EAAc/G,IAA3BsI,MAAsCvB,IAC5C/M,GAAWC,KAAMe,EAAmB+E,YACpC/F,GAAWC,KAAMH,MAElB8D,MAAM,SAAAC,GAEL7D,EAASG,EAAmB0D,MAIlC7D,GAAWC,KAAM2M,GAAQG,kBACzB,IAAMhH,EAAA0I,MAAa1B,EAAc/G,IAA3BsI,MAAsCvB,IAC5C/M,GAAWC,KAAMe,EAAmB+E,YACpC/F,GAAWC,KAAMH,MAElB8D,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,wcC3IlC,IAAM6K,IACJ3B,wyBCIF,IAAM4B,IACJ1M,YACAuD,kBAAmB,qcCErB,IAAMoJ,IACJpJ,kBAAmB,IACnB1B,SACA+K,iBACAxJ,QACEqE,YAAcC,KAAM,YACpBwD,gBACArG,uBAAuB,EACvB1B,UAAU,GAEZ0J,aAAa,EACbrC,qBAAsB,GACtBjG,kBAAmBG,KAAKC,gICvBnB,IAIMmI,GAAc,SAAAtH,GAAA,OAAQ,SAACzH,EAAU0B,GAC5C1B,GAAWC,KAJmB,6BAIKwH,WASxBuH,GAAe,eAAC3N,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAY,IAAZ,OAAoB,SAACtB,EAAU0B,GACzD1B,GAAWC,KAfqB,+BAeKoB,aADiC,IAGvDwN,EAAkBnN,IAAWqC,MAApCD,MACRG,OACGC,KAAK2K,GACL3M,OAAO,SAAAiC,GAAA,OAAU0K,EAAc1K,GAAQhC,SAAWd,IAClD0B,QAAQ,SAAAoB,GACP,IAAM8K,EAAAC,MAAmB/K,sUAAnBgL,IAAiCN,EAAc1K,IAASE,gBAAiB,KAAMC,iBAAkB,QACvGtE,GAAWC,KArBuB,qCAqBSgP,sdCjBjD,IAAMG,IACJ5J,kBAAmB,IACnB6J,mdCNF,IAAMC,IACJ3N,YAAY,yxBCOd,IAAM4N,IACJnP,cAcFoP,GAAevL,OAAAwL,EAAA,gBAAf,EACE1J,QVdF,WAAiD,IAAjC+G,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcR,EAAWa,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQf,EAAOR,MAEb,KAAKe,EACH,OAAA0O,KACK5C,GACH5L,SAAAwO,KAAe5C,EAAM5L,SAAaT,EAAOsF,WAE7C,IDd8B,6BCe5B,OAAA2J,KAAY5C,GAAO5L,SAAUT,EAAOS,WACtC,IDf2B,0BCeL,IAAAyO,EACyB7C,EAAM5L,SACnD,OAFoByO,EACXlP,EAAOuF,KAChB0J,KAAY5C,GAAO5L,gUAFC0O,CAAAD,GACXlP,EAAOuF,QAGlB,IDtB2B,0BCuBzB,OAAA0J,KACK5C,GACH5L,SAAUT,EAAOS,WAErB,ID5B2B,yBC6BzB,OAAAwO,KACK5C,GACH5L,cAEJ,QACE,OAAO4L,IUVXE,UNrBF,WAAiD,IAAjCF,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBoN,GAAcjO,EAAWa,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQf,EAAOR,MACb,KAAK2M,GACH,OAAAiD,MAAY/C,GAAOC,cAAA8C,MAAoBpP,EAAOsM,iBAChD,KAAKF,GACH,OAAAgD,MAAY/C,GAAOC,mBACrB,QACE,OAAOD,IMeX9K,QLhBF,WAAiD,IAAjC8K,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBqN,GAAclO,EAAWa,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQf,EAAOR,MACb,IJP8B,6BIQ5B,OAAA6P,MACKhD,GACHtH,kBAAmB/E,EAAOY,WAE9B,IJR4B,2BIS1B,OAAAyO,MAAYhD,GAAO7K,SAAU6K,EAAM7K,SAASC,OAAO,SAAArC,GAAA,OAAMY,EAAOwB,SAASyB,SAAS7D,EAAEqD,QAEtF,IJb8B,6BIc5B,OAAA4M,MAAYhD,GAAO7K,SAAUxB,EAAOwB,WAEtC,KAAKd,EACH,IAAMa,EAAA8N,MAAehD,EAAM7K,SAASqB,KAAK,SAAAzD,GAAA,OAAKA,EAAEqD,KAAOzC,EAAOuB,QAAQkB,KAAQzC,EAAOuB,SACrF,OAAA8N,MAAYhD,GAAO7K,SAAA8N,GAAcjD,EAAM7K,SAASC,OAAO,SAAArC,GAAA,OAAKA,EAAEqD,KAAOlB,EAAQkB,MAA1DK,QAAAuM,MAAoE9N,OAEzF,QACE,OAAO8K,IKDXkD,IAfU,WAAkC,IAAjClD,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBiO,GAAc9O,EAAWa,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQf,EAAOR,MACb,KAAKC,EACH,OAAA+P,MAAYnD,GAAO1M,UAAA8P,GAAezP,EAAOL,aAC3C,IZf4B,uBYgB1B,OAAA6P,MAAYnD,GAAO1M,eACrB,QACE,OAAO0M,IASX/I,MJJF,WAAiD,IAAjC+I,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBsN,GAAcnO,EAAWa,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQf,EAAOR,MACb,IJb4B,yBIc1B,OAAAkQ,MAAYrD,GAAOzH,OAAQ5E,EAAO4E,SACpC,IJhBkC,+BIiBhC,OAAA8K,MAAYrD,GAAOtG,kBAAmB/F,EAAOiG,mBAC/C,IJrB2B,wBIsBzB,OAAAyJ,MAAYrD,GAAOhJ,MAAOrD,EAAOqD,QACnC,IJxB0B,uBIyBxB,OAAAqM,MAAYrD,GAAOhJ,MAAAqM,MAAYrD,EAAMhJ,MAAUrD,EAAO2D,QACxD,IJxBmC,gCIyBjC,OAAA+L,MAAYrD,GAAO+B,cAAAsB,MAAoBrD,EAAM+B,cAAkBpO,EAAOsJ,gBACxE,IJ7B4B,yBI6BL,IAAAqG,EACW3P,EAAOgH,KAA3BtD,EADSiM,EACblN,GAAeuE,yTADF4I,CAAAD,GAAA,OAErB,OAAAD,MAAYrD,GAAO+B,cAAAsB,MAAoBrD,EAAM+B,cAA1ByB,MAA0CnM,EAA1CgM,MAAwDrD,EAAM+B,cAAc1K,GAAYsD,OAE7G,IJnC8B,2BIoC5B,OAAA0I,MAAYrD,GAAOtH,kBAAmB/E,EAAOY,WAC/C,IJ/B0C,uCIgCxC,OAAIZ,EAAOgB,UACT0O,MAAYrD,GAAOgC,aAAa,EAAMrC,qBAAsBhM,EAAOgB,YAErE0O,MAAYrD,GAAOgC,aAAa,EAAOrC,qBAAsB,KAE/D,QACE,OAAOK,IIpBXyD,UFpBF,WAAiD,IAAjCzD,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB8N,GAAc3O,EAAWa,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQf,EAAOR,MACb,IDXoC,qCCYlC,OAAAuQ,MAAY1D,GAAOuC,eAAAmB,MAAqB1D,EAAMuC,eAAmB5O,EAAOwO,iBAC1E,IDd4B,6BCcL,IAAAmB,EACW3P,EAAOgH,KAA3BtD,EADSiM,EACblN,GAAeuE,yTADFgJ,CAAAL,GAAA,OAErB,OAAAI,MAAY1D,GAAOuC,eAAAmB,MAAqB1D,EAAMuC,eAA3BqB,MAA4CvM,EAA5CqM,MAA0D1D,EAAMuC,eAAelL,GAAYsD,OAEhH,IDnB8B,+BCoB5B,OAAA+I,MAAY1D,GAAOtH,kBAAmB/E,EAAOY,WAC/C,QACE,OAAOyL,IEUXnL,WD1BF,WAAiD,IAAjCmL,EAAiCxL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBgO,GACtB,QAD+ChO,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChCvB,MACb,IZP6B,+BYQ3B,OAAA0Q,MACK7D,GACHnL,YAAY,IAEhB,KAAK7B,EACH,OAAA6Q,MACK7D,GACHnL,YAAY,IAGhB,QACE,OAAOmL,qDEDbvK,EAAAC,EAASoO,eAPPC,OAAQ,0CACNC,WAAY,6BACZC,YAAa,oCACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,iBAIvB,IAAMC,IACJC,IAAK,OACLC,QAASC,GAAA9O,GAGL+O,GAAmBtN,OAAAuN,GAAA,EAAAvN,CAAekN,GAAe3B,IAIjDiC,IACJC,EAAA,GAOF,IAAMC,GALWlC,EAAA,QAKSmC,cACxBnC,EAAA,gBAAAoC,aAAmBJ,KADKlO,YAKpBuO,GAAQ7N,OAAAwL,EAAA,YAAAxL,CACZsN,MAEAI,IAGWzK,GAAYjD,OAAAuN,GAAA,EAAAvN,CAAa6N,IAEtCC,GAAA,GACAD,GAAM9R,SR6B8C,SAAAA,GAElDuC,EAAAC,EAAS6K,OAAO2E,mBAAmB,SAAAC,GAG/BjS,EADEiS,EACOnE,GJhCmB,WAA0B,IAAzBmE,EAAyB3Q,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAT,EAEaoR,EAAgBC,aAAa,OAF1CC,EAAAtR,EAElDmN,kBAFkD,IAAAmE,EAErC,GAFqCA,EAAAC,EAAAvR,EAEjCmF,WAFiC,IAAAoM,EAE3B,GAF2BA,EAAAC,EAAAxR,EAEvByR,gBAFuB,IAAAD,EAEZ,GAFYA,EAAAE,EAAA1R,EAER2R,YAClD,OACE7I,WAJwD,IAAA4I,EAEM,GAFNA,IAInCN,EAAgBO,YACrCC,MAAOR,EAAgBQ,MACvBxE,KAAM,iBAAmBD,EAAnB,8BAAAzK,OAA8DyC,EAA9D,YAA8EsM,EACpFtM,IAAKiM,EAAgBjM,IACrBgI,aACA0E,YAAaT,EAAgB7O,SAASuP,gBIuBVC,CAAmBX,IAGpC7E,UQpCf0E,GAAM9R,SROqC,SAAAA,GACzCuC,EAAAC,EAAS6K,OAAOwF,oBACbhR,KAAK,SAAAiR,GACJzS,QAAQC,IAAIwS,EAAOC,QAYpBnP,MAAM,SAAAC,GACL7D,EAASG,EAAmB0D,kDS5ErBmP,GAAc,SAAClG,GAAU,IAAAmG,EACiBnG,EAAMyD,UAAnCzM,EADYmP,EAC5B5D,eAAuB7J,EADKyN,EACLzN,kBAC/B,OACE1B,MAAOG,OACJC,KAAKJ,GACL5B,OAAO,SAAAiC,GAAA,OAAUL,EAAMK,GAAQhC,SAAWqD,IAC1C/B,IAAI,SAAAU,GAAA,OAAUL,EAAMK,KACpB+O,KAAK,SAAC1Q,EAAG2Q,GAAJ,OAAU3Q,EAAE2J,cAAgBgH,EAAEhH,gBACtC3G,sdCPG,IAAM4N,GAAgB,SAACtG,EAAOuG,GACnC,IAAMnS,EAAW+C,OACdC,KAAK4I,EAAM/G,QAAQ7E,UACnBuC,IAAI,SAAAhC,GAAA,OAAA6R,MAAmBxG,EAAM/G,QAAQ7E,SAASO,GAAe8R,GAAYzG,EAAOrL,OAAWD,EAAW6R,MACtGH,KAAK,SAAC1Q,EAAG2Q,GAAJ,OAAWA,EAAEK,OAAShR,EAAEgR,QAAYL,EAAEM,SAAWjR,EAAEiR,WAAcjR,EAAEmH,OAASwJ,EAAExJ,KAAO,EAAInH,EAAEmH,KAAOwJ,EAAExJ,MAAQ,EAAI,KAEpHyJ,EAAgB,EAEpB,OAAOlS,EAASuC,IAAI,SAACsC,EAASyF,GAI5B,OAHItK,EAASsK,EAAI,KACf4H,EAAgBlS,EAASsK,EAAI,GAAGgI,SAAWzN,EAAQyN,QAAUtS,EAASsK,EAAI,GAAGiI,WAAa1N,EAAQ0N,SAAWL,IAAkBA,GAEjIE,MAAYvN,GAASqN,qBAIZG,GAAc,SAACzG,EAAOrL,EAAW+D,EAAmB6N,GAI/D,IAAMtN,EAAU+G,EAAM/G,QAAQ7E,SAASO,OACjC8D,EAAgBuH,EAAM9K,QAAQC,SAChC4M,EAAgB5K,OAAOyP,UAAPJ,MAAuBxG,EAAM/I,MAAMD,QAEnDuP,GACFL,GAAqBlG,GAAOhJ,MAAMf,QAAQ,SAAAqB,GAAA,OAAQyK,EAAczK,EAAKD,QAAUC,IAGjF,IAAMN,EAAQyB,EACXrD,OAAO,SAAAF,GAAA,OAAWwD,EAAoBxD,EAAQG,SAAWqD,GAAqBxD,EAAQP,YAAcA,EAAYO,EAAQP,YAAcA,IACtIgC,IAAI,SAAAzB,GAAA,OAAAsR,MAEEzE,EAAc7M,EAAQmC,QACtBnC,EACA2R,GAAe9E,EAAc7M,EAAQmC,QAASnC,MAEpDkR,KAAK,SAAC1Q,EAAG2Q,GAAJ,OAAW,GAAK3Q,EAAE2J,eAAeyH,cAAcT,EAAEhH,iBAEnDqH,EAAS1P,EAAML,IAAI,SAAAW,GAAA,OAAQA,EAAKyP,QAAO1I,OAAO,SAAC2I,EAAWvI,GAAZ,OAAsBuI,EAAYvI,GAAO,GACvFkI,EAAW3P,EAAM5B,OAAO,SAAAkC,GAAA,OAAuB,IAAfA,EAAKyP,QAAatS,OACxD,OACEwE,UACAP,oBACA1B,QACA0P,SACAC,aAIEE,GAAiB,SAACI,EAAU/R,GAChC,IAAMgS,EAAKD,EAAS1P,gBAClB4P,EAAKF,EAASzP,iBACd4P,EAAKlS,EAAQqC,gBACb8P,EAAKnS,EAAQsC,iBAOf,OANiB,OAAP0P,GAAsB,OAAPC,GAAsB,OAAPC,GAAsB,OAAPC,GAMnCN,MAAO,GAHZG,IAAOE,GAAMD,IAAOE,GAIVN,MAAO,GAHnBG,EAAKC,GAAMC,EAAKC,GAAQH,EAAKC,GAAMC,EAAKC,GAHzCH,IAAOC,GACPC,IAAOC,GAMGN,MAAO,IACpBA,MAAO,8BCiBlBO,GAlEsB,SAAAC,GAGpB,IAAMC,EAAoBD,EAAMnT,SAASgB,OAAO,SAAA6D,GAAA,OAAWA,EAAQqN,cAAgB,IAC7EmB,EAAgBD,EAAkB7Q,IAAI,SAAA+Q,GAAA,OAAYA,EAASxO,MAC3DyO,EAAuBJ,EAAMnT,SAASgB,OAAO,SAAA6D,GAAA,OAAYwO,EAAc7Q,SAASqC,EAAQC,OAwB9F,OAAO0O,EAAAlS,EAAAmS,cAAA,OAAKC,UAAU,WACpBF,EAAAlS,EAAAmS,cAACE,GAAA,GAAKD,UAAU,6EACdF,EAAAlS,EAAAmS,cAACE,GAAA,GAAUC,YAAY,cAElBT,EAAMU,aACPL,EAAAlS,EAAAmS,cAACE,GAAA,GAAOG,QAASX,EAAMY,cAAeC,SAAA,EAAQC,MAAA,EAAKC,WAAA,GAAUV,EAAAlS,EAAAmS,cAACU,GAAA,QAAOvS,KAAM,OAG/E4R,EAAAlS,EAAAmS,cAACE,GAAA,GAAQS,OAAA,IAEPhB,EAAkB7Q,IAAI,SAAAsC,GAAA,OACpB2O,EAAAlS,EAAAmS,cAAEE,GAAA,GAASzD,IAAKrL,EAAQC,IACtBuP,UAAWC,GAAA,EACXC,GAAA,WAAAlS,OAAewC,EAAQC,KACvB0P,WAAYhB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IApCZ,SAAApL,GAA0BA,EAAvBmN,WAAuB,IAAXC,EAAWpN,EAAXoN,KAC/B,OAAIA,EAAKvK,SAAS,SAChB,yCAAAH,OAAgD0K,EAAK0H,MAAM,KAAK,IAa9D1H,EAAKvK,SAAS,SACTuK,EAAK2H,QAAQ,mBAAoB,yCAGnC3H,EAiB0B4H,CAAU9P,GAAU+P,KAAK,iBAClDC,YAAarB,EAAAlS,EAAAmS,cAACE,GAAA,GAAOmB,OAAO,SAASjQ,EAAQqN,cAAhC,QACb0B,YAAa/O,EAAQ4D,KACrBsM,cAAA,WAAA1S,OAA0BwC,EAAQyN,OAAlC,gBAAAjQ,OAAuDwC,EAAQ0N,cAIrEiB,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,MAEEJ,EAAqBhR,IAAI,SAAAsC,GAAA,OACvB2O,EAAAlS,EAAAmS,cAAEE,GAAA,GAASzD,IAAKrL,EAAQC,IACtBuP,UAAWC,GAAA,EACXC,GAAA,WAAAlS,OAAewC,EAAQC,KACvB0P,WAAYhB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKlG,EAAQkI,KAAM6H,KAAK,iBAC5CI,UAAWxB,EAAAlS,EAAAmS,cAACE,GAAA,GAAOmB,OAAO,QAAQjQ,EAAQqN,cAA/B,QACX0B,YAAa/O,EAAQ4D,KACrBsM,cAAA,WAAA1S,OAA0BwC,EAAQyN,OAAlC,gBAAAjQ,OAAuDwC,EAAQ0N,0xBCjErE0C,gPAGFC,KAAK/B,MAAMgC,oDAIX,OAAO3B,EAAAlS,EAAAmS,cAACP,GAAkBgC,KAAK/B,uNAPPiC,EAAA,WAqB5BC,GAAetS,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CAVF,SAAA6I,GAAA,OACtB5L,SAAUkS,GAActG,KAGC,SAAA9M,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrCgR,cAAAhO,EACAoP,iBAAA/P,GAECtG,IAEuBiE,CAGxBkS,00BCbIO,qOACK,IAAA7V,EAC6DuV,KAAK/B,MAAMtH,kBADxE4J,EAAA9V,EACC8I,KAAMiN,OADP,IAAAD,EAC2B,YAD3BA,EAAAE,EAAAhW,EACwCoN,YADxC,IAAA4I,EAC+CC,GAAAtU,EAD/CqU,EAEDE,IAEFjC,YAAa8B,EACbb,YAAarB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKgC,EAAM6H,KAAK,mBAGrCkB,SAAS,IAGT5F,IAAK,eACL4D,QAASoB,KAAK/B,MAAM4C,gBACpBvB,WAAYhB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKiL,GAAA1U,EAAQsT,KAAK,iBACtChB,YAAa,SACbmB,cAAe,wBAIf7E,IAAK,iBACL4D,QAASoB,KAAK/B,MAAM8C,kBACpBzB,WAAYhB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKmL,GAAA5U,EAAUsT,KAAK,iBACxChB,YAAa,WACbmB,cAAe,0BAEfe,SAAS,IAET5F,IAAK,gBACL4D,QAASoB,KAAK/B,MAAMgD,KACpBvC,YAAa,OACbwC,SAAU5C,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAAUH,EAAAlS,EAAAmS,cAACU,GAAA,YAAD,SAExB,OACEX,EAAAlS,EAAAmS,cAAA,WACED,EAAAlS,EAAAmS,cAACE,GAAA,GACC3R,GAAG,uBACHqU,sBAAsB,EACtBC,UAAWT,GAEXrC,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKgC,EAAM6H,KAAK,eAAelB,UAAU,gCAAgC6C,OAASC,MAAO,OAAQC,OAAQ,6NAzCzGrB,EAAA,WA6DpBtJ,GAAe/I,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CAXF,SAAA6I,GAAA,OACtBC,cAAeD,EAAME,UAAUD,cAC/BlJ,MAAOiJ,EAAME,UAAUnJ,QAGE,SAAA7D,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrCgT,gBAAA1J,GACA4J,kBAAAvJ,GACAyJ,KAAAjK,IACCpN,IAEuBiE,CAGxByS,KC3DFkB,GAAe3T,OAAAuS,GAAA,EAAf,CArBgB,SAAA3V,GAAA,IAAGgX,EAAHhX,EAAGgX,MAAOpC,EAAV5U,EAAU4U,GAAIqC,EAAdjX,EAAciX,MAAO3C,EAArBtU,EAAqBsU,KAArB,OACdT,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAMvC,EAAIqC,MAAOA,GACrB,SAAAvT,GAAe,IACV+S,EADF3L,EAAYpH,EAAZoH,MAMF,OAJIwJ,IACFmC,EAAW5C,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAAWM,IAItBT,EAAAlS,EAAAmS,cAACE,GAAA,GACCU,UAAWC,GAAA,EACXyC,SAAUtM,EACV8J,GAAIA,EACJX,YAAa+C,EACbP,SAAUA,4BC4BpBY,GA3Cc,SAAA7D,GAEZ,OAAOK,EAAAlS,EAAAmS,cAACE,GAAA,GAAKsD,WAAW,GAEpB9D,EAAMvQ,MAAML,IAAI,SAACW,EAAMoH,GAAP,OACdkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAKzD,IAAKhN,EAAKD,OAAQiU,UAAW,EAAGC,YAAa,GAEjD3D,EAAAlS,EAAAmS,cAAA,OAAK2D,IAAKlU,EAAK+H,cAAesL,OAASC,MAAO,OAASzL,IAAK7H,EAAKmU,kBACjE7D,EAAAlS,EAAAmS,cAACE,GAAA,GACC3R,GAAA,GAAAK,OAAOa,EAAKD,OAAZ,aACAlE,KAAMoU,EAAMmE,aAAe,SAAW,OACtCC,UAAWpE,EAAMmE,aACjBE,YAAcC,UAAW,UACzBlB,OAASC,MAAO,OAChBkB,cAAc,SACdC,WAAW,EACXhB,MAAOzT,EAAK+H,cAAc2M,UAAU,EAAG,IACvCC,MAAO1E,EAAMmE,cAAgBnE,EAAM2E,WAA5B,GAAAzV,OAAqE,OAAzBa,EAAKC,gBAA2BD,EAAKC,gBAAkB,IAAO,IACjH4U,SAAU5E,EAAMmE,aAAe,SAAAU,GAAA,OAAU7E,EAAM8E,aAAcjW,GAAIkB,EAAKlB,IAAMkB,EAAKD,OAAQE,gBAAiBqB,SAASwT,EAAQ,OAAS,SAAA9O,GAAA,MAAK,MAE3IsK,EAAAlS,EAAAmS,cAAA,QAAM8C,OAASC,MAAO,OAAS,UAE/BhD,EAAAlS,EAAAmS,cAACE,GAAA,GACC3R,GAAA,GAAAK,OAAOa,EAAKD,OAAZ,cACAlE,KAAMoU,EAAMmE,aAAe,SAAW,OACtCC,UAAWpE,EAAMmE,aACjBE,YAAcC,UAAW,UACzBlB,OAASC,MAAO,OAChBkB,cAAc,SACdC,WAAW,EACXhB,MAAOzT,EAAKgI,eAAe0M,UAAU,EAAG,IACxCC,MAAO1E,EAAMmE,cAAgBnE,EAAM2E,WAA5B,GAAAzV,OAAsE,OAA1Ba,EAAKE,iBAA4BF,EAAKE,iBAAmB,IAAO,IACnH2U,SAAU5E,EAAMmE,aAAe,SAAAU,GAAA,OAAU7E,EAAM8E,aAAcjW,GAAIkB,EAAKlB,IAAMkB,EAAKD,OAAQG,iBAAkBoB,SAASwT,EAAQ,OAAS,SAAA9O,GAAA,MAAK,MAE5IsK,EAAAlS,EAAAmS,cAAA,QAAM8C,OAASC,MAAO,OAAtB,KAAAnU,OAAoCa,EAAKyP,OAAS,EAAlD,OAGAa,EAAAlS,EAAAmS,cAAA,OAAK2D,IAAKlU,EAAKgI,eAAgBqL,OAASC,MAAO,OAASzL,IAAK7H,EAAKgV,8WCrC5E,IAiDAC,GAjDe,SAAAhF,GAAS,IAAAiF,EAC6BjF,EAA3CtO,eADc,IAAAuT,OACAxV,EAA6BuQ,EAA7BvQ,MAAO0B,EAAsB6O,EAAtB7O,kBAC7B,OAAOkP,EAAAlS,EAAAmS,cAACE,GAAA,GAAKsD,WAAW,GAEtBzD,EAAAlS,EAAAmS,cAACE,GAAA,GAAKuD,UAAW,EAAGC,YAAa,IAE7BhE,EAAMtO,QAEJ2O,EAAAlS,EAAAmS,cAACE,GAAA,GAAS4C,OAAS8B,UAAW,QAAUnI,IAAKrL,EAAQC,IACnD0P,WAAYhB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKlG,EAAQkI,KAAM6H,KAAK,iBAC5CI,UAAWxB,EAAAlS,EAAAmS,cAACE,GAAA,GAAOmB,OAAQ3B,EAAMmF,sBAAwB,EAAI,QAAU,QAA5D,GAAAjW,OAAwE8Q,EAAMmF,qBAA9E,SACX1E,YAAA,aAAAvR,OAA0BiC,EAA1B,eACAyQ,cAAA,WAAA1S,OAA0B8Q,EAAMb,OAAhC,gBAAAjQ,OAAqD8Q,EAAMZ,YAE7DiB,EAAAlS,EAAAmS,cAACE,GAAA,GAAS4C,OAAS8B,UAAW,QAC5BzE,YAAA,GAAAvR,OAAgB8Q,EAAMU,YAAc,cAAgB,aAApD,MAAAxR,OAAqEiC,EAArE,eACAyQ,cAAA,GAAA1S,OAAkB8Q,EAAMU,YAAc,GAAK,0BAEjDL,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,OAGFH,EAAAlS,EAAAmS,cAACE,GAAA,GAAKuD,UAAW,EAAGC,YAAa,GAC/B3D,EAAAlS,EAAAmS,cAACE,GAAA,GAAKsD,WAAW,GAEbsB,GAAI,IAAIC,MAAMrF,EAAMsF,UAAUlW,IAAI,SAAC2G,EAAGoB,GAAJ,OAChCkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAKzD,IAAK5F,EAAG4M,UAAW,EAAGC,YAAa,GACvC3D,EAAAlS,EAAAmS,cAACE,GAAA,GACCD,UAAA,GAAArR,OAAcmC,SAASF,EAAmB,MAAQgG,EAAI,EAAI,2BAA6B,GAAvF,6HACAwJ,QAAS,SAAA4E,GAAOvF,EAAMwF,OAAOrO,EAAI,EAAI,GAAIzF,EAAQC,MACjDyR,OAASC,MAAO,MAAOC,OAAQ,MAAOmC,QAAS,QAC9CtO,EAAI,EAJP,aAWVkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAKuD,UAAW,EAAGC,YAAa,GAC/B3D,EAAAlS,EAAAmS,cAACuD,GAAU7D,IAGXA,EAAM0F,cACNrF,EAAAlS,EAAAmS,cAACE,GAAA,GAAKuD,UAAW,EAAGC,YAAa,GAAIzD,UAAU,kBAC7CF,EAAAlS,EAAAmS,cAACE,GAAA,GAAOmF,QAAA,EAAO9E,SAAA,EAAQF,QAAS,SAAA4E,GAAA,OAAKvF,EAAM4F,OAAOnW,EAAOiC,EAAQC,OAAjE,UADF,IAC0F,itCCjC1FkU,yRACJpN,OAAUsG,eAAe,KAQzB+G,oBAAsB,kBAAMC,EAAKC,UAAWjH,eAAgBgH,EAAKtN,MAAMsG,wFAPnD,IAAAkH,EAC2BlE,KAAK/B,MAA1C7O,EADU8U,EACV9U,kBAAmB1B,EADTwW,EACSxW,MAAO+V,EADhBS,EACgBT,OACb,IAAjB/V,EAAMvC,QACRsY,EAAOrU,oCAOT,OAAO4Q,KAAKtJ,MAAMsG,cAEhBsB,EAAAlS,EAAAmS,cAAA,WACED,EAAAlS,EAAAmS,cAACP,GAAkBgC,KAAK/B,OACxBK,EAAAlS,EAAAmS,cAACE,GAAA,GAAKuD,UAAW,EAAGC,YAAa,GAAIzD,UAAU,kBAC7CF,EAAAlS,EAAAmS,cAACE,GAAA,GAAOmF,QAAA,EAAO9E,SAAA,EAAQF,QAASoB,KAAK+D,qBAArC,YAIJzF,EAAAlS,EAAAmS,cAAC0E,GAADkB,MAAiBnE,KAAK/B,OAAO4F,OAAQ7D,KAAK+D,uOArBxB7D,EAAA,WA2CxB/F,GAAetM,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CAlBF,SAAA6I,GAAS,IAAAjM,KAAA2Z,EAAA3Z,EACvBkU,mBADuB,IAAAyF,KAAAC,EAAA5Z,EACH2X,oBADG,IAAAiC,KAAAC,EAAA7Z,EACkBkZ,oBADlB,IAAAW,KAEzBxZ,EAAWkS,GAActG,EAAOA,EAAMyD,UAAU/K,mBAFvByH,EAO3BH,EAAM/I,MAHRsB,OAJ6BsV,GAAA1N,OAAA,IAAAA,QAK3BvD,WAAciQ,GALagB,OAAA,IAAAA,QAKbhB,QAGlB,OAAAY,MAAYvH,GAAYlG,IAAQ5L,WAAU6T,cAAayD,eAAcuB,eAAcJ,aAK1D,SAAA3Z,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrCkV,YAAApK,GACA8K,OAAA7K,IACChP,IAEuBiE,CAGxBiW,u0CCxCIU,eACJ,SAAAC,EAAYxG,GAAO,IAAA+F,EAAA,mGAAAU,CAAA1E,KAAAyE,IACjBT,EAAAW,GAAA3E,KAAA4E,GAAAH,GAAAI,KAAA7E,KAAM/B,KAcR6G,kBAAoB,WACU,IAAxBd,EAAKtN,MAAMqO,UACbf,EAAKC,UAAWc,SAAU,IAC1Bf,EAAKC,UAAWe,aAAa,MAG7BhB,EAAKC,UAAWc,SAAUf,EAAKtN,MAAMqO,SAAW,IAChDf,EAAKC,UAAWe,aAAa,MApB/BhB,EAAKtN,OACHsO,aAAa,EACbD,SAAU,GAJKf,qEAQC,IAAAE,EAC2BlE,KAAK/B,MAA1C7O,EADU8U,EACV9U,kBAAmB1B,EADTwW,EACSxW,MAAO+V,EADhBS,EACgBT,OACb,IAAjB/V,EAAMvC,QACRsY,EAAOrU,oCAgBT,OAAOkP,EAAAlS,EAAAmS,cAAA,WACLD,EAAAlS,EAAAmS,cAAC0E,GAAWjD,KAAK/B,OAEf+B,KAAKtJ,MAAMsO,aAAehF,KAAK/B,MAAM0F,cACrCrF,EAAAlS,EAAAmS,cAAC2B,EAAA,SAAD,KACE5B,EAAAlS,EAAAmS,cAACE,GAAA,GAAOG,QAASrI,EAAa0O,MAAM,cAAclG,MAAA,EAAKD,SAAA,EAAQE,WAAA,GAAUV,EAAAlS,EAAAmS,cAACU,GAAA,SAAD,OACzEX,EAAAlS,EAAAmS,cAACE,GAAA,GAAOG,QAASoB,KAAK/B,MAAMY,cAAeE,MAAA,EAAKD,SAAA,EAAQE,WAAA,GAAUV,EAAAlS,EAAAmS,cAACU,GAAA,OAAD,OAClEX,EAAAlS,EAAAmS,cAACE,GAAA,GAAOG,QAASoB,KAAK/B,MAAMiH,WAAYnG,MAAA,EAAKD,SAAA,EAAQE,WAAA,GAAUV,EAAAlS,EAAAmS,cAACU,GAAA,UAAD,OAC/DX,EAAAlS,EAAAmS,cAACE,GAAA,GAAOG,QAASoB,KAAK/B,MAAMjP,SAAU+P,MAAA,EAAKD,SAAA,EAAQE,WAAA,GAAUV,EAAAlS,EAAAmS,cAACU,GAAA,cAAD,OAC7DX,EAAAlS,EAAAmS,cAACE,GAAA,GAAOG,QAASoB,KAAK/B,MAAMkH,YAAapG,MAAA,EAAKD,SAAA,EAAQE,WAAA,GAAUV,EAAAlS,EAAAmS,cAACU,GAAA,WAAD,QAGpEX,EAAAlS,EAAAmS,cAACE,GAAA,GAAeG,QAASoB,KAAK8E,kBAAmBhY,GAAG,+BAA+BsY,OAAA,qNAxCrElF,EAAA,WAgEpBmF,GAAexX,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CAnBF,SAAA6I,GACtB,IAD+BG,EAM3BH,EAAM/I,MAHRsB,OAH6BsV,GAAA1N,OAAA,IAAAA,QAI3BvD,WAAciQ,GAJagB,OAAA,IAAAA,QAIbhB,QAGlB,2UAAA+B,ICrEyB,SAAA5O,GAAS,IAAA6O,EACC7O,EAAM/I,MAAnCyB,EAD4BmW,EAC5BnW,kBAAmB1B,EADS6X,EACT7X,MACnBC,EAAQ2D,GAAQoF,GAStB,OARI/I,IACFD,EAAQgJ,EAAM/I,MAAM8K,gBAQpB/K,MANFA,EAAQG,OACLC,KAAKJ,GACL5B,OAAO,SAAAiC,GAAA,OAAUL,EAAMK,GAAQhC,SAAWqD,IAC1C/B,IAAI,SAAAU,GAAA,OAAAyX,IAAazX,UAAWL,EAAMK,MAClC+O,KAAK,SAAC1Q,EAAG2Q,GAAJ,OAAW,GAAK3Q,EAAE2J,eAAeyH,cAAcT,EAAEhH,iBAGvD3G,oBACAuU,aAAchW,EACdyU,aAAczU,GDsDJ8X,CAAY/O,IAAQkM,YANb,EAMyBW,aAGnB,SAAA3Z,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrC4V,OAAAtQ,EACA0Q,OAAAhQ,EACAkP,YAAA3R,EACAsU,UAAA1S,EACA6L,cAAAhO,EACAqU,WAAA3T,GACC3H,IAEuBiE,CAGxB2W,KECFmB,GAAe9X,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CAVF,SAAA6I,GACtB,IDxDmCjM,EAAcK,EAAuBe,ECwDlE6M,EAAchC,EAAM/I,MAAM+K,YAC1BkN,EAAetU,GAAQoF,GAC7B,OAASmP,uBD1D0Bpb,EC0DmBiM,ED1DL5L,EAAdL,EAAGkF,QAAW7E,SAAuBe,EAArCpB,EAA0BmB,QAAWC,SACxEgC,OAAOC,KAAKhD,GAAUuC,IAAI,SAAA+H,GAAA,OACxB7B,KAAMzI,EAASsK,GAAG7B,KAClBuS,MAAOhb,EAASsK,GAAGwC,WACnBC,KAAM/M,EAASsK,GAAGyC,KAClBjI,IAAK9E,EAASsK,GAAGxF,IACjB2T,QAAS1X,EACNC,OAAO,SAAArC,GAAA,OAAKA,EAAE4B,YAAcP,EAASsK,GAAGxF,KAA6B,OAAtBnG,EAAEwE,iBAAmD,OAAvBxE,EAAEyE,mBAC/Eb,IAAI,SAAA5D,GAAA,OAAK6F,SAAS7F,EAAEsC,OAAQ,MAC5BgJ,OAAO,SAACgR,EAAKC,GAOZ,MANyB,qBAAdD,EAAIC,GACbD,EAAIC,GAAQ,EAGZD,EAAIC,IAAS,EAERD,WC0CiDrN,cAAakN,iBAGlD,SAAAhc,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrCoY,eAAA/P,GACCtM,IAEuBiE,CA7DT,SAAApD,GAA0E,IAAvEob,EAAuEpb,EAAvEob,sBAAuBI,EAAgDxb,EAAhDwb,eAAgBvN,EAAgCjO,EAAhCiO,YAAakN,EAAmBnb,EAAnBmb,aAEtE,OAAOtH,EAAAlS,EAAAmS,cAACE,GAAA,GAAKsD,WAAW,GAEpB8D,EAAsBxY,IAAI,SAACsC,EAASyF,GAAV,OACxBkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAKzD,IAAK5F,EAAGoJ,UAAU,uBACtBF,EAAAlS,EAAAmS,cAACE,GAAA,GACCwG,MAAOtV,EAAQ4D,KACf2S,SACoB,eAAlBvW,EAAQmW,MAAyBxH,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKiL,GAAA1U,EAAQsT,KAAK,iBAAoBpB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKmL,GAAA5U,EAAUsT,KAAK,iBAE7GyG,OAAQ7H,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKlG,EAAQkI,KAAM6H,KAAK,mBAGxCkG,GACAtH,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,GAAO2H,MAAA,EAAKxH,QAAS,SAAA4E,GAAA,OAAKyC,GAAe,EAAOtW,EAAQC,OAAzD,uBAGJ0O,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,GAAU4H,OAAA,GACT/H,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,eACAH,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,4BAGJH,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAEI5Q,OAAOC,KAAK6B,EAAQ4T,SAASlW,IAAI,SAACoC,EAAO2F,GAAR,OAC/BkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAASzD,IAAK5F,GACbkJ,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAAchP,GACd6O,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAAc9O,EAAQ4T,QAAQ9T,aAUhD6O,EAAAlS,EAAAmS,cAACE,GAAA,GACC3R,GAAG,uBACHwZ,QAAS5N,EACT6N,OAAQ,SAAA/C,GAAA,OAAKyC,GAAe,IAC5BO,SAAUlI,EAAAlS,EAAAmS,cAACE,GAAA,GAAO2H,MAAA,EAAKpH,WAAA,EAAUJ,QAAS,SAAA4E,GAAA,OAAKyC,GAAe,KAApD,cACVhB,MAAM,8BCPZwB,GAAe5Y,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CANF,SAAA6I,GACtB,OAASgQ,wBFnB2BvY,EEmBoBuI,EFnBN5L,EAAdqD,EAAGwB,QAAW7E,SAAuBe,EAArCsC,EAA0BvC,QAAWC,SAAqB6B,EAA1DS,EAAiDR,MAASD,MAC9FG,OAAOC,KAAKhD,GAAUuC,IAAI,SAAA+H,GAAA,OACxB7B,KAAMzI,EAASsK,GAAG7B,KAClBuS,MAAOhb,EAASsK,GAAGwC,WACnBC,KAAM/M,EAASsK,GAAGyC,KAClB0L,QAAS1X,EACNC,OAAO,SAAArC,GAAA,OAAKA,EAAE4B,YAAcP,EAASsK,GAAGxF,KAAON,SAAS7F,EAAEsC,OAAQ,KAAO,KACzEsB,IAAI,SAAA5D,GAAA,OAAA+b,MAAW9X,EAAMjE,EAAEsE,QAAYtE,KACnCqT,KAAK,SAAC1Q,EAAG2Q,GAAJ,OAAUzN,SAASlD,EAAEL,OAAQ,IAAMuD,SAASyN,EAAEhR,OAAQ,WAR5B,IAAAoC,EAAcrD,EAAuBe,EAAqB6B,GEsBrE,SAAA9D,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,IAAuBjE,IAEpCiE,CA7CR,SAAApD,GAAA,IAAGic,EAAHjc,EAAGic,uBAAH,OAChBpI,EAAAlS,EAAAmS,cAACE,GAAA,GAAKsD,WAAW,GAEb2E,EAAuBrZ,IAAI,SAACsC,EAASyF,GAAV,OACzBkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAKzD,IAAK5F,EAAGoJ,UAAU,uBACtBF,EAAAlS,EAAAmS,cAACE,GAAA,GACCwG,MAAOtV,EAAQ4D,KACf2S,SACoB,eAAlBvW,EAAQmW,MAAyBxH,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKiL,GAAA1U,EAAQsT,KAAK,iBAAoBpB,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKmL,GAAA5U,EAAUsT,KAAK,iBAE7GyG,OAAQ7H,EAAAlS,EAAAmS,cAACE,GAAA,GAAO5I,IAAKlG,EAAQkI,KAAM6H,KAAK,mBAE1CpB,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,GAAU4H,OAAA,GACT/H,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAACE,GAAA,GAAYkI,UAAU,EAAOtF,OAASqC,QAAW,MAAlD,UACApF,EAAAlS,EAAAmS,cAACE,GAAA,GAAYkI,UAAU,EAAOtF,OAASqC,QAAW,MAAlD,SACApF,EAAAlS,EAAAmS,cAACE,GAAA,GAAYkI,UAAU,EAAOtF,OAASqC,QAAW,OAClDpF,EAAAlS,EAAAmS,cAACE,GAAA,GAAYkI,UAAU,EAAOtF,OAASqC,QAAW,SAGtDpF,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAEI9O,EAAQ4T,QAAQlW,IAAI,SAACW,EAAMoH,GAAP,OAClBkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAASzD,IAAK5F,GACbkJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAYkI,UAAU,EAAOtF,OAASqC,QAAW,IAAKnC,OAAU,SAAWvT,EAAKjC,OAAjF,QACAuS,EAAAlS,EAAAmS,cAACE,GAAA,GAAYmI,QAAS,EAAGD,UAAU,EAAOtF,OAASqC,QAAW,IAAKnC,OAAU,SAA7E,GAAApU,OAA2Fa,EAAK+H,cAAhG,KAAA5I,OAAiHa,EAAKC,gBAAtH,QAAAd,OAA4Ia,EAAKE,iBAAjJ,KAAAf,OAAqKa,EAAKgI,uyBCvC1L6Q,gPAEgB,IAAA3C,EACwDlE,KAAK/B,MAAvE7O,EADU8U,EACV9U,kBAAmB1B,EADTwW,EACSxW,MAAO+V,EADhBS,EACgBT,OAAwBpY,EADxC6Y,EACwBvU,QAAWC,IAChC,IAAjBlC,EAAMvC,QACRsY,EAAOrU,EAAmB/D,oCAK5B,OAAOiT,EAAAlS,EAAAmS,cAAC0E,GAAWjD,KAAK/B,uNAVNiC,EAAA,WA6CtB4G,GAAejZ,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CA/BF,SAAC6I,EAAOqQ,GAC9B,IAAM1b,EAAY0b,EAASxR,MAAMyR,OAAO3b,UAClC+D,EAAoBsH,EAAM9K,QAAQwD,kBAClCgU,EAAuBpG,GAActG,GAAOxJ,KAAK,SAAAyC,GAAA,OAAWA,EAAQC,MAAQvE,IAAW2R,cAHlDiK,EASvC9J,GAAYzG,EAAOrL,EAAW+D,GAJhCO,EALyCsX,EAKzCtX,QACAjC,EANyCuZ,EAMzCvZ,MACA0P,EAPyC6J,EAOzC7J,OACAC,EARyC4J,EAQzC5J,SARyCxG,EAgBvCH,EAAM/I,MAJRsB,OAZyCsV,GAAA1N,OAAA,IAAAA,QAavCvD,WAAciQ,GAbyBgB,OAAA,IAAAA,QAazBhB,QACdvU,EAduC6H,EAcvC7H,SAOJ,OAAStB,QAAO0B,oBAAmBmU,UAAS5T,UAASyN,SAAQC,WAAU+F,uBAAsBhB,aAHxEpT,GAAY0H,EAAME,UAAUD,cAAc/G,MAAQvE,EAGoCsY,aAFtFjN,EAAME,UAAUD,cAAc/G,MAAQvE,IAAc2D,GAAYM,SAASF,GAAqB,KAK1F,SAAAxF,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrC4V,OAAAzY,EACA6Y,OAAAzV,EACA2U,YAAAhU,EACA2W,UAAA1S,GACCpJ,IAEuBiE,CAGxBgZ,8wBCrDmBK,qOAGjB,IAAMC,IAEFC,OAAQ,iBACRC,UAAW,cACXC,UAAW,oLAGXF,OAAQ,WACRC,UAAW,SACXC,UAAW,iPAGXF,OAAQ,2BACRC,UAAW,wBACXC,UAAW,uJAGXF,OAAQ,0BACRC,UAAW,8BACXC,UAAW,mGAGXF,OAAQ,qBACRC,UAAW,wCACXC,UAAW,8FAGXF,OAAQ,oBACRC,UAAW,WACXC,UAAW,8CAGXF,OAAQ,0BACRC,UAAW,eACXC,YAEIC,MAAO,uBACPC,MAAO,sBACPC,MAAOnJ,EAAAlS,EAAAmS,cAACU,GAAA,cAAD,QAGPsI,MAAO,kBACPC,MAAO,WACPC,MAAOnJ,EAAAlS,EAAAmS,cAACU,GAAA,WAAD,QAGPsI,MAAO,kBACPC,MAAO,UACPC,MAAOnJ,EAAAlS,EAAAmS,cAACU,GAAA,WAAD,UAKf,OACEX,EAAAlS,EAAAmS,cAACE,GAAA,GAASiJ,UAAU,WAAWhb,KAAM,GAAIyS,UAAU,WAE/CgI,EAAO9Z,IAAI,SAAA5C,GAAA,IAAG2c,EAAH3c,EAAG2c,OAAQC,EAAX5c,EAAW4c,UAAWC,EAAtB7c,EAAsB6c,UAAtB,OACThJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAKzD,IAAKoM,GACT9I,EAAAlS,EAAAmS,cAACE,GAAA,GAAUwG,MAAOmC,EAAQlB,SAAUmB,IAElC/D,MAAMqE,QAAQL,GACVhJ,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAEE6I,EAAUja,IAAI,SAAAc,EAA0BiH,GAA1B,IAAGmS,EAAHpZ,EAAGoZ,MAAOC,EAAVrZ,EAAUqZ,MAAOC,EAAjBtZ,EAAiBsZ,MAAjB,MAA0C,cAAVF,EAC1CjJ,EAAAlS,EAAAmS,cAACE,GAAA,GAAUzD,IAAK5F,EAAGiM,OAASuG,gBAAmB,WAAa9I,SAAA,EAAQJ,YAAa8I,IACjFlJ,EAAAlS,EAAAmS,cAACE,GAAA,GACDzD,IAAK5F,EACL8L,SAAU5C,EAAAlS,EAAAmS,cAACE,GAAA,GAASK,SAAA,GAAS2I,GAC7B/I,YAAa6I,EACb1H,cAAe2H,OAMvBlJ,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KACEH,EAAAlS,EAAAmS,cAAA,SAAI+I,wNA/EWpH,EAAA,0xBC0BnC2H,eAxBE,SAAAC,EAAY7J,GAAO,IAAA+F,EAAA,mGAAA+D,CAAA/H,KAAA8H,IACjB9D,EAAAgE,GAAAhI,KAAAiI,GAAAH,GAAAjD,KAAA7E,KAAM/B,KAKRtU,SAAW,WACmB,IAAxBqa,EAAKtN,MAAMqO,UACbf,EAAKC,UAAWc,SAAU,IAC1Bf,EAAK/F,MAAMtU,YAGXqa,EAAKC,UAAWc,SAAUf,EAAKtN,MAAMqO,SAAW,KAVlDf,EAAKtN,OACHqO,SAAU,GAHKf,0DAgBjB,OAAO1F,EAAAlS,EAAAmS,cAACE,GAAA,GAAO6H,QAAStG,KAAK/B,MAAM1S,YACjC+S,EAAAlS,EAAAmS,cAAA,WACED,EAAAlS,EAAAmS,cAAA,OAAKK,QAASoB,KAAKrW,SAAUkM,IAAKqS,GAAA9b,EAAMoS,UAAU,kBAAkB0D,IAAI,SACxE5D,EAAAlS,EAAAmS,cAAA,OAAKC,UAAU,iOApBE0B,EAAA,gxBCmBzB,IAAMiI,KACJzG,OAAO,EACPD,MAAO,gBACPpC,GAAI,IACJN,KAAMT,EAAAlS,EAAAmS,cAACU,GAAA,OAAD,MACNmJ,QAAQ,IAQR3G,MAAO,WACPpC,GAAI,SACJN,KAAMT,EAAAlS,EAAAmS,cAACU,GAAA,SAAD,MACNmJ,QAAQ,IAGR3G,MAAO,YACPpC,GAAI,aACJN,KAAMT,EAAAlS,EAAAmS,cAACU,GAAA,YAAD,MACNmJ,QAAQ,IAGR3G,MAAO,SACPpC,GAAI,UACJN,KAAMT,EAAAlS,EAAAmS,cAACU,GAAA,cAAD,MACNmJ,QAAQ,IAGR3G,MAAO,gBACPpC,GAAI,YACJN,KAAMT,EAAAlS,EAAAmS,cAACU,GAAA,gBAAD,MACNmJ,QAAQ,IAGR3G,MAAO,YACPpC,GAAI,aACJN,KAAMT,EAAAlS,EAAAmS,cAACU,GAAA,QAAD,QAIFoJ,gPAEFrI,KAAK/B,MAAMqK,gDAEJ,IAAAtE,EAAAhE,KACDW,EAAQwH,GAASrc,OAAO,SAAArB,GAC5B,MAAc,cAD6BA,EAAZgX,OAEtBuC,EAAK/F,MAAMjP,WAKtB,OACEsP,EAAAlS,EAAAmS,cAACoD,GAAA,GACC4G,OAAQ,SAAApa,KAAG8C,SAAH,OACNqN,EAAAlS,EAAAmS,cAACE,GAAA,GACC+J,cAAelK,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAAUH,EAAAlS,EAAAmS,cAACU,GAAA,OAAD,OACzBwJ,eAAgBnK,EAAAlS,EAAAmS,cAACE,GAAA,EAAD,KAAUH,EAAAlS,EAAAmS,cAACU,GAAA,YAAD,OAC1ByJ,YAAapK,EAAAlS,EAAAmS,cAAA,OAAK2D,IAAI,GAAGrM,IAAKqS,GAAA9b,IAC9Buc,aAAc3E,EAAK/F,MAAMmJ,OACzBe,SAAUxH,EAAMtT,IAAI,SAAA4Q,GAAA,OAASK,EAAAlS,EAAAmS,cAACiD,GAAD3T,OAAAyP,UAAaW,GAAOjD,IAAKiD,EAAMoB,QAC5DuJ,eAAgBtK,EAAAlS,EAAAmS,cAAC3H,GAAD,OAEhB0H,EAAAlS,EAAAmS,cAACsK,GAAA,EAAD,KACEvK,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMD,OAAA,EAAME,KAAK,IAAIzC,UAAWgB,KACjC7B,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAK,aAAazC,UAAWhF,KAEpCmE,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAK,sBAAsBzC,UAAW2H,KAC7CxI,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAK,SAASzC,UAAWkG,KAChC/G,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAK,UAAUzC,UAAW+H,KACjC5I,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAK,YAAYzC,UAAWwG,KACnCrH,EAAAlS,EAAAmS,cAACoD,GAAA,GAAMC,KAAK,aAAazC,UAAWsH,MAEtCnI,EAAAlS,EAAAmS,cAACE,GAAA,GACC3R,GAAG,YACHgc,OAAQ9E,EAAK/F,MAAMjU,UACnB+e,UAAU,EACVC,gBAAiB,IACjBC,UAAWjF,EAAK/F,MAAMtT,kBACxB2T,EAAAlS,EAAAmS,cAACsJ,GAAe7D,EAAK/F,2NAvCfiC,EAAA,WAsElBgJ,GAAerb,OAAAuS,GAAA,EAAf,CAA0BvS,OAAAwS,EAAA,EAAAxS,CAtBF,SAAA6I,GAAS,IAAAG,EAM3BH,EAAM/I,MAJRsB,OAF6BsV,GAAA1N,OAAA,IAAAA,QAG3BvD,WAAoB8T,EAHO7C,EAGbhR,KAAc4V,EAHD5E,EAGC4E,SAC5Bna,EAJ2B6H,EAI3B7H,SAGJ,OACEhF,UAAW0M,EAAMkD,IAAI5P,UACrBuB,WAAYmL,EAAMnL,WAAWA,WAC7B6b,SACA+B,WACAna,aAIuB,SAAApF,GAAA,OAAYiE,OAAAwL,EAAA,mBAAAxL,EACrClD,kBACA2d,aAAAnX,EACAxH,YACCC,IAEuBiE,CAGxBwa,u4BCvImBe,eACnB,SAAAC,EAAYpL,GAAO,IAAA+F,EAAA,mGAAAsF,CAAAtJ,KAAAqJ,IACjBrF,EAAAuF,GAAAvJ,KAAAwJ,GAAAH,GAAAxE,KAAA7E,KAAM/B,KACDvH,OAAU+S,UAAU,GAFRzF,mEAKD0F,EAAOC,GACvBpT,IAEAyJ,KAAKiE,UAAWwF,UAAU,IAE1BzJ,KAAKiE,UAAWxW,0UAAAmc,IAAYF,EAAUC,sCAG/B,IAAAE,EAAA7J,KACP,OAAIA,KAAKtJ,MAAM+S,SAGXnL,EAAAlS,EAAAmS,cAAA,WACED,EAAAlS,EAAAmS,cAAA,uGACAD,EAAAlS,EAAAmS,cAAA,WAAM1Q,OAAOC,KAAKkS,KAAKtJ,MAAMjJ,OAAOJ,IAAI,SAAAqc,GAAA,OAASpL,EAAAlS,EAAAmS,cAAA,SAAIsL,EAAKnT,MAAMjJ,MAAMic,OACtEpL,EAAAlS,EAAAmS,cAACE,GAAA,GAAOmF,QAAA,EAAO9E,SAAA,EAAQgL,cAAc,qBAAqBlL,QAAS,SAAA4E,GAAA,OAAKqG,EAAK5F,UAAWwF,UAAU,MAAlG,OAICzJ,KAAK/B,MAAM8L,yNAzBY7J,EAAA,WCK5B8J,UAAcC,QACW,cAA7BjZ,OAAOC,SAASiZ,UAEe,UAA7BlZ,OAAOC,SAASiZ,UAEhBlZ,OAAOC,SAASiZ,SAAS3U,MACvB,4DAsCN,SAAS4U,GAAgBC,EAAOnb,GAC9Bob,UAAUC,cACPC,SAASH,GACT3e,KAAK,SAAA+e,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhU,QACf2T,UAAUC,cAAcO,YAK1B5gB,QAAQC,IAAI,6CAGR+E,EAAO6b,UACT7b,EAAO6b,SAASN,KAMlBvgB,QAAQC,IAAI,sCAGR+E,EAAO8b,WACT9b,EAAO8b,UAAUP,SAO5Bhd,MAAM,SAAAkc,GACLzf,QAAQyf,MAAM,4CAA6CA,KC9EjE,IAAMsB,GAASC,SAASC,cAAc,SAEtCrd,OAAAsd,EAAA,OAAAtd,CACEyQ,EAAAlS,EAAAmS,cAAC8B,EAAA,GAAS3E,MAAOC,IACf2C,EAAAlS,EAAAmS,cAAC6M,GAAA,aAAYC,QAAQ,aAAava,UAAWA,IAC3CwN,EAAAlS,EAAAmS,cAAC+M,EAAA,EAAD,KACEhN,EAAAlS,EAAAmS,cAAC6K,GAAD,KACE9K,EAAAlS,EAAAmS,cAAC2K,GAAD,UAKR8B,IDHK,SAAkB/b,GACvB,GAA6C,kBAAmBob,UAAW,CAGzE,GADkB,IAAIkB,IAAI,GAAwBva,OAAOC,UAC3Cua,SAAWxa,OAAOC,SAASua,OAIvC,OAGFxa,OAAOya,iBAAiB,OAAQ,WAC9B,IAAMrB,YAAW,GAAX,sBAEFJ,IA2DV,SAAiCI,EAAOnb,GAEtCmF,MAAMgW,GACH3e,KAAK,SAAAigB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASzX,QAAQzH,IAAI,gBAAgBof,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAMpgB,KAAK,SAAA+e,GACjCA,EAAasB,aAAargB,KAAK,WAC7BuF,OAAOC,SAASC,aAKpBiZ,GAAgBC,EAAOnb,KAG1BzB,MAAM,WACLvD,QAAQC,IACN,mEA/EA6hB,CAAwB3B,EAAOnb,GAI/Bob,UAAUC,cAAcuB,MAAMpgB,KAAK,WACjCxB,QAAQC,IACN,+GAMJigB,GAAgBC,EAAOnb,MCnB/Bsb","file":"static/js/main.611af033.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.f8b97394.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.09aea0f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd3e4e4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/deslogado.32710d02.svg\";","export const CARREGANDO_DESLIGADO = \"carregando/CARREGANDO_DESLIGADO\";\nexport const CARREGANDO_LIGADO = \"carregando/CARREGANDO_LIGADO\";\nexport const cancelar = () => dispatch => dispatch({ type: CARREGANDO_DESLIGADO });\n\nexport const ligarCarregando = () => (dispatch, getState) => {\n  !getState().carregando.carregando && dispatch({ type: CARREGANDO_LIGADO });\n};","\nimport { CARREGANDO_DESLIGADO } from \"../carregando/actions\";\nexport const MENSAGENS = \"app/MENSAGENS\";\nexport const LIMPAR_MENSAGENS = \"app/LIMPAR_MENSAGENS\";\n\nexport const snapshotToArray = querySnapshot => {\n    let returnArr = [];\n    querySnapshot.forEach(doc => {\n        let item = { ...doc.data(), id: doc.id };\n        returnArr.push(item);\n    });\n    return returnArr;\n};\n\nconst adicionarMensagensFirebase = ({ message, code, name }) => {\n\n    switch (code) {\n        case \"permission-denied\":\n            return {\n                type: MENSAGENS,\n                mensagens: [{ text: \"Permissão Negada!\", action: \"Fechar\" }]\n            };\n        case \"resource-exhausted\":\n            return {\n                type: MENSAGENS,\n                mensagens: [{ text: \"Cota diária de acesso ao servidor acabou!\", action: \"Fechar\" }]\n            };\n        default:\n            return {\n                type: MENSAGENS,\n                mensagens: [{ text: message, action: \"Fechar\" }]\n            };\n    }\n};\n\nexport const adicionarMensagens = mensagens => dispatch => {\n    console.log(mensagens);\n\n    dispatch({ type: CARREGANDO_DESLIGADO });\n    if (typeof mensagens === 'string' || mensagens instanceof String) {\n        return dispatch({ type: MENSAGENS, mensagens: [{ text: mensagens, action: \"Fechar\" }] });\n    }\n    const { message, code, name } = mensagens;\n    if (message && code && name) {\n        return dispatch(adicionarMensagensFirebase(mensagens));\n    }\n\n    if (message) {\n        return dispatch({ type: MENSAGENS, mensagens: [{ text: message, action: \"Fechar\" }] });\n    }\n};\n\nexport const limparMensagens = () => dispatch => dispatch({ type: LIMPAR_MENSAGENS })\n\n","import firebase from \"firebase\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nexport const USUARIOS_LIMPAR = \"usuario/USUARIO_LIMPAR\";\nexport const USUARIOS_LISTAR = \"usuario/USUARIOS_LISTAR\"\nexport const ADICIONAR_USUARIO = \"usuario/ADICIONAR_USUARIO\";\nexport const ADICIONAR_USUARIOS = \"usuario/ADICIONAR_USUARIOS\";\nexport const REMOVER_USUARIO = \"usuario/REMOVER_USUARIO\";\n\nexport const buscarTodos = (forcarAtualizacao = false) => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  if (forcarAtualizacao) {\n    return firebase\n      .firestore()\n      .collection(\"usuarios\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          const usuario = { [doc.id]: { ...doc.data() } };\n          dispatch({ type: ADICIONAR_USUARIO, usuario })\n        });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(`Todos usuários em cache`);\n      })\n      .catch(erros => Promise.reject(dispatch(adicionarMensagens(erros))));\n  }\n  else {\n    return dispatch({ type: CARREGANDO_DESLIGADO });\n  }\n}\n\nexport const buscar = (usuarioId, forcarAtualizacao = false) => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  if (usuarioId) {\n    const usuario = getState().usuario.usuarios[usuarioId];\n    if (usuario) {\n      dispatch({ type: CARREGANDO_DESLIGADO });\n      return Promise.resolve(`Usuário ${usuario.uid} em cache`);\n    }\n    return firebase\n      .firestore()\n      .collection(\"usuarios\")\n      .doc(usuarioId)\n      .get()\n      .then(doc => {\n        const usuario = { [doc.id]: { ...doc.data() } };\n        dispatch({ type: ADICIONAR_USUARIO, usuario });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(`Usuário ${usuario.uid} buscado remotamente e colocado em cache`);\n      })\n      .catch(erros => Promise.reject(dispatch(adicionarMensagens(erros))));\n  }\n}\n\nexport const mapearUsuarioBolao = (usuarioFirebase = {}) => {\n\n  const { providerId = \"\", uid = \"\", photoURL = \"\", displayName = \"\" } = usuarioFirebase.providerData[0] || {};\n  return {\n    nome: displayName || usuarioFirebase.displayName,\n    email: usuarioFirebase.email,\n    foto: \"facebook.com\" === providerId ? `https://graph.facebook.com/${uid}/picture` : photoURL,\n    uid: usuarioFirebase.uid,\n    providerId,\n    ultimoLogin: usuarioFirebase.metadata.lastSignInTime\n  }\n}\n\nexport const limparUsuarios = () => dispatch => {\n\n  dispatch({\n    type: USUARIOS_LIMPAR\n  });\n}\n\n\n\n\n","import {\n  ADICIONAR_USUARIO,\n  USUARIOS_LISTAR,\n  USUARIOS_LIMPAR,\n  ADICIONAR_USUARIOS,\n  REMOVER_USUARIO\n} from \"./actions\";\n\nconst initialState = {\n  usuarios: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case ADICIONAR_USUARIO:\n      return {\n        ...state,\n        usuarios: { ...state.usuarios, ...action.usuario }\n      }\n    case ADICIONAR_USUARIOS:\n      return { ...state, usuarios: action.usuarios }\n    case REMOVER_USUARIO: {\n      const { [action.uid]: valor, ...usuarios } = state.usuarios;\n      return { ...state, usuarios };\n    }\n    case USUARIOS_LISTAR:\n      return {\n        ...state,\n        usuarios: action.usuarios\n      }\n    case USUARIOS_LIMPAR:\n      return {\n        ...state,\n        usuarios: {}\n      }\n    default:\n      return state\n  }\n}","import firebase from \"firebase\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nimport { buscar as buscarUsuarios } from \"../usuario/actions\";\nimport { buscarRodada, MAXIMO_JOGOS_RODADA } from \"../admin/actions\";\nimport { base10, primeiroTurno } from \"../admin/actions\";\n\nexport const RODADA_SELECIONADA = \"palpite/RODADA_SELECIONADA\";\nexport const ADICIONAR_PALPITE = \"palpite/ADICIONAR_PALPITE\";\nexport const ADICIONAR_PALPITES = \"palpite/ADICIONAR_PALPITES\";\nexport const MESCLAR_PALPITE_GABARITO = \"palpite/MESCLAR_PALPITE_GABARITO\";\nexport const REMOVER_PALPITES = \"palpite/REMOVER_PALPITES\";\n\n\nexport const buscarPalpites = (rodadaId = \"1\", usuarioId) => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n  dispatch(verificarDependencias(rodadaId, usuarioId))\n    .then(retorno => {\n      // var fire = firebase.firestore();\n      const palpites = getState().palpite.palpites;\n      const rodadaPalpites = palpites.filter(palpite => palpite.usuarioId === usuarioId && palpite.rodada === rodadaId);\n\n      if (rodadaPalpites.length === MAXIMO_JOGOS_RODADA) {\n        return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n      }\n\n      dispatch(ligarCarregando());\n      return firebase.firestore().collection(\"palpites\")\n        .where(\"usuarioId\", \"==\", usuarioId)\n        .where(\"rodada\", \"==\", rodadaId)\n        .get()\n        .then(querySnapshot => {\n          if (querySnapshot.size === MAXIMO_JOGOS_RODADA) {\n            querySnapshot.forEach(doc => {\n              const palpite = { id: doc.id, ...doc.data() };\n              dispatch({ type: ADICIONAR_PALPITE, palpite })\n            });\n            return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n          }\n\n          if (querySnapshot.metadata.fromCache) {\n            dispatch(adicionarMensagens(\"Você está off-line ou a cota diária de consultas no servidor acabou, aguarde até amanhã.\"))\n            return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n          }\n\n          let palpites = [];\n          querySnapshot.forEach(doc => {\n            palpites = [{ ...rodadaPalpites.find(p => p.id === doc.id), id: doc.id, ...doc.data() }];\n          });\n\n          palpites = [...palpites, ...rodadaPalpites.filter(p => !palpites.map(({ id }) => id).includes(p.id))]\n\n          return dispatch(reconciliarBase(palpites, usuarioId, rodadaId));\n        })\n        .catch(erros => {\n          dispatch(adicionarMensagens(erros));\n          return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n        });\n    })\n    .then(action => {\n      dispatch(action);\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nconst reconciliarBase = (palpites, usuarioId, rodadaId) => (dispatch, getState) => {\n  if (palpites.length < MAXIMO_JOGOS_RODADA) {\n    // Salvar Palpites default (copia do gabarito)\n    const jogos = getState().admin.jogos;\n    const rodadaGabarito = Object\n      .keys(jogos)\n      .filter(jogoId => jogos[jogoId].rodada === rodadaId)\n      .map(jogoId => ({ jogoId, ...jogos[jogoId] }));\n    const palpitesVazios = rodadaGabarito.map(jogo => ({ ...jogo, mandante_placar: null, visitante_placar: null }));\n    palpites = [...palpites, ...palpitesVazios.filter(p => !palpites.map(({ jogoId }) => jogoId).includes(p.jogoId))]\n    return dispatch(salvarPalpites(palpites, usuarioId));\n  }\n\n  if (palpites.length > MAXIMO_JOGOS_RODADA) {\n    const batch = firebase.firestore().batch();\n\n    palpites = getState().palpite.palpites.filter(p => p.usuarioId === usuarioId);\n    const p = palpites\n      .filter(p => palpites\n        .filter(pg => p.rodada === pg.rodada && p.usuarioId === pg.usuarioId && p.jogoId === pg.jogoId).length > 1\n      )\n      .filter(p => p.mandante_placar === null)\n      .map(({ id }) => {\n        const palpiteDocRef = firebase.firestore().collection(\"palpites\").doc(id);\n        batch.delete(palpiteDocRef);\n        return id;\n      });\n\n    return batch.commit()\n      .then(() => {\n        dispatch(adicionarMensagens(\"Palpites Atualizados com Sucesso!\"));\n        dispatch({ type: REMOVER_PALPITES, palpites: p });\n        return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n        return Promise.reject(erros)\n      });\n  }\n}\n\nexport const salvarPalpites = (palpites, usuarioId) => (dispatch, getState) => {\n  if (verificarPalpitesRepetidos(palpites)) {\n    return Promise.resolve(dispatch(adicionarMensagens(\"Palpites repetidos mais de 3 vezes\")));\n  } \n\n  dispatch(ligarCarregando());\n  const batch = firebase.firestore().batch();\n  palpites.forEach(p => {\n    const palpiteDocRef = p.id\n      ? firebase.firestore().collection(\"palpites\").doc(p.id)\n      : firebase.firestore().collection(\"palpites\").doc();\n    const { jogoId, mandante_placar, visitante_placar, rodada } = p;\n    const palpiteCorpo = { jogoId, usuarioId, mandante_placar, visitante_placar, rodada };\n    batch.set(palpiteDocRef, { ...palpiteCorpo });\n    // TODO: transportar isso para dentro do commit\n    const palpite = { id: palpiteDocRef.id, ...palpiteCorpo };\n    dispatch({ type: ADICIONAR_PALPITE, palpite });\n  });\n  return batch.commit()\n    .then(() => {\n      dispatch(adicionarMensagens(\"Palpites Atualizados com Sucesso!\"));\n      return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      return Promise.reject(erros)\n    });\n}\n\nexport const quandoMudar = palpite => (dispatch, getState) => {\n  const { config: { bloquear } } = getState().admin;\n  const { palpites: todosPalpites, rodadaSelecionada } = getState().palpite;\n  if (bloquear) {\n    return dispatch(adicionarMensagens(\"Bolão bloqueado!\"));\n  }\n  const { usuarioId, rodada } = todosPalpites.find(p => p.id === palpite.id);\n\n  if (parseInt(rodada, base10) <= primeiroTurno && bloquear) {\n    // return dispatch(adicionarMensagens(\"Primeiro turno bloqueado!\"));\n  }\n\n  let palpites = todosPalpites.filter(p => p.rodada === rodadaSelecionada && p.usuarioId === usuarioId);\n\n  palpite = { ...palpites.find(p => p.id === palpite.id), ...palpite };\n  palpites = [...palpites.filter(p => p.id !== palpite.id), { ...palpite }];\n\n  if (verificarPalpitesRepetidos(palpites)) {\n    return dispatch(adicionarMensagens(\"Palpites repetidos mais de 3 vezes\"));\n  }\n  dispatch({ type: ADICIONAR_PALPITE, palpite });\n}\n\nconst verificarPalpitesRepetidos = palpites => {\n  let repetidos = {};\n  palpites\n    .filter(p => p.mandante_placar !== null && p.visitante_placar !== null)\n    .map(p => `pm${p.mandante_placar}_pv${p.visitante_placar}`)\n    .forEach(p => repetidos[p] = repetidos[p] ? repetidos[p] + 1 : 1);\n  return (Object.keys(repetidos).find(chave => repetidos[chave] > 3));\n}\n\nexport const verificarDependencias = (rodadaId, usuarioId) => (dispatch, getState) => Promise\n  .all([dispatch(buscarUsuarios(usuarioId)), dispatch(buscarRodada(rodadaId))]);","import firebase from \"firebase\";\nimport { persistor } from \"../store\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nimport { ADICIONAR_PALPITE, ADICIONAR_PALPITES, REMOVER_PALPITES } from \"../palpite/actions\";\nimport { buscarTodos as buscarUsuarios, ADICIONAR_USUARIOS, REMOVER_USUARIO } from \"../usuario/actions\";\nimport { ehAdmin } from \"seguranca/actions\";\nexport const RODADA_SELECIONADA = \"admin/RODADA_SELECIONADA\";\nexport const RODADA_GABARITO = \"admin/RODADA_GABARITO\";\nexport const ADICIONAR_PLACAR = \"admin/ADICIONAR_PLACAR\";\nexport const ADICIONAR_JOGO = \"admin/ADICIONAR_JOGO\";\nexport const ADICIONAR_JOGOS = \"admin/ADICIONAR_JOGOS\";\nexport const ADICIONAR_JOGO_GABARITO = \"admin/ADICIONAR_JOGO_GABARITO\";\nexport const ALTERNAR_MODAL_EXCLUIR_USUARIO = \"admin/ALTERNAR_MODAL_EXCLUIR_USUARIO\";\nexport const ATUALIZAR_VERIFICARCAO = \"admin/ATUALIZAR_VERIFICARCAO\";\nexport const ADICIONAR_CONFIG = \"admin/ADICIONAR_CONFIG\";\n\nexport const base10 = 10;\nexport const primeiroTurno = 19;\nexport const MAXIMO_JOGOS_RODADA = 16;\n\nexport const verificarConexao = () => (dispatch, getState) => {\n  let { ultimaVerificacao, config = {} } = getState().admin;\n  const dezMinutosDepois = new Date(Date.now() + (10 * 60 * 1000)).getTime();\n\n  if (!ultimaVerificacao) {\n    return persistor.purge()\n      .then(retorno => {\n        dispatch({ type: ATUALIZAR_VERIFICARCAO, dezMinutosDepois });\n        return dispatch(atualizarTudo());\n      })\n      .then(doc => {\n        return window.location.reload();\n      });\n  }\n\n  if (Date.now() > ultimaVerificacao && config.atualizacaoAutomatica) {\n    dispatch({ type: ATUALIZAR_VERIFICARCAO, dezMinutosDepois });\n    return firebase.firestore().collection(\"admin\").doc(\"config\")\n      .get()\n      .then(doc => {\n        if (doc.exists && doc.data().sistemaConectado) {\n          console.log(\"Document data:\", doc.data());\n          return dispatch(atualizarTudo());\n        }\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n      });\n  }\n}\n\nexport const buscarConfig = () => dispatch => firebase\n  .firestore()\n  .collection(\"admin\")\n  .doc(\"config\")\n  .get()\n  .then(doc => {\n    if (doc.exists) {\n      return dispatch({ type: ADICIONAR_CONFIG, config: doc.data() });\n    }\n  })\n  .catch(erros => {\n    dispatch(adicionarMensagens(erros));\n  });\n\nexport const quandoMudar = time => (dispatch, getState) => {\n  if (ehAdmin(getState())) {\n    dispatch({ type: ADICIONAR_PLACAR, time });\n  }\n}\n\nexport const enviarTudo = () => (dispatch, getState) => {\n\n  if (ehAdmin(getState())) {\n    dispatch(ligarCarregando());\n    const {\n      palpite: { palpites },\n      usuario: { usuarios: usuariosCache },\n      admin: { jogos: jogosCache }\n    } = getState();\n\n    // const config = JSON.stringify(configCache);\n    const palpitesPrimeiroTurno = JSON.stringify(palpites.filter(p => parseInt(p.rodada, base10) <= primeiroTurno));\n    const palpitesSegundoTurno = JSON.stringify(palpites.filter(p => parseInt(p.rodada, base10) > primeiroTurno));\n    const usuarios = JSON.stringify(usuariosCache);\n    const jogos = JSON.stringify(jogosCache);\n\n    const batch = firebase.firestore().batch();\n\n    // const configDocRef = firebase.firestore().collection(\"admin\").doc(\"config\");\n    // batch.set(configDocRef, { config });\n\n    const palpitesPrimeiroTurnoDocRef = firebase.firestore().collection(\"admin\").doc(\"palpitesPrimeiroTurno\");\n    batch.set(palpitesPrimeiroTurnoDocRef, { palpitesPrimeiroTurno });\n\n    const palpitesSegundoTurnoDocRef = firebase.firestore().collection(\"admin\").doc(\"palpitesSegundoTurno\");\n    batch.set(palpitesSegundoTurnoDocRef, { palpitesSegundoTurno });\n\n    const usuariosDocRef = firebase.firestore().collection(\"admin\").doc(\"usuarios\");\n    batch.set(usuariosDocRef, { usuarios });\n\n    const jogosDocRef = firebase.firestore().collection(\"admin\").doc(\"jogos\");\n    batch.set(jogosDocRef, { jogos });\n\n    //dispatch({ type: ADICIONAR_PALPITE, palpite });\n\n    batch.commit()\n      .then(() => {\n        dispatch(adicionarMensagens(\"Dados Enviados em Lote com Sucesso!\"));\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n      });\n  }\n}\n\nexport const atualizarTudo = () => (dispatch, getState) => {\n\n  if (!ehAdmin(getState())) {\n    dispatch(ligarCarregando());\n    return firebase.firestore().collection(\"admin\").get()\n      .then(function (querySnapshot) {\n        let palpites = [];\n        querySnapshot.forEach(doc => {\n          switch (doc.id) {\n            case \"jogos\":\n              dispatch({ type: ADICIONAR_JOGOS, jogos: JSON.parse(doc.data()[doc.id]) })\n              break;\n            case \"palpitesPrimeiroTurno\":\n            case \"palpitesSegundoTurno\":\n              palpites = [...palpites, ...JSON.parse(doc.data()[doc.id])]\n              dispatch({ type: ADICIONAR_PALPITES, palpites })\n              break;\n            case \"usuarios\":\n              dispatch({ type: ADICIONAR_USUARIOS, usuarios: JSON.parse(doc.data()[doc.id]) })\n              break;\n            case \"config\":\n              const config = doc.data();\n              dispatch({ type: ADICIONAR_CONFIG, config });\n              break;\n            default:\n              dispatch(adicionarMensagens(\"Erro: Dados inesperados foram retornados do servidor!\"));\n              break;\n          }\n        });\n        dispatch(adicionarMensagens(\"Dados Atualizados em Lote com Sucesso!\"));\n        return Promise.resolve(\"OK\");\n      })\n      .catch(erros => {\n        return Promise.reject(erros);\n      });\n  }\n\n  const forcarAtualizacao = true;\n  return Promise.all([dispatch(buscarUsuarios(forcarAtualizacao)), dispatch(buscarRodadas(forcarAtualizacao))]);\n}\n\nexport const buscarRodadas = (forcarAtualizar = false) => dispatch => {\n  dispatch(ligarCarregando());\n\n  if (forcarAtualizar) {\n\n    return Promise.all([firebase.firestore().collection(\"jogos\").get(), firebase.firestore().collection(\"palpites\").get()])\n      .then(([querySnapshotJogos, querySnapshotPalpites]) => {\n        if (!querySnapshotJogos.empty) {\n          let jogos = {};\n          querySnapshotJogos.forEach(doc => {\n            const jogo = { [doc.id]: { ...doc.data() } };\n            jogos = { ...jogos, ...jogo };\n          });\n          dispatch({ type: ADICIONAR_JOGOS, jogos })\n        }\n        if (!querySnapshotPalpites.empty) {\n          let palpites = [];\n          querySnapshotPalpites.forEach(doc => {\n            const palpite = { id: doc.id, ...doc.data() };\n            palpites.push(palpite);\n          });\n          dispatch({ type: ADICIONAR_PALPITES, palpites })\n        }\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(\"\");\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n        return Promise.reject(erros);\n      });\n  }\n}\n\nexport const atualizar = (rodadaId, usuarioId) => dispatch => {\n  dispatch(ligarCarregando());\n\n  Promise.all([\n    firebase.firestore().collection(\"jogos\").where(\"rodada\", \"==\", rodadaId).get(),\n    usuarioId\n      ? firebase.firestore().collection(\"palpites\").where(\"usuarioId\", \"==\", usuarioId).where(\"rodada\", \"==\", rodadaId).get()\n      : Promise.resolve({ empty: true })\n  ])\n    .then(([querySnapshotJogos, querySnapshotPalpites]) => {\n      if (!querySnapshotJogos.empty) {\n        querySnapshotJogos.forEach(doc => {\n          const jogo = { [doc.id]: { ...doc.data() } };\n          dispatch({ type: ADICIONAR_JOGO, jogo })\n        });\n      }\n      if (!querySnapshotPalpites.empty) {\n        querySnapshotPalpites.forEach(doc => {\n          const palpite = { id: doc.id, ...doc.data() };\n          dispatch({ type: ADICIONAR_PALPITE, palpite })\n        });\n      }\n      dispatch(adicionarMensagens(`Gabarito e Jogos da Rodada ${rodadaId} atualizados com sucesso!`));\n      dispatch({ type: CARREGANDO_DESLIGADO });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nexport const buscarRodada = (rodadaId = \"1\") => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n\n  const jogos = getState().admin.jogos;\n  const rodadaGabarito = Object.keys(jogos)\n    .filter(jogoId => jogos[jogoId].rodada === rodadaId)\n    .map(jogoId => ({ jogoId, ...jogos[jogoId] }));\n\n  if (rodadaGabarito.length === MAXIMO_JOGOS_RODADA) {\n    dispatch({ type: CARREGANDO_DESLIGADO });\n    return Promise.resolve(`Gabarito da rodada ${rodadaId} em cache`);\n  }\n\n  return firebase.firestore()\n    .collection(\"jogos\")\n    .where(\"rodada\", \"==\", rodadaId)\n    .get()\n    .then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          const jogo = { [doc.id]: { ...doc.data() } };\n          dispatch({ type: ADICIONAR_JOGO, jogo })\n        });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(`Gabarito da rodada ${rodadaId} remota em cache`);\n      }\n      return Promise.reject(\"O Administrador ainda não cadastrou essa rodada\");\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      return Promise.reject(erros)\n    });\n}\n\nexport const buscarGabarito = (rodadaId = \"1\") => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n\n  if (ehAdmin(getState())) {\n    let {\n      config: {\n        campeonato = {}\n      } = {}\n    } = getState().admin;\n    if (campeonato.nome === \"Bolão da Copa\") {\n      buscarGabaritoCopa(rodadaId, campeonato.jogosPorRodada)\n        .then(rodadaGabarito => {\n          Object.keys(rodadaGabarito).forEach(jogoId => {\n            const jogoGabarito = { [jogoId]: { ...rodadaGabarito[jogoId] } };\n            dispatch({ type: ADICIONAR_JOGO_GABARITO, jogoGabarito })\n          });\n          dispatch({ type: CARREGANDO_DESLIGADO });\n          console.log(`Gabarito da rodada ${rodadaId} GloboEsporte em cache`);\n        })\n        .catch(erros => dispatch(adicionarMensagens(erros)));;\n    }\n    if (campeonato.nome === \"Brasileiro Série A\") {\n      buscarGabaritoBrasileiroA(rodadaId, campeonato.jogosPorRodada)\n        .then(rodadaGabarito => {\n          Object.keys(rodadaGabarito).forEach(jogoId => {\n            const jogoGabarito = { [jogoId]: { ...rodadaGabarito[jogoId] } };\n            dispatch({ type: ADICIONAR_JOGO_GABARITO, jogoGabarito })\n          });\n          dispatch({ type: CARREGANDO_DESLIGADO });\n          console.log(`Gabarito da rodada ${rodadaId} GloboEsporte em cache`);\n        });\n    }\n  }\n\n  dispatch({ type: CARREGANDO_DESLIGADO });\n  dispatch(buscarRodada(rodadaId))\n    .then(retorno => dispatch(adicionarMensagens(retorno)))\n    .catch(erros => dispatch(adicionarMensagens(erros)));\n}\n\nexport const salvarRodada = rodada => dispatch => {\n  dispatch(ligarCarregando());\n\n  const batch = firebase.firestore().batch();\n\n  const jogos = rodada.map(jogo => {\n    const jogoDocRef = firebase.firestore().collection(\"jogos\").doc(jogo.jogoId);\n    // const { mandante_escudo: me, visitante_escudo: ve } = jogo;\n    // const mandante_escudo = `${process.env.PUBLIC_URL}/escudos/${me.replace(/.*\\//, \"\")}`;\n    // const visitante_escudo = `${process.env.PUBLIC_URL}/escudos/${ve.replace(/.*\\//, \"\")}`;\n    // const jogoAtualizado = { ...jogo, mandante_escudo, visitante_escudo };\n    const jogoAtualizado = { ...jogo };\n    batch.set(jogoDocRef, { ...jogoAtualizado });\n    return jogoAtualizado;\n  });\n\n  batch.commit()\n    .then(_ => {\n      jogos.forEach(jogo => dispatch({ type: ADICIONAR_JOGO, jogo: { [jogo.jogoId]: { ...jogo } } }));\n\n      console.log(\"Transaction successfully committed!\");\n      dispatch({ type: CARREGANDO_DESLIGADO });\n      dispatch(adicionarMensagens(\"Rodada salva com sucesso!\"));\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nconst buscarGabaritoBrasileiroA = (rodadaId = \"1\", jogosPorRodada) => {\n  const headers = new Headers();\n  const base_url = \"https://globoesporte.globo.com/\";\n  const proxy_url = \"https://cors-anywhere.herokuapp.com/\";\n  const caminho = `servico/esportes_campeonato/responsivo/widget-uuid/1d8d8f08-d07c-4921-b35b-17701b1b73e5/fases/fase-unica-seriea-2018/rodada/${rodadaId}/jogos.html`;\n\n  var myInit = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(proxy_url + base_url + caminho, myInit)\n    .then(r => r.ok ? r.text() : Promise.reject(r))\n    .then(html => {\n      const rodadaHtml = new DOMParser().parseFromString(html, \"text/html\");\n\n      const rodadaJson = JSON.parse([...rodadaHtml.querySelectorAll(\".placar-jogo\")]\n        .map(jogo => [...jogo.querySelectorAll(\".placar-jogo-informacoes, .placar-jogo-equipes-escudo-visitante, .placar-jogo-equipes-escudo-mandante, .placar-jogo-equipes-nome, .placar-jogo-equipes-placar-mandante, .placar-jogo-equipes-placar-visitante\")])\n        .reduce((acumulador, time, j) => {\n          let jogo = JSON.parse(time.reduce((anterior, atual, i) => {\n            if (i === 0) {\n              const [, data = \"\", local = \"\", hora = \"\"] = atual.textContent.match(/^.*(\\d{2}\\/\\d{2}\\/\\d{4})\\s(.*)\\s(\\d{2}:\\d{2})$/) || [];\n              return anterior + `{\"data\":\"${data}\",\"hora\":\"${hora}\",\"local\":\"${local}\",`;\n            }\n            if (i === 1) return anterior + `\"mandante_nome\":\"${atual.textContent}\",`;\n            if (i === 2) return anterior + `\"mandante_escudo\":\"${atual.src}\",`;\n            if (i === 3) return anterior + `\"mandante_placar\":${atual.textContent || null},`;\n            if (i === 4) return anterior + `\"visitante_placar\":${atual.textContent || null},`;\n            if (i === 5) return anterior + `\"visitante_escudo\":\"${atual.src}\",`;\n            if (i === 6) return anterior + `\"visitante_nome\":\"${atual.textContent}\",\"rodada\": \"${rodadaId}\"}`;\n            return \"\";\n          }, \"\"));\n          return `${acumulador}\"${window.btoa(`${jogo.mandante_nome}_${jogo.visitante_nome}_${rodadaId}`)}\":${JSON.stringify(jogo)}${j === jogosPorRodada - 1 ? \"}\" : \",\"}`\n        }, \"{\"));\n\n      return Promise.resolve(rodadaJson);\n    })\n    .catch(erros => Promise.reject(erros));\n}\n\nconst buscarGabaritoCopa = (rodadaId = \"1\") => {\n  const headers = new Headers();\n  const base_url = \"http://globoesporte.globo.com/\";\n  const proxy_url = \"https://cors-proxy.htmldriven.com/?url=\";\n  const caminho = `servico/esportes_campeonato/responsivo/widget-uuid/cdec28af-302d-4a52-bcdc-283f6d63ea61/fases/fase-grupos-copa-do-mundo-2018/rodada/${rodadaId}/jogos.html`;\n\n  var myInit = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(proxy_url + base_url + caminho, myInit)\n    .then(r => r.ok ? r.text() : Promise.reject(r))\n    .then(html => {\n      const rodadaHtml = new DOMParser().parseFromString(JSON.parse(html).body, \"text/html\");\n\n      const rodadaJson = JSON.parse([...rodadaHtml.querySelectorAll(\".placar-jogo-equipes\")]\n        .map(jogo => [...jogo.querySelectorAll(\".placar-jogo-equipes-escudo-visitante, .placar-jogo-equipes-escudo-mandante, .placar-jogo-equipes-nome, .placar-jogo-equipes-placar-mandante, .placar-jogo-equipes-placar-visitante\")])\n        .reduce((acumulador, time, j) => {\n          let jogo = JSON.parse(time.reduce((anterior, atual, i) => {\n            if (i === 0) return anterior + `{\"mandante_nome\":\"${atual.textContent}\",`;\n            if (i === 1) return anterior + `\"mandante_escudo\":\"${atual.src}\",`;\n            if (i === 2) return anterior + `\"mandante_placar\":${atual.textContent || null},`;\n            if (i === 3) return anterior + `\"visitante_placar\":${atual.textContent || null},`;\n            if (i === 4) return anterior + `\"visitante_escudo\":\"${atual.src}\",`;\n            if (i === 5) return anterior + `\"visitante_nome\":\"${atual.textContent}\",\"rodada\": \"${rodadaId}\"}`;\n            return \"\";\n          }, \"\"));\n          return `${acumulador}\"${window.btoa(`${jogo.mandante_nome}_${jogo.visitante_nome}_${rodadaId}`)}\":${JSON.stringify(jogo)}${j === 15 ? \"}\" : \",\"}`\n        }, \"{\"));\n\n      return Promise.resolve(rodadaJson);\n    })\n    .catch(erros => Promise.reject(erros));\n}\n\nexport const removerUsuario = (exclusaoConfirmada = false, usuarioId) => (dispatch, getState) => {\n  if (exclusaoConfirmada) {\n    dispatch(ligarCarregando());\n    const { palpite: { palpites }, admin: { usuarioIdSelecionado: uid } } = getState();\n\n    const batch = firebase.firestore().batch();\n    const usuarioDocRef = firebase.firestore().collection(\"usuarios\").doc(uid);\n    batch.delete(usuarioDocRef);\n\n    const p = palpites\n      .filter(p => p.usuarioId === uid)\n      .map(p => {\n        const palpiteDocRef = firebase.firestore().collection(\"palpites\").doc(p.id);\n        batch.delete(palpiteDocRef);\n        return p;\n      });\n\n    batch.commit()\n      .then(() => {\n        dispatch({ type: REMOVER_PALPITES, palpites: p });\n        dispatch({ type: REMOVER_USUARIO, uid });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        dispatch(adicionarMensagens(\"Usuário e seus palpites removidos com Sucesso!\"));\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n      });\n\n    dispatch({ type: ALTERNAR_MODAL_EXCLUIR_USUARIO });\n  }\n  else {\n    dispatch({ type: ALTERNAR_MODAL_EXCLUIR_USUARIO, usuarioId });\n  }\n}\n\nexport const apagarCache = () => persistor\n  .purge()\n  .then(retorno => {\n    window.location.reload();\n  })\n  .catch(erros => {\n    window.location.reload();\n  });","import firebase from \"firebase\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nimport { mapearUsuarioBolao, ADICIONAR_USUARIO } from \"../usuario/actions\";\nimport { atualizarTudo } from \"../admin/actions\";\n\nexport const ENTRAR = \"seguranca/ENTRAR\";\nexport const SAIR = \"seguranca/SAIR\";\n\nexport const ehAdmin = state => {\n  let {\n    seguranca: { usuarioLogado },\n    admin: {\n      config: { usuarioAdmin = {} } = {}\n    }\n  } = state;\n  return usuarioAdmin.uid && usuarioLogado.uid === usuarioAdmin.uid;\n};\n\nexport const sair = () => dispatch => {\n  firebase.auth().signOut()\n    .then(function () {\n      dispatch({\n        type: SAIR\n      });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nexport const entrarComGoogle = () => dispatch => {\n  dispatch(ligarCarregando());\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().languageCode = \"pt_BR\";\n  firebase.auth().signInWithRedirect(provider)\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      // dispatch(sair());\n      dispatch({\n        type: CARREGANDO_DESLIGADO\n      });\n    });\n}\n\nexport const entrarComFacebook = () => dispatch => {\n  dispatch(ligarCarregando());\n  const provider = new firebase.auth.FacebookAuthProvider();\n  firebase.auth().languageCode = \"pt_BR\";\n  firebase.auth().signInWithRedirect(provider)\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      // dispatch(sair());\n      dispatch({\n        type: CARREGANDO_DESLIGADO\n      });\n    });\n}\n\nexport const depoisDoLoginRedirect = () => dispatch => {\n  firebase.auth().getRedirectResult()\n    .then(result => {\n      console.log(result.user);\n\n      // if (result.credential) {\n      //   // This gives you a Google Access Token. You can use it to access the Google API.\n      //   var token = result.credential.accessToken;\n      // }\n      // // The signed-in user info.\n      // if (result.user) {\n      //   var user = result.user;\n      //   var correntUser = firebase.auth().correntUser;\n      // }\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      // dispatch(sair());\n    });\n}\n\nexport const atualizarSituacaoUsuarioLogado = () => dispatch => {\n\n  firebase.auth().onAuthStateChanged(usuarioFirebase => {\n\n    if (usuarioFirebase) {\n      dispatch(atualizarUsuario(mapearUsuarioBolao(usuarioFirebase)));\n    }\n    else {\n      dispatch(sair());\n    }\n  });\n}\n\nexport const atualizarUsuario = (usuarioLogado = {}) => (dispatch, getState) => {\n\n  const { seguranca: { usuarioLogado: usuarioLogadoCache } } = getState();\n\n  if (usuarioLogadoCache\n    && usuarioLogado.providerId === usuarioLogadoCache.providerId\n    && usuarioLogado.foto === usuarioLogadoCache.foto\n    && usuarioLogado.nome === usuarioLogadoCache.nome) {\n    return dispatch({ type: CARREGANDO_DESLIGADO });\n  }\n\n  const usuarioDocRef = firebase.firestore().collection(\"usuarios\").doc(usuarioLogado.uid);\n  firebase.firestore().runTransaction(transaction => {\n    return transaction.get(usuarioDocRef)\n      .then(usuarioDoc => {\n        if (usuarioDoc.exists) {\n          transaction.update(usuarioDocRef, { ...usuarioLogado });\n        }\n        else {\n          transaction.set(usuarioDocRef, { ...usuarioLogado });\n        }\n        return usuarioDoc.exists;\n      })\n  })\n    .then(usuarioExiste => {\n      console.log(\"Transaction successfully committed!\");\n\n      if (!usuarioExiste) {\n        return dispatch(atualizarTudo())\n          .then(resposta => {\n            dispatch({ type: ENTRAR, usuarioLogado });\n            const usuario = { [usuarioLogado.uid]: { ...usuarioLogado } };\n            dispatch({ type: ADICIONAR_USUARIO, usuario })\n            dispatch({ type: CARREGANDO_DESLIGADO });\n          })\n          .catch(erros => {\n            // dispatch({ type: ENTRAR, usuarioLogado });\n            dispatch(adicionarMensagens(erros))\n          });\n      }\n\n      dispatch({ type: ENTRAR, usuarioLogado });\n      const usuario = { [usuarioLogado.uid]: { ...usuarioLogado } };\n      dispatch({ type: ADICIONAR_USUARIO, usuario })\n      dispatch({ type: CARREGANDO_DESLIGADO });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros))\n    });\n}","import { ENTRAR, SAIR } from \"./actions\";\n\nconst initialState = {\n  usuarioLogado: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ENTRAR:\n      return { ...state, usuarioLogado: { ...action.usuarioLogado } }\n    case SAIR:\n      return { ...state, usuarioLogado: {} }\n    default:\n      return state\n  }\n}","import {\n  ADICIONAR_PALPITE,\n  ADICIONAR_PALPITES,\n  RODADA_SELECIONADA,\n  REMOVER_PALPITES\n} from \"./actions\";\n\nconst initialState = {\n  palpites: [],\n  rodadaSelecionada: \"1\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case RODADA_SELECIONADA:\n      return {\n        ...state,\n        rodadaSelecionada: action.rodadaId\n      }\n    case REMOVER_PALPITES: {\n      return { ...state, palpites: state.palpites.filter(p => !action.palpites.includes(p.id)) };\n    }\n    case ADICIONAR_PALPITES: {\n      return { ...state, palpites: action.palpites };\n    }\n    case ADICIONAR_PALPITE: {\n      const palpite = { ...state.palpites.find(p => p.id === action.palpite.id), ...action.palpite };\n      return { ...state, palpites: [...state.palpites.filter(p => p.id !== palpite.id), { ...palpite }] };\n    }\n    default:\n      return state\n  }\n}","import {\n  RODADA_SELECIONADA,\n  ADICIONAR_JOGO,\n  ADICIONAR_JOGOS,\n  ADICIONAR_PLACAR,\n  ADICIONAR_JOGO_GABARITO,\n  ALTERNAR_MODAL_EXCLUIR_USUARIO,\n  ATUALIZAR_VERIFICARCAO,\n  ADICIONAR_CONFIG\n} from \"./actions\";\n\nconst initialState = {\n  rodadaSelecionada: \"1\",\n  jogos: {},\n  jogosGabarito: {},\n  config: {\n    campeonato: { nome: \"Bolão\" },\n    usuarioAdmin: {},\n    atualizacaoAutomatica: false,\n    bloquear: false\n  },\n  modalAberto: false,\n  usuarioIdSelecionado: \"\",\n  ultimaVerificacao: Date.now()\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADICIONAR_CONFIG:\n      return { ...state, config: action.config };\n    case ATUALIZAR_VERIFICARCAO:\n      return { ...state, ultimaVerificacao: action.dezMinutosDepois };\n    case ADICIONAR_JOGOS:\n      return { ...state, jogos: action.jogos };\n    case ADICIONAR_JOGO:\n      return { ...state, jogos: { ...state.jogos, ...action.jogo } };\n    case ADICIONAR_JOGO_GABARITO:\n      return { ...state, jogosGabarito: { ...state.jogosGabarito, ...action.jogoGabarito } };\n    case ADICIONAR_PLACAR: {\n      const { id: jogoId, ...time } = action.time;\n      return { ...state, jogosGabarito: { ...state.jogosGabarito, [jogoId]: { ...state.jogosGabarito[jogoId], ...time } } };\n    }\n    case RODADA_SELECIONADA:\n      return { ...state, rodadaSelecionada: action.rodadaId }\n    case ALTERNAR_MODAL_EXCLUIR_USUARIO: {\n      if (action.usuarioId) {\n        return { ...state, modalAberto: true, usuarioIdSelecionado: action.usuarioId }\n      }\n      return { ...state, modalAberto: false, usuarioIdSelecionado: \"\" }\n    }\n    default:\n      return state\n  }\n}","export const RODADA_SELECIONADA = \"simulador/RODADA_SELECIONADA\";\nexport const ADICIONAR_PLACAR = \"simulador/ADICIONAR_PLACAR\";\nexport const ADICIONAR_JOGO_SIMULADOR = \"simulador/ADICIONAR_JOGO_SIMULADOR\";\n\nexport const quandoMudar = time => (dispatch, getState) => {\n  dispatch({ type: ADICIONAR_PLACAR, time });\n}\n\nexport const salvarSimulador = rodada => dispatch => {\n  rodada.forEach(jogoSimulador => {\n    // dispatch({ type: ADICIONAR_JOGO_SIMULADOR, jogoSimulador });\n  });\n}\n\nexport const buscarRodada = (rodadaId = \"1\") => (dispatch, getState) => {\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n\n  const { jogos: jogosGabarito } = getState().admin;\n  Object\n    .keys(jogosGabarito)\n    .filter(jogoId => jogosGabarito[jogoId].rodada === rodadaId)\n    .forEach(jogoId => {\n      const jogoSimulador = { [jogoId]: { ...jogosGabarito[jogoId], mandante_placar: null, visitante_placar: null } };\n      dispatch({ type: ADICIONAR_JOGO_SIMULADOR, jogoSimulador });\n    });\n};\n","import {\n  RODADA_SELECIONADA,\n  ADICIONAR_PLACAR,\n  ADICIONAR_JOGO_SIMULADOR\n} from \"./actions\";\n\nconst initialState = {\n  rodadaSelecionada: \"1\",\n  jogosSimulador: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADICIONAR_JOGO_SIMULADOR:\n      return { ...state, jogosSimulador: { ...state.jogosSimulador, ...action.jogoSimulador } };\n    case ADICIONAR_PLACAR: {\n      const { id: jogoId, ...time } = action.time;\n      return { ...state, jogosSimulador: { ...state.jogosSimulador, [jogoId]: { ...state.jogosSimulador[jogoId], ...time } } };\n    }\n    case RODADA_SELECIONADA:\n      return { ...state, rodadaSelecionada: action.rodadaId }\n    default:\n      return state\n  }\n}","import {CARREGANDO_DESLIGADO, CARREGANDO_LIGADO} from \"./actions\"\n\nconst initialState = {\n  carregando: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CARREGANDO_LIGADO:\n      return {\n        ...state,\n        carregando: true\n      }\n    case CARREGANDO_DESLIGADO:\n      return {\n        ...state,\n        carregando: false\n      }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\";\nimport usuario from \"../usuario/reducers\";\nimport seguranca from \"../seguranca/reducers\";\nimport palpite from \"../palpite/reducers\";\nimport admin from \"../admin/reducers\";\nimport simulador from \"../simulador/reducers\";\nimport carregando from \"../carregando/reducers\";\n\nimport { MENSAGENS, LIMPAR_MENSAGENS } from \"./actions\";\n\nconst initialState = {\n  mensagens: []\n}\n\nconst app = (state = initialState, action) => {\n  switch (action.type) {\n    case MENSAGENS:\n      return { ...state, mensagens: [...action.mensagens] };\n    case LIMPAR_MENSAGENS:\n      return { ...state, mensagens: [] }\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  usuario,\n  seguranca,\n  palpite,\n  app,\n  admin,\n  simulador,\n  carregando\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./app/reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { atualizarSituacaoUsuarioLogado, depoisDoLoginRedirect } from \"./seguranca/actions\";\n\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyBb46_Qu1bo3QR8x47LnKdYt9BheD2P0pc\",\n    authDomain: \"combinados.firebaseapp.com\",\n    databaseURL: \"https://combinados.firebaseio.com\",\n    projectId: \"firebase-combinados\",\n    storageBucket: \"firebase-combinados.appspot.com\",\n    messagingSenderId: \"607735444379\"\n};\nfirebase.initializeApp(config);\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n  thunk\n]\nlet meuCompose = compose;\nif (process.env.NODE_ENV === \"development\") {\n  meuCompose = composeWithDevTools;\n}\n\nconst composedEnhancers = meuCompose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  persistedReducer,\n  initialState,\n  composedEnhancers\n);\n\nexport const persistor = persistStore(store)\n\nexport default store;\nstore.dispatch(atualizarSituacaoUsuarioLogado());\nstore.dispatch(depoisDoLoginRedirect());\n\n","export const buscarJogos = (state) => {\n  const { jogosSimulador: jogos, rodadaSelecionada } = state.simulador;\n  return {\n    jogos: Object\n      .keys(jogos)\n      .filter(jogoId => jogos[jogoId].rodada === rodadaSelecionada)\n      .map(jogoId => jogos[jogoId])\n      .sort((a, b) => a.mandante_nome > b.mandante_nome),\n    rodadaSelecionada\n  };\n}","import { buscarJogos as buscarJogosSimulacao } from \"../simulador/seletores\";\nexport const classificacao = (state, rodadaSimulada) => {\n  const usuarios = Object\n    .keys(state.usuario.usuarios)\n    .map(usuarioId => ({ ...state.usuario.usuarios[usuarioId], ...buscarJogos(state, usuarioId, undefined, rodadaSimulada) }))\n    .sort((a, b) => (b.pontos - a.pontos) || (b.placares - a.placares) || (a.nome === b.nome ? 0 : a.nome < b.nome ? -1 : 1));\n\n  let classificacao = 1;\n\n  return usuarios.map((usuario, i) => {\n    if (usuarios[i - 1]) {\n      classificacao = usuarios[i - 1].pontos === usuario.pontos && usuarios[i - 1].placares === usuario.placares ? classificacao : ++classificacao;\n    }\n    return { ...usuario, classificacao };\n  });\n}\n\nexport const buscarJogos = (state, usuarioId, rodadaSelecionada, rodadaSimulada) => {\n  // if (!rodadaSelecionada) {\n  //   return {};\n  // }\n  const usuario = state.usuario.usuarios[usuarioId] || {};\n  const todosPalpites = state.palpite.palpites;\n  let jogosGabarito = Object.assign({}, { ...state.admin.jogos });\n\n  if (rodadaSimulada) {\n    buscarJogosSimulacao(state).jogos.forEach(jogo => jogosGabarito[jogo.jogoId] = jogo);\n  }\n\n  const jogos = todosPalpites\n    .filter(palpite => rodadaSelecionada ? palpite.rodada === rodadaSelecionada && palpite.usuarioId === usuarioId : palpite.usuarioId === usuarioId)\n    .map(palpite => (\n      {\n        ...jogosGabarito[palpite.jogoId],\n        ...palpite,\n        ...calcularPontos(jogosGabarito[palpite.jogoId], palpite)\n      }))\n    .sort((a, b) => ('' + a.mandante_nome).localeCompare(b.mandante_nome));\n\n  const pontos = jogos.map(jogo => jogo.ponto).reduce((acumulado, atual) => acumulado + atual, 0);\n  const placares = jogos.filter(jogo => jogo.ponto === 3).length;\n  return {\n    usuario,\n    rodadaSelecionada,\n    jogos,\n    pontos,\n    placares\n  };\n}\n\nconst calcularPontos = (gabarito, palpite) => {\n  const gm = gabarito.mandante_placar,\n    gv = gabarito.visitante_placar,\n    pm = palpite.mandante_placar,\n    pv = palpite.visitante_placar,\n    vazio = gm === null || gv === null || pm === null || pv === null,\n    gEmpate = gm === gv,\n    pEmpate = pm === pv,\n    tresPontos = gm === pm && gv === pv,\n    umPonto = (gm > gv && pm > pv) || (gm < gv && pm < pv) || (gEmpate && pEmpate);\n\n  if (vazio) return { ponto: 0 };\n  if (tresPontos) return { ponto: 3 };\n  if (umPonto) return { ponto: 1 };\n  return { ponto: 0 };\n}","import React from \"react\";\n// import { push } from \"react-router-redux\"\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Avatar,\n  Divider,\n  List,\n  ListItem,\n  Subheader,\n  Button\n} from \"react-md\";\n\nimport { MdSync } from \"react-icons/lib/md\";\n\nconst ListaUsuarios = props => {\n\n\n  const usuariosPremiados = props.usuarios.filter(usuario => usuario.classificacao < 3);\n  const uidsPremiados = usuariosPremiados.map(premiado => premiado.uid);\n  const usuariosNaoPremiados = props.usuarios.filter(usuario => !uidsPremiados.includes(usuario.uid));\n\n  const pegarFoto = ({ providerId, foto }) => {\n    if (foto.includes(\"fbcdn\")) {\n      return `https://m.facebook.com/photo.php?fbid=${foto.split(\"_\")[1]}`\n      // return fetch(`https://m.facebook.com/photo.php?fbid=${foto.split(\"_\")[1]}`)\n      //   .then(r => {\n      //     return r.text()\n      //   })\n      //   .then(html => {\n      //     return \"\";\n      //   })\n      //   .catch(e => {\n      //     return \"\"\n      //   })\n    }\n\n    if (foto.includes(\"asid=\")) {\n      return foto.replace(/.*asid=([\\d]+).*/, \"https://graph.facebook.com/$1/picture\");\n    }\n\n    return foto;\n  }\n\n  return <div className=\"md-grid\">\n    <List className=\"md-cell md-cell--8-desktop md-cell--2-desktop-offset md-paper md-paper--1\">\n      <Subheader primaryText=\"Premiados\">\n        {\n          !props.ehSimulacao &&\n          <Button onClick={props.atualizarTudo} primary icon secondary><MdSync size={20} /></Button>\n        }\n      </Subheader>\n      <Divider inset />\n      {\n        usuariosPremiados.map(usuario => (\n          < ListItem key={usuario.uid}\n            component={Link}\n            to={`palpite/${usuario.uid}`}\n            leftAvatar={<Avatar src={pegarFoto(usuario)} role=\"presentation\" />}\n            rightAvatar={<Avatar suffix=\"green\">{usuario.classificacao}º</Avatar>}\n            primaryText={usuario.nome}\n            secondaryText={`Pontos: ${usuario.pontos}, Placares: ${usuario.placares}`}\n          />\n        ))\n      }\n      <Divider />\n      {\n        usuariosNaoPremiados.map(usuario => (\n          < ListItem key={usuario.uid}\n            component={Link}\n            to={`palpite/${usuario.uid}`}\n            leftAvatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n            rightIcon={<Avatar suffix=\"grey\">{usuario.classificacao}º</Avatar>}\n            primaryText={usuario.nome}\n            secondaryText={`Pontos: ${usuario.pontos}, Placares: ${usuario.placares}`}\n          />\n        ))\n      }\n    </List>\n  </div>\n}\nexport default ListaUsuarios;","import React, { Component } from \"react\";\n// import { push } from \"react-router-redux\"\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { atualizarTudo, verificarConexao } from \"../admin/actions\";\nimport { classificacao } from \"./seletores\";\nimport ListaUsuarios from \"../usuario/ListaUsuarios\";\n\nclass Classificacao extends Component {\n\n  componentDidMount() {\n    this.props.verificarConexao();\n  }\n\n  render() {\n    return <ListaUsuarios {...this.props} />\n  }\n}\n\nconst mapStateToProps = state => ({\n  usuarios: classificacao(state)\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  atualizarTudo,\n  verificarConexao\n  // changePage: () => push(\"/about-us\")\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Classificacao))\n","import React, { Component } from \"react\";\nimport {\n  Avatar,\n  FontIcon,\n  AccessibleFakeButton,\n  DropdownMenu\n} from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  entrarComGoogle,\n  entrarComFacebook,\n  sair\n} from \"./actions\";\nimport google from \"./google.svg\";\nimport deslogado from \"./deslogado.svg\";\nimport facebook from \"./facebook.svg\";\nimport { MdExitToApp } from \"react-icons/lib/md\";\n\nclass Login extends Component {\n  render() {\n    const { nome: nomeUsuarioLogado = \"Deslogado\", foto = deslogado } = this.props.usuarioLogado || {};\n    const itens = [\n      {\n        primaryText: nomeUsuarioLogado,\n        rightAvatar: <Avatar src={foto} role=\"presentation\" />\n      },\n      {\n        divider: true\n      },\n      {\n        key: \"entrarGoogle\",\n        onClick: this.props.entrarComGoogle,\n        leftAvatar: <Avatar src={google} role=\"presentation\" />,\n        primaryText: \"Google\",\n        secondaryText: \"Entrar com o google\"\n\n      },\n      {\n        key: \"entrarFacebook\",\n        onClick: this.props.entrarComFacebook,\n        leftAvatar: <Avatar src={facebook} role=\"presentation\" />,\n        primaryText: \"Facebook\",\n        secondaryText: \"Entrar com o facebook\"\n      },\n      { divider: true },\n      {\n        key: \"sair_do_bolao\",\n        onClick: this.props.sair,\n        primaryText: \"Sair\",\n        leftIcon: <FontIcon><MdExitToApp /></FontIcon>\n      }];\n    return (\n      <div>\n        <DropdownMenu\n          id=\"avatar-dropdown-menu\"\n          listHeightRestricted={false}\n          menuItems={itens}\n        >\n          <AccessibleFakeButton>\n            <Avatar src={foto} role=\"presentation\" className=\"md-btn md-btn--raised-pressed\" style={{ width: \"54px\", height: \"54px\" }} />\n          </AccessibleFakeButton>\n        </DropdownMenu>\n        {/* <p>{nomeUsuarioLogado.replace(/^(.{8}).*$/, \"$1...\")}</p> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  usuarioLogado: state.seguranca.usuarioLogado,\n  erros: state.seguranca.erros,\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  entrarComGoogle,\n  entrarComFacebook,\n  sair\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login))\n","import React from \"react\";\nimport { Link as RouterLink, Route, withRouter } from \"react-router-dom\";\nimport { FontIcon, ListItem } from \"react-md\";\n\nconst NavLink = ({ label, to, exact, icon }) => (\n  <Route path={to} exact={exact}>\n    {({ match }) => {\n      let leftIcon;\n      if (icon) {\n        leftIcon = <FontIcon>{icon}</FontIcon>;\n      }\n\n      return (\n        <ListItem\n          component={RouterLink}\n          active={!!match}\n          to={to}\n          primaryText={label}\n          leftIcon={leftIcon}\n        />\n      );\n    }}\n  </Route>\n);\n\nexport default withRouter(NavLink);\n\n","import React from \"react\";\nimport { TextField, Cell, Grid } from \"react-md\";\n// import ESCUDOS from \"app/escudos\";\nconst Jogos = props => {\n\n  return <Grid noSpacing={true}>\n    {\n      props.jogos.map((jogo, i) =>\n        <Cell key={jogo.jogoId} phoneSize={4} desktopSize={6}>\n          {/* <img alt={jogo.mandante_nome} style={{ width: \"15%\" }} src={ESCUDOS[jogo.mandante_nome]} /> */}\n          <img alt={jogo.mandante_nome} style={{ width: \"15%\" }} src={jogo.mandante_escudo} />\n          <TextField\n            id={`${jogo.jogoId}_mandante`}\n            type={props.exibirPlacar ? \"number\" : \"text\"}\n            readOnly={!props.exibirPlacar}\n            inputStyle={{ textAlign: \"center\" }}\n            style={{ width: \"25%\" }}\n            lineDirection=\"center\"\n            fullWidth={false}\n            label={jogo.mandante_nome.substring(0, 10)}\n            value={props.exibirPlacar || props.ehGabarito ? `${jogo.mandante_placar !== null ? jogo.mandante_placar : \"\"}` : \"?\"}\n            onChange={props.exibirPlacar ? placar => props.quandoMudar({ id: jogo.id || jogo.jogoId, mandante_placar: parseInt(placar, 10) }) : _ => \"\"} />\n\n          <span style={{ width: \"5%\" }}>{\"  vs  \"}</span>\n\n          <TextField\n            id={`${jogo.jogoId}_visitante`}\n            type={props.exibirPlacar ? \"number\" : \"text\"}\n            readOnly={!props.exibirPlacar}\n            inputStyle={{ textAlign: \"center\" }}\n            style={{ width: \"25%\" }}\n            lineDirection=\"center\"\n            fullWidth={false}\n            label={jogo.visitante_nome.substring(0, 10)}\n            value={props.exibirPlacar || props.ehGabarito ? `${jogo.visitante_placar !== null ? jogo.visitante_placar : \"\"}` : \"?\"}\n            onChange={props.exibirPlacar ? placar => props.quandoMudar({ id: jogo.id || jogo.jogoId, visitante_placar: parseInt(placar, 10) }) : _ => \"\"} />\n\n          <span style={{ width: \"5%\" }}>{`  ${jogo.ponto || 0}  `}</span>\n\n          {/* <img alt={jogo.visitante_nome} style={{ width: \"15%\" }} src={ESCUDOS[jogo.visitante_nome]} /> */}\n          <img alt={jogo.visitante_nome} style={{ width: \"15%\" }} src={jogo.visitante_escudo} />\n        </Cell>)\n    }\n  </Grid>\n}\n\nexport default Jogos;","import React from \"react\";\nimport { Divider, Button, Cell, Grid, AccessibleFakeInkedButton, ListItem, Avatar } from \"react-md\";\nimport Jogos from \"./jogos\"\nconst Rodada = props => {\n  const { usuario = {}, jogos, rodadaSelecionada } = props;\n  return <Grid noSpacing={true}>\n\n    <Cell phoneSize={4} desktopSize={12}>\n      {\n        props.usuario\n          ?\n          <ListItem style={{ listStyle: \"none\" }} key={usuario.uid}\n            leftAvatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n            rightIcon={<Avatar suffix={props.classificacaoUsuario <= 2 ? \"green\" : \"gray\"}>{`${props.classificacaoUsuario}º`}</Avatar>}\n            primaryText={`Palpites: ${rodadaSelecionada}ª rodada`}\n            secondaryText={`Pontos: ${props.pontos}, Placares: ${props.placares}`} />\n          :\n          <ListItem style={{ listStyle: \"none\" }}\n            primaryText={`${props.ehSimulacao ? \"Simulador: \" : \"Gabarito: \"}  ${rodadaSelecionada}ª rodada`}\n            secondaryText={`${props.ehSimulacao ? \"\" : \"Admin: Reinaldo Vale\"}`} />\n      }\n      <Divider />\n    </Cell>\n\n    <Cell phoneSize={1} desktopSize={4}>\n      <Grid noSpacing={true}>\n        {\n          [...new Array(props.rodadas)].map((_, i) =>\n            <Cell key={i} phoneSize={2} desktopSize={2}>\n              <AccessibleFakeInkedButton\n                className={`${parseInt(rodadaSelecionada, 10) === i + 1 ? \"md-background--secondary\" : \"\"} md-btn md-btn--icon md-btn--floating md-btn--raised-pressed md-btn--floating-mini md-pointer--hover md-paper md-paper--2`}\n                onClick={e => { props.buscar(i + 1 + \"\", usuario.uid) }}\n                style={{ width: \"80%\", height: \"85%\", padding: \"21%\" }}>\n                {i + 1}ª\n              </AccessibleFakeInkedButton>\n            </Cell>\n          )\n        }\n      </Grid>\n    </Cell>\n    <Cell phoneSize={3} desktopSize={8}>\n      <Jogos {...props} />\n    </Cell>\n    {\n      props.exibirBotoes &&\n      <Cell phoneSize={4} desktopSize={12} className=\"md-text-center\" >\n        <Button raised primary onClick={e => props.salvar(jogos, usuario.uid)}>Salvar</Button> {\"  \"}\n        {/* <Button raised primary onClick={e => props.atualizar(rodadaSelecionada, usuario.uid)}>Atualizar</Button> */}\n      </Cell>\n    }\n  </Grid>;\n}\nexport default Rodada;","import React, { Component } from \"react\";\nimport { Button, Cell } from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Rodada from \"../rodada\"\nimport { quandoMudar } from \"./actions\";\nimport { buscarRodada as buscar } from \"./actions\";\nimport { buscarJogos } from \"./seletores\";\nimport { classificacao } from \"../classificacao/seletores\";\nimport ListaUsuarios from \"../usuario/ListaUsuarios\";\n\n\nclass Simulador extends Component {\n  state = { classificacao: false };\n  componentDidMount() {\n    const { rodadaSelecionada, jogos, buscar } = this.props;\n    if (jogos.length === 0) {\n      buscar(rodadaSelecionada);\n    }\n  }\n\n  exibirClassificacao = () => this.setState({ classificacao: !this.state.classificacao });\n\n  render() {\n    return this.state.classificacao\n      ?\n      <div>\n        <ListaUsuarios {...this.props} />\n        <Cell phoneSize={4} desktopSize={12} className=\"md-text-center\" >\n          <Button raised primary onClick={this.exibirClassificacao}>Voltar</Button>\n        </Cell>\n      </div>\n      :\n      <Rodada {...{ ...this.props, salvar: this.exibirClassificacao }} />\n  }\n}\n\nconst mapStateToProps = state => {\n  const { ehSimulacao = true, exibirPlacar = true, exibirBotoes = true } = {};\n  const usuarios = classificacao(state, state.simulador.rodadaSelecionada);\n  let {\n    config: {\n      campeonato: { rodadas } = {}\n    } = {}\n  } = state.admin;\n  return { ...buscarJogos(state), usuarios, ehSimulacao, exibirPlacar, exibirBotoes, rodadas };\n  // return { jogos:state.simulador.jogosSimulador, ehSimulacao, exibirPlacar, exibirBotoes };\n\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  quandoMudar,\n  buscar\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulador))\n","import React, { Component, Fragment } from \"react\";\nimport { Button, LinearProgress } from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Rodada from \"../rodada\"\nimport {\n  buscarGabarito as buscar,\n  salvarRodada as salvar,\n  quandoMudar,\n  atualizar,\n  atualizarTudo,\n  enviarTudo,\n  apagarCache\n} from \"./actions\";\nimport { buscarJogos } from \"./seletores\";\n\nimport { MdSync, MdDelete, MdPublish, MdLockOutline, MdLockOpen } from \"react-icons/lib/md\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      menuSecreto: false,\n      contador: 0\n    }\n  }\n\n  componentDidMount() {\n    const { rodadaSelecionada, jogos, buscar } = this.props;\n    if (jogos.length === 0) {\n      buscar(rodadaSelecionada);\n    }\n  }\n\n  exibirMenuSecreto = () => {\n    if (this.state.contador === 5) {\n      this.setState({ contador: 0 });\n      this.setState({ menuSecreto: true });\n    }\n    else {\n      this.setState({ contador: this.state.contador + 1 });\n      this.setState({ menuSecreto: false });\n    }\n  }\n\n  render() {\n    return <div>\n      <Rodada {...this.props} />\n      {\n        this.state.menuSecreto && this.props.exibirBotoes &&\n        <Fragment>\n          <Button onClick={apagarCache} title=\"Apagar Tudo\" icon primary secondary><MdDelete /></Button>\n          <Button onClick={this.props.atualizarTudo} icon primary secondary><MdSync /></Button>\n          <Button onClick={this.props.enviarTudo} icon primary secondary><MdPublish /></Button>\n          <Button onClick={this.props.bloquear} icon primary secondary><MdLockOutline /></Button>\n          <Button onClick={this.props.desbloquear} icon primary secondary><MdLockOpen /></Button>\n        </Fragment>\n      }\n      <LinearProgress onClick={this.exibirMenuSecreto} id=\"query-indeterminate-progress\" query />\n    </div>\n  }\n}\n\nconst mapStateToProps = state => {\n  const ehGabarito = true;\n  let {\n    config: {\n      campeonato: { rodadas } = {}\n    } = {}\n  } = state.admin;\n  return { ...buscarJogos(state), ehGabarito, rodadas };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  buscar,\n  salvar,\n  quandoMudar,\n  atualizar,\n  atualizarTudo,\n  enviarTudo,\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Admin))\n","import { ehAdmin } from \"seguranca/actions\";\n\nexport const buscarJogos = state => {\n  let { rodadaSelecionada, jogos } = state.admin;\n  const admin = ehAdmin(state);\n  if (admin) {\n    jogos = state.admin.jogosGabarito;\n  }\n  jogos = Object\n    .keys(jogos)\n    .filter(jogoId => jogos[jogoId].rodada === rodadaSelecionada)\n    .map(jogoId => ({ jogoId, ...jogos[jogoId] }))\n    .sort((a, b) => ('' + a.mandante_nome).localeCompare(b.mandante_nome));\n  return {\n    jogos,\n    rodadaSelecionada,\n    exibirBotoes: admin,\n    exibirPlacar: admin\n  }\n}\n\n\nexport const situacaoPreenchimento = ({ usuario: { usuarios }, palpite: { palpites } }) =>\n  Object.keys(usuarios).map(i => ({\n    nome: usuarios[i].nome,\n    conta: usuarios[i].providerId,\n    foto: usuarios[i].foto,\n    uid: usuarios[i].uid,\n    rodadas: palpites\n      .filter(p => p.usuarioId === usuarios[i].uid && p.mandante_placar !== null && p.visitante_placar !== null)\n      .map(p => parseInt(p.rodada, 10))\n      .reduce((acc, curr) => {\n        if (typeof acc[curr] === 'undefined') {\n          acc[curr] = 1;\n        }\n        else {\n          acc[curr] += 1;\n        }\n        return acc;\n      }, {})\n  }));\n\nexport const auditoriaPrimeiroTurno = ({ usuario: { usuarios }, palpite: { palpites }, admin: { jogos } }) =>\n  Object.keys(usuarios).map(i => ({\n    nome: usuarios[i].nome,\n    conta: usuarios[i].providerId,\n    foto: usuarios[i].foto,\n    rodadas: palpites\n      .filter(p => p.usuarioId === usuarios[i].uid && parseInt(p.rodada, 10) <= 19)\n      .map(p => ({ ...jogos[p.jogoId], ...p }))\n      .sort((a, b) => parseInt(a.rodada, 10) - parseInt(b.rodada, 10))\n  }));","import React from \"react\";\nimport {\n  Avatar,\n  Grid,\n  Card,\n  CardTitle,\n  CardText,\n  DataTable,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableColumn,\n  CardActions,\n  Button,\n  DialogContainer\n} from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { situacaoPreenchimento } from \"./seletores\";\nimport { ehAdmin } from \"seguranca/actions\";\nimport google from \"../seguranca/google.svg\";\nimport facebook from \"../seguranca/facebook.svg\";\n\nimport { removerUsuario } from \"./actions\";\n\nconst Situacao = ({ situacaoPreenchimento, removerUsuario, modalAberto, somenteAdmin }) => {\n\n  return <Grid noSpacing={false}>\n    {\n      situacaoPreenchimento.map((usuario, i) => (\n        <Card key={i} className=\"md-cell md-cell--12\">\n          <CardTitle\n            title={usuario.nome}\n            subtitle={\n              usuario.conta === \"google.com\" ? <Avatar src={google} role=\"presentation\" /> : <Avatar src={facebook} role=\"presentation\" />\n            }\n            avatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n          />\n          {\n            somenteAdmin &&\n            <CardActions>\n              <Button flat onClick={e => removerUsuario(false, usuario.uid)}>Remover Usuário</Button>\n            </CardActions>\n          }\n          <CardText>\n            <DataTable plain>\n              <TableHeader>\n                <TableRow>\n                  <TableColumn>Rodada</TableColumn>\n                  <TableColumn>Jogos Preenchidos</TableColumn>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {\n                  Object.keys(usuario.rodadas).map((chave, i) =>\n                    <TableRow key={i}>\n                      <TableColumn>{chave}</TableColumn>\n                      <TableColumn>{usuario.rodadas[chave]}</TableColumn>\n                    </TableRow>\n                  )\n                }\n              </TableBody>\n            </DataTable>\n          </CardText>\n        </Card>\n      ))\n    }\n    <DialogContainer\n      id=\"simple-action-dialog\"\n      visible={modalAberto}\n      onHide={e => removerUsuario(false)}\n      actions={[<Button flat secondary onClick={e => removerUsuario(true)}>Confirmar</Button>]}\n      title=\"Confirma Exclusão?\" />\n  </Grid>\n}\n\nconst mapStateToProps = state => {\n  const modalAberto = state.admin.modalAberto;\n  const somenteAdmin = ehAdmin(state);\n  return { situacaoPreenchimento: situacaoPreenchimento(state), modalAberto, somenteAdmin };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  removerUsuario\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Situacao))\n","import React from \"react\";\nimport {\n  Avatar,\n  Grid,\n  Card,\n  CardTitle,\n  CardText,\n  DataTable,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableColumn\n} from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { auditoriaPrimeiroTurno } from \"./seletores\";\n\nimport google from \"../seguranca/google.svg\";\nimport facebook from \"../seguranca/facebook.svg\";\n\nconst Auditoria = ({ auditoriaPrimeiroTurno }) =>\n  <Grid noSpacing={false}>\n    {\n      auditoriaPrimeiroTurno.map((usuario, i) => (\n        <Card key={i} className=\"md-cell md-cell--12\">\n          <CardTitle\n            title={usuario.nome}\n            subtitle={\n              usuario.conta === \"google.com\" ? <Avatar src={google} role=\"presentation\" /> : <Avatar src={facebook} role=\"presentation\" />\n            }\n            avatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n          />\n          <CardText>\n            <DataTable plain>\n              <TableHeader>\n                <TableRow>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}>Rodada</TableColumn>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}>Jogos</TableColumn>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}></TableColumn>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}></TableColumn>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {\n                  usuario.rodadas.map((jogo, i) =>\n                    <TableRow key={i}>\n                      <TableColumn adjusted={false} style={{ \"padding\": \"0\", \"height\": \"30px\" }}>{jogo.rodada}ª</TableColumn>\n                      <TableColumn colSpan={3} adjusted={false} style={{ \"padding\": \"0\", \"height\": \"30px\" }}>{`${jogo.mandante_nome} ${jogo.mandante_placar} vs ${jogo.visitante_placar} ${jogo.visitante_nome}`}</TableColumn>\n                    </TableRow>\n                  )\n                }\n              </TableBody>\n            </DataTable>\n          </CardText>\n        </Card>\n      ))\n    }\n  </Grid>\n\nconst mapStateToProps = state => {\n  return { auditoriaPrimeiroTurno: auditoriaPrimeiroTurno(state) };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Auditoria))\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { buscarPalpites as buscar, salvarPalpites as salvar, quandoMudar } from \"./actions\";\nimport { atualizar, base10, primeiroTurno } from \"../admin/actions\";\nimport Rodada from \"../rodada\";\nimport { buscarJogos, classificacao } from \"../classificacao/seletores\";\n\nclass Palpite extends Component {\n\n  componentDidMount() {\n    const { rodadaSelecionada, jogos, buscar, usuario: { uid: usuarioId } } = this.props;\n    if (jogos.length === 0) {\n      buscar(rodadaSelecionada, usuarioId);\n    }\n  }\n\n  render() {\n    return <Rodada {...this.props} />\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const usuarioId = ownProps.match.params.usuarioId;\n  const rodadaSelecionada = state.palpite.rodadaSelecionada;\n  const classificacaoUsuario = classificacao(state).find(usuario => usuario.uid === usuarioId).classificacao;\n  const {\n    usuario,\n    jogos,\n    pontos,\n    placares\n  } = buscarJogos(state, usuarioId, rodadaSelecionada);\n\n  let {\n    config: {\n      campeonato: { rodadas } = {},\n      bloquear\n    } = {}\n  } = state.admin;\n  const ehPrimeiroTurno = false;//parseInt(rodadaSelecionada, base10) <= primeiroTurno\n  const exibirPlacar = bloquear || state.seguranca.usuarioLogado.uid === usuarioId;\n  const exibirBotoes = state.seguranca.usuarioLogado.uid === usuarioId && !bloquear && parseInt(rodadaSelecionada) > 19;\n\n  return { jogos, rodadaSelecionada, rodadas, usuario, pontos, placares, classificacaoUsuario, exibirPlacar, exibirBotoes };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  buscar,\n  salvar,\n  quandoMudar,\n  atualizar\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Palpite))\n","import React, { Component } from \"react\";\nimport { GridList, Card, CardTitle, CardText, List, ListItem, Subheader, FontIcon } from \"react-md\";\nimport { MdAttachMoney, MdLooksOne, MdLooksTwo } from \"react-icons/lib/md\";\n\nexport default class Regra extends Component {\n\n  render() {\n    const regras = [\n      {\n        titulo: \"Três Pontos\",\n        subTitulo: \"3 (três)\",\n        descricao: \"Os boleiros que acertarem o placar do jogo receberão 3 (três) pontos. Ou seja, a quantidade de gols do mandante e visitante são iguais ao do gabarito respectivamente.\"\n      },\n      {\n        titulo: \"Um Ponto\",\n        subTitulo: \"1 (um)\",\n        descricao: \"Os boleiros que errarem o placar, porém que acertarem o resultado do jogo, mesmo em caso de empate, receberão 1 (um) ponto. Ou seja, a quantidade de gols do mandante e visitante são proporcionais ao do gabarito respectivamente.\"\n      },\n      {\n        titulo: \"Critério de Desempate\",\n        subTitulo: \"Número de Placares\",\n        descricao: \"Caso exitam dois ou mais boleiros com o mesmo número de pontos, terão preferência aqueles que possuírem o maior número de placares.\"\n      },\n      {\n        titulo: \"Ver Palpites dos outros\",\n        subTitulo: \"Depois do início da Copa\",\n        descricao: \"Somente será possível ver os palpites dos outros boleiros a partir do início da copa.\"\n      },\n      {\n        titulo: \"Registrar Palpites\",\n        subTitulo: \"1 (um) dia antes do início da copa\",\n        descricao: \"O registro de palpites estarão liberados até 1 (um) dia antes do início da copa.\"\n      },\n      {\n        titulo: \"Valor do Bolão\",\n        subTitulo: \"R$ 30,00\",\n        descricao: \"Cada participante contribui com R$ 30,00.\"\n      },\n      {\n        titulo: \"Divisão do Prêmio\",\n        subTitulo: \"1º, 2º\",\n        descricao: [\n          {\n            regra: \"Total Arrecadado: TA\",\n            valor: \"Boleiros * R$ 30,00\",\n            icone: <MdAttachMoney />\n          },\n          {\n            regra: \"2º Lugar: 2L\",\n            valor: \"R$ 30,00\",\n            icone: <MdLooksTwo />\n          },\n          {\n            regra: \"1º Lugar: 1L\",\n            valor: \"TA - 2L\",\n            icone: <MdLooksOne />\n          }\n        ]\n      }\n    ];\n    return (\n      <GridList container=\"pictures\" size={12} component=\"section\">\n        {\n          regras.map(({ titulo, subTitulo, descricao }) => (\n            <Card key={titulo}>\n              <CardTitle title={titulo} subtitle={subTitulo} />\n              {\n                Array.isArray(descricao)\n                  ? <List>\n                    {\n                      descricao.map(({ regra, valor, icone }, i) => regra === \"Cabecalho\"\n                        ? <Subheader key={i} style={{ \"backgroundColor\": \"#ffc400\" }} primary primaryText={valor} />\n                        : <ListItem\n                          key={i}\n                          leftIcon={<FontIcon primary>{icone}</FontIcon>}\n                          primaryText={regra}\n                          secondaryText={valor}>\n                        </ListItem>\n                      )\n                    }\n                  </List>\n                  :\n                  <CardText>\n                    <p>{descricao}</p>\n                  </CardText>\n              }\n            </Card>\n          ))\n        }\n      </GridList>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Portal } from 'react-md';\nimport \"./index.css\";\nimport logo from \"./logo.svg\";\n\nclass Carregando extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      contador: 0\n    }\n  }\n  cancelar = () => {\n    if (this.state.contador === 5) {\n      this.setState({ contador: 0 });\n      this.props.cancelar();\n    }\n    else {\n      this.setState({ contador: this.state.contador + 1 });\n    }\n  }\n  render() {\n    return <Portal visible={this.props.carregando}>\n      <div>\n        <img onClick={this.cancelar} src={logo} className=\"carregando-logo\" alt=\"logo\" />\n        <div className=\"carregando\" />\n      </div>\n    </Portal>\n  }\n}\nexport default Carregando\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router-dom\"\nimport Classificacao from \"../classificacao\";\nimport { NavigationDrawer, Snackbar, FontIcon } from \"react-md\";\nimport Login from \"../seguranca\";\nimport NavLink from \"./NavLink\";\nimport logo from \"../carregando/logo.svg\";\n\nimport Simulador from \"../simulador\";\nimport Admin from \"../admin\";\nimport Situacao from \"../admin/Situacao\";\nimport Auditoria from \"../admin/Auditoria\";\nimport Palpite from \"../palpite\";\nimport Regra from \"../regra\";\n\nimport Carregando from \"../carregando\";\nimport { cancelar } from \"../carregando/actions\";\nimport { limparMensagens } from \"./actions\";\n\nimport { MdSort, MdSchool, MdFunctions, MdNewReleases, MdCompareArrows, MdGavel, MdMenu, MdArrowBack } from \"react-icons/lib/md\";\nimport { buscarConfig } from \"admin/actions\";\n\nconst navItems = [{\n  exact: true,\n  label: \"Classificacao\",\n  to: \"/\",\n  icon: <MdSort />,\n  exibir: true\n},\n// {\n//   label: \"Usuário\",\n//   to: \"/usuario\",\n//   icon: \"bookmark\",\n// }, \n{\n  label: \"Gabarito\",\n  to: \"/admin\",\n  icon: <MdSchool />,\n  exibir: true\n},\n{\n  label: \"Simulador\",\n  to: \"/simulador\",\n  icon: <MdFunctions />,\n  exibir: true\n},\n{\n  label: \"Regras\",\n  to: \"/regras\",\n  icon: <MdNewReleases />,\n  exibir: true\n},\n{\n  label: \"Preenchimento\",\n  to: \"/situacao\",\n  icon: <MdCompareArrows />,\n  exibir: true\n},\n{\n  label: \"Auditoria\",\n  to: \"/auditoria\",\n  icon: <MdGavel />\n}\n];\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.buscarConfig();\n  }\n  render() {\n    const itens = navItems.filter(({ label }) => {\n      if (label === \"Auditoria\") {\n        return this.props.bloquear\n      }\n      return true;\n    });\n\n    return (\n      <Route\n        render={({ location }) => (\n          <NavigationDrawer\n            temporaryIcon={<FontIcon><MdMenu /></FontIcon>}\n            persistentIcon={<FontIcon><MdArrowBack /></FontIcon>}\n            drawerTitle={<img alt=\"\" src={logo} />}\n            toolbarTitle={this.props.titulo}\n            navItems={itens.map(props => <NavLink {...props} key={props.to} />)}\n            toolbarActions={<Login />}\n          >\n            <Switch>\n              <Route exact path=\"/\" component={Classificacao} />\n              <Route path=\"/simulador\" component={Simulador} />\n              {/* <Route path=\"/usuario\" component={Usuario} /> */}\n              <Route path=\"/palpite/:usuarioId\" component={Palpite} />\n              <Route path=\"/admin\" component={Admin} />\n              <Route path=\"/regras\" component={Regra} />\n              <Route path=\"/situacao\" component={Situacao} />\n              <Route path=\"/auditoria\" component={Auditoria} />\n            </Switch>\n            <Snackbar\n              id=\"mensagens\"\n              toasts={this.props.mensagens}\n              autohide={true}\n              autohideTimeout={10000}\n              onDismiss={this.props.limparMensagens} />\n            <Carregando {...this.props} />\n          </NavigationDrawer>\n\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let {\n    config: {\n      campeonato: { nome: titulo, iniciado },\n      bloquear\n    } = {}\n  } = state.admin;\n  return {\n    mensagens: state.app.mensagens,\n    carregando: state.carregando.carregando,\n    titulo,\n    iniciado,\n    bloquear\n  }\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  limparMensagens,\n  buscarConfig,\n  cancelar\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App));\n\n// export default App;","import React, { Component } from \"react\";\nimport { Button } from \"react-md\";\nimport { apagarCache } from \"admin/actions\";\n\n\nexport default class Erro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    apagarCache();\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    this.setState({ erros: { ...error, ...info } });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <h1>Erro, contate o administrador: tire um print da tela e envie para reinaldovale@gmail.com.</h1>\n          <div>{Object.keys(this.state.erros).map(error => <p>{this.state.erros[error]}</p>)}</div>\n          <Button raised primary iconClassName=\"fa fa-hand-spock-o\" onClick={e => this.setState({ hasError: false })}>OK</Button>\n        </div>\n      )\n    }\n    return this.props.children;\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\"\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport App from \"./app\";\nimport Erro from \"./app/erro\";\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nconst target = document.querySelector(\"#root\")\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading=\"loading...\" persistor={persistor}>\n      <BrowserRouter>\n        <Erro>\n          <App />\n        </Erro>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  target\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}