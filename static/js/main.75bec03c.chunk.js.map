{"version":3,"sources":["seguranca/facebook.svg","seguranca/google.svg","carregando/logo.svg","seguranca/deslogado.svg","carregando/actions.js","app/actions.js","usuario/actions.js","usuario/reducers.js","palpite/actions.js","admin/actions.js","seguranca/actions.js","seguranca/reducers.js","palpite/reducers.js","admin/reducers.js","simulador/actions.js","simulador/reducers.js","carregando/reducers.js","app/reducers.js","store.js","simulador/seletores.js","classificacao/seletores.js","usuario/ListaUsuarios.js","classificacao/index.js","seguranca/index.js","app/NavLink.js","rodada/jogos.js","rodada/index.js","simulador/index.js","admin/index.js","admin/seletores.js","admin/Situacao.js","admin/Auditoria.js","palpite/index.js","regra/index.js","carregando/index.js","app/index.js","app/erro.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CARREGANDO_DESLIGADO","cancelar","dispatch","type","MENSAGENS","actions_adicionarMensagens","mensagens","console","log","String","text","action","message","code","name","_ref","adicionarMensagensFirebase","limparMensagens","ADICIONAR_USUARIO","initialState","usuarios","ADICIONAR_PALPITE","REMOVER_PALPITES","actions_buscarPalpites","rodadaId","arguments","length","undefined","usuarioId","getState","carregando","actions_verificarDependencias","then","retorno","palpites","palpite","_getState$admin$confi","admin","config","_getState$admin$confi2","campeonato","rodadaPalpites","filter","rodada","jogosPorRodada","Promise","resolve","firebase_default","a","firestore","collection","where","get","querySnapshot","size","forEach","doc","palpite_actions_objectSpread","id","data","metadata","fromCache","push","find","concat","_toConsumableArray","map","includes","actions_reconciliarBase","catch","erros","_getState$admin$confi3","_getState$admin$confi4","jogos","palpitesVazios","Object","keys","jogoId","jogo","mandante_placar","visitante_placar","_ref2","actions_salvarPalpites","batch","pg","_ref3","palpiteDocRef","delete","commit","reject","verificarPalpitesRepetidos","palpiteCorpo","set","_ref4","actions_quandoMudar","bloquear","_getState$palpite","todosPalpites","rodadaSelecionada","_todosPalpites$find","parseInt","base10","repetidos","chave","all","usuario","uid","actions_defineProperty","actions_objectSpread","actions_buscar","actions_buscarRodada","actions_remover","palpiteId","resposta","primeiroTurno","actions_verificarConexao","_getState$admin","ultimaVerificacao","dezMinutosDepois","Date","now","getTime","atualizacaoAutomatica","exists","sistemaConectado","actions_atualizarTudo","persistor","purge","window","location","reload","actions_buscarConfig","admin_actions_quandoMudar","time","ehAdmin","actions_enviarTudo","_getState","usuariosCache","jogosCache","palpitesPrimeiroTurno","JSON","stringify","palpitesSegundoTurno","palpitesPrimeiroTurnoDocRef","palpitesSegundoTurnoDocRef","usuariosDocRef","jogosDocRef","parse","actions_toConsumableArray","forcarAtualizacao","actions_buscarTodos","actions_buscarRodadas","forcarAtualizar","_slicedToArray","querySnapshotJogos","querySnapshotPalpites","empty","admin_actions_defineProperty","admin_actions_objectSpread","actions_atualizar","adicionarMensagens","_getState$admin2","_getState$admin2$conf","_getState$admin2$conf2","actions_buscarGabarito","nome","buscarGabaritoCopa","rodadaGabarito","jogoGabarito","buscarGabaritoBrasileiroA","actions_salvarRodada","jogoDocRef","jogoAtualizado","_","headers","Headers","caminho","fetch","proxy_url","method","r","ok","html","rodadaHtml","DOMParser","parseFromString","rodadaJson","querySelectorAll","reduce","acumulador","j","anterior","atual","i","_ref6","textContent","match","_ref6$","_ref6$2","local","_ref6$3","hora","src","btoa","mandante_nome","visitante_nome","body","actions_removerUsuario","exclusaoConfirmada","_getState2","usuarioIdSelecionado","usuarioDocRef","actions_apagarCache","ENTRAR","SAIR","state","usuarioLogado","seguranca","_state$admin$config","_state$admin$config$u","usuarioAdmin","actions_sair","auth","signOut","actions_entrarComGoogle","provider","GoogleAuthProvider","languageCode","signInWithRedirect","actions_entrarComFacebook","FacebookAuthProvider","actions_atualizarUsuario","usuarioLogadoCache","providerId","foto","runTransaction","transaction","usuarioDoc","update","seguranca_actions_objectSpread","usuarioExiste","seguranca_actions_defineProperty","reducers_initialState","palpite_reducers_initialState","admin_reducers_initialState","jogosGabarito","modalAberto","simulador_actions_quandoMudar","simulador_actions_buscarRodada","jogoSimulador","simulador_actions_defineProperty","simulador_actions_objectSpread","simulador_reducers_initialState","jogosSimulador","carregando_reducers_initialState","app_reducers_initialState","app_reducers","redux_es","reducers_objectSpread","_state$usuarios","_objectWithoutProperties","seguranca_reducers_objectSpread","palpite_reducers_objectSpread","reducers_toConsumableArray","app","app_reducers_objectSpread","app_reducers_toConsumableArray","admin_reducers_objectSpread","_action$time","reducers_objectWithoutProperties","admin_reducers_defineProperty","simulador","simulador_reducers_objectSpread","simulador_reducers_objectWithoutProperties","simulador_reducers_defineProperty","carregando_reducers_objectSpread","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","persistConfig","key","storage","storage_default","persistedReducer","redux_persist_es","middleware","redux_thunk_es","composedEnhancers","meuCompose","applyMiddleware","store","src_store","onAuthStateChanged","usuarioFirebase","providerData","_ref$providerId","_ref$uid","_ref$photoURL","photoURL","_ref$displayName","displayName","email","ultimoLogin","lastSignInTime","mapearUsuarioBolao","getRedirectResult","result","user","seletores_buscarJogos","_state$simulador","sort","b","classificacao","rodadaSimulada","seletores_objectSpread","classificacao_seletores_buscarJogos","pontos","placares","assign","calcularPontos","localeCompare","ponto","acumulado","gabarito","gm","gv","pm","pv","usuario_ListaUsuarios","props","usuariosPremiados","uidsPremiados","premiado","usuariosNaoPremiados","react_default","createElement","className","react_md_es","primaryText","ehSimulacao","onClick","atualizarTudo","primary","icon","secondary","md","inset","component","Link","to","leftAvatar","split","replace","pegarFoto","role","rightAvatar","suffix","secondaryText","rightIcon","classificacao_Classificacao","this","verificarConexao","react","src_classificacao","withRouter","es","seguranca_Login","_ref$nome","nomeUsuarioLogado","_ref$foto","deslogado_default","itens","divider","entrarComGoogle","google_default","entrarComFacebook","facebook_default","sair","leftIcon","listHeightRestricted","menuItems","style","width","height","app_NavLink","label","exact","Route","path","active","rodada_jogos","noSpacing","phoneSize","desktopSize","alt","mandante_escudo","exibirPlacar","readOnly","inputStyle","textAlign","lineDirection","fullWidth","substring","value","ehGabarito","onChange","placar","quandoMudar","onDoubleClick","e","remover","visitante_escudo","src_rodada","_props$usuario","listStyle","classificacaoUsuario","rodada_toConsumableArray","Array","rodadas","buscar","padding","exibirBotoes","raised","salvar","simulador_Simulador","exibirClassificacao","_this","setState","_this$props","simulador_objectSpread","_ref$ehSimulacao","_ref$exibirPlacar","_ref$exibirBotoes","_state$admin$config$c","admin_Admin","Admin","admin_classCallCheck","admin_possibleConstructorReturn","admin_getPrototypeOf","call","exibirMenuSecreto","contador","menuSecreto","title","enviarTudo","desbloquear","query","src_admin","admin_objectSpread","_state$admin","admin_seletores_objectSpread","admin_seletores_buscarJogos","atualizar","admin_Situacao","somenteAdmin","situacaoPreenchimento","conta","acc","curr","removerUsuario","subtitle","avatar","flat","plain","visible","onHide","actions","admin_Auditoria","auditoriaPrimeiroTurno","adjusted","colSpan","palpite_Palpite","src_palpite","ownProps","params","_buscarJogos","adminId","regra_Regra","regras","titulo","subTitulo","descricao","regra","valor","icone","container","isArray","backgroundColor","src_carregando","Carregando","carregando_classCallCheck","carregando_possibleConstructorReturn","carregando_getPrototypeOf","logo_default","navItems","exibir","app_App","buscarConfig","render","temporaryIcon","persistentIcon","drawerTitle","toolbarTitle","toolbarActions","Switch","toasts","autohide","autohideTimeout","onDismiss","src_app","iniciado","erro_Erro","Erro","erro_classCallCheck","erro_possibleConstructorReturn","erro_getPrototypeOf","hasError","error","info","erro_objectSpread","_this2","iconClassName","children","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","target","document","querySelector","react_dom","integration_react","loading","BrowserRouter","URL","origin","addEventListener","response","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.75bec03c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.f8b97394.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.09aea0f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd3e4e4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/deslogado.32710d02.svg\";","export const CARREGANDO_DESLIGADO = \"carregando/CARREGANDO_DESLIGADO\";\nexport const CARREGANDO_LIGADO = \"carregando/CARREGANDO_LIGADO\";\nexport const cancelar = () => dispatch => dispatch({ type: CARREGANDO_DESLIGADO });\n\nexport const ligarCarregando = () => (dispatch, getState) => {\n  !getState().carregando.carregando && dispatch({ type: CARREGANDO_LIGADO });\n};","\nimport { CARREGANDO_DESLIGADO } from \"../carregando/actions\";\nexport const MENSAGENS = \"app/MENSAGENS\";\nexport const LIMPAR_MENSAGENS = \"app/LIMPAR_MENSAGENS\";\n\nexport const snapshotToArray = querySnapshot => {\n    let returnArr = [];\n    querySnapshot.forEach(doc => {\n        let item = { ...doc.data(), id: doc.id };\n        returnArr.push(item);\n    });\n    return returnArr;\n};\n\nconst adicionarMensagensFirebase = ({ message, code, name }) => {\n\n    switch (code) {\n        case \"permission-denied\":\n            return {\n                type: MENSAGENS,\n                mensagens: [{ text: \"Permissão Negada!\", action: \"Fechar\" }]\n            };\n        case \"resource-exhausted\":\n            return {\n                type: MENSAGENS,\n                mensagens: [{ text: \"Cota diária de acesso ao servidor acabou!\", action: \"Fechar\" }]\n            };\n        default:\n            return {\n                type: MENSAGENS,\n                mensagens: [{ text: message, action: \"Fechar\" }]\n            };\n    }\n};\n\nexport const adicionarMensagens = mensagens => dispatch => {\n    console.log(mensagens);\n\n    dispatch({ type: CARREGANDO_DESLIGADO });\n    if (typeof mensagens === 'string' || mensagens instanceof String) {\n        return dispatch({ type: MENSAGENS, mensagens: [{ text: mensagens, action: \"Fechar\" }] });\n    }\n    const { message, code, name } = mensagens;\n    if (message && code && name) {\n        return dispatch(adicionarMensagensFirebase(mensagens));\n    }\n\n    if (message) {\n        return dispatch({ type: MENSAGENS, mensagens: [{ text: message, action: \"Fechar\" }] });\n    }\n};\n\nexport const limparMensagens = () => dispatch => dispatch({ type: LIMPAR_MENSAGENS })\n\n","import firebase from \"firebase\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nexport const USUARIOS_LIMPAR = \"usuario/USUARIO_LIMPAR\";\nexport const USUARIOS_LISTAR = \"usuario/USUARIOS_LISTAR\"\nexport const ADICIONAR_USUARIO = \"usuario/ADICIONAR_USUARIO\";\nexport const ADICIONAR_USUARIOS = \"usuario/ADICIONAR_USUARIOS\";\nexport const REMOVER_USUARIO = \"usuario/REMOVER_USUARIO\";\n\nexport const buscarTodos = (forcarAtualizacao = false) => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  if (forcarAtualizacao) {\n    return firebase\n      .firestore()\n      .collection(\"usuarios\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          const usuario = { [doc.id]: { ...doc.data() } };\n          dispatch({ type: ADICIONAR_USUARIO, usuario })\n        });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(`Todos usuários em cache`);\n      })\n      .catch(erros => Promise.reject(dispatch(adicionarMensagens(erros))));\n  }\n  else {\n    return dispatch({ type: CARREGANDO_DESLIGADO });\n  }\n}\n\nexport const buscar = (usuarioId, forcarAtualizacao = false) => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  if (usuarioId) {\n    const usuario = getState().usuario.usuarios[usuarioId];\n    if (usuario) {\n      dispatch({ type: CARREGANDO_DESLIGADO });\n      return Promise.resolve(`Usuário ${usuario.uid} em cache`);\n    }\n    return firebase\n      .firestore()\n      .collection(\"usuarios\")\n      .doc(usuarioId)\n      .get()\n      .then(doc => {\n        const usuario = { [doc.id]: { ...doc.data() } };\n        dispatch({ type: ADICIONAR_USUARIO, usuario });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(`Usuário ${usuario.uid} buscado remotamente e colocado em cache`);\n      })\n      .catch(erros => Promise.reject(dispatch(adicionarMensagens(erros))));\n  }\n}\n\nexport const mapearUsuarioBolao = (usuarioFirebase = {}) => {\n\n  const { providerId = \"\", uid = \"\", photoURL = \"\", displayName = \"\" } = usuarioFirebase.providerData[0] || {};\n  return {\n    nome: displayName || usuarioFirebase.displayName,\n    email: usuarioFirebase.email,\n    foto: \"facebook.com\" === providerId ? `https://graph.facebook.com/${uid}/picture` : photoURL,\n    uid: usuarioFirebase.uid,\n    providerId,\n    ultimoLogin: usuarioFirebase.metadata.lastSignInTime\n  }\n}\n\nexport const limparUsuarios = () => dispatch => {\n\n  dispatch({\n    type: USUARIOS_LIMPAR\n  });\n}\n\n\n\n\n","import {\n  ADICIONAR_USUARIO,\n  USUARIOS_LISTAR,\n  USUARIOS_LIMPAR,\n  ADICIONAR_USUARIOS,\n  REMOVER_USUARIO\n} from \"./actions\";\n\nconst initialState = {\n  usuarios: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case ADICIONAR_USUARIO:\n      return {\n        ...state,\n        usuarios: { ...state.usuarios, ...action.usuario }\n      }\n    case ADICIONAR_USUARIOS:\n      return { ...state, usuarios: action.usuarios }\n    case REMOVER_USUARIO: {\n      const { [action.uid]: valor, ...usuarios } = state.usuarios;\n      return { ...state, usuarios };\n    }\n    case USUARIOS_LISTAR:\n      return {\n        ...state,\n        usuarios: action.usuarios\n      }\n    case USUARIOS_LIMPAR:\n      return {\n        ...state,\n        usuarios: {}\n      }\n    default:\n      return state\n  }\n}","import firebase from \"firebase\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nimport { buscar as buscarUsuarios } from \"../usuario/actions\";\nimport { buscarRodada } from \"../admin/actions\";\nimport { base10, primeiroTurno } from \"../admin/actions\";\n\nexport const RODADA_SELECIONADA = \"palpite/RODADA_SELECIONADA\";\nexport const ADICIONAR_PALPITE = \"palpite/ADICIONAR_PALPITE\";\nexport const ADICIONAR_PALPITES = \"palpite/ADICIONAR_PALPITES\";\nexport const MESCLAR_PALPITE_GABARITO = \"palpite/MESCLAR_PALPITE_GABARITO\";\nexport const REMOVER_PALPITES = \"palpite/REMOVER_PALPITES\";\n\n\nexport const buscarPalpites = (rodadaId = \"1\", usuarioId) => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n  dispatch(verificarDependencias(rodadaId, usuarioId))\n    .then(retorno => {\n      // var fire = firebase.firestore();\n      const palpites = getState().palpite.palpites;\n      const {\n        config: {\n          campeonato = {}\n        } = {}\n      } = getState().admin;\n\n      const rodadaPalpites = palpites.filter(palpite => palpite.usuarioId === usuarioId && palpite.rodada === rodadaId);\n\n      if (rodadaPalpites.length === campeonato.jogosPorRodada) {\n        return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n      }\n\n      if (rodadaPalpites.length > campeonato.jogosPorRodada) {\n        dispatch(adicionarMensagens(\"Erro inesperado. Procure o Administrador\"));\n        return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n      }\n\n      dispatch(ligarCarregando());\n      return firebase.firestore().collection(\"palpites\")\n        .where(\"usuarioId\", \"==\", usuarioId)\n        .where(\"rodada\", \"==\", rodadaId)\n        .get()\n        .then(querySnapshot => {\n          if (querySnapshot.size === campeonato.jogosPorRodada) {\n            querySnapshot.forEach(doc => {\n              const palpite = { id: doc.id, ...doc.data() };\n              dispatch({ type: ADICIONAR_PALPITE, palpite })\n            });\n            return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n          }\n\n          if (querySnapshot.metadata.fromCache) {\n            dispatch(adicionarMensagens(\"Você está off-line ou a cota diária de consultas no servidor acabou, aguarde até amanhã.\"))\n            return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n          }\n\n          let palpites = [];\n          querySnapshot.forEach(doc => {\n            palpites.push({ ...rodadaPalpites.find(p => p.id === doc.id), id: doc.id, ...doc.data() });\n          });\n\n          palpites = [...palpites, ...rodadaPalpites.filter(p => !palpites.map(({ id }) => id).includes(p.id))]\n\n          return dispatch(reconciliarBase(palpites, usuarioId, rodadaId));\n          return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n        })\n        .catch(erros => {\n          dispatch(adicionarMensagens(erros));\n          return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n        });\n    })\n    .then(action => {\n      dispatch(action);\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nconst reconciliarBase = (palpites, usuarioId, rodadaId) => (dispatch, getState) => {\n  const {\n    config: {\n      campeonato = {}\n    } = {}\n  } = getState().admin;\n\n  if (palpites.length < campeonato.jogosPorRodada) {\n    // Salvar Palpites default (copia do gabarito)\n    const jogos = getState().admin.jogos;\n    const rodadaGabarito = Object\n      .keys(jogos)\n      .filter(jogoId => jogos[jogoId].rodada === rodadaId)\n      .map(jogoId => ({ jogoId, ...jogos[jogoId] }));\n    const palpitesVazios = rodadaGabarito.map(jogo => ({ ...jogo, mandante_placar: null, visitante_placar: null }));\n    palpites = [...palpites, ...palpitesVazios.filter(p => !palpites.map(({ jogoId }) => jogoId).includes(p.jogoId))]\n    return dispatch(salvarPalpites(palpites, usuarioId));\n  }\n\n  if (palpites.length > campeonato.jogosPorRodada) {\n    const batch = firebase.firestore().batch();\n\n    palpites = getState().palpite.palpites.filter(p => p.usuarioId === usuarioId);\n    const p = palpites\n      .filter(p => palpites\n        .filter(pg => p.rodada === pg.rodada && p.usuarioId === pg.usuarioId && p.jogoId === pg.jogoId).length > 1\n      )\n      .filter(p => p.mandante_placar === null)\n      .map(({ id }) => {\n        const palpiteDocRef = firebase.firestore().collection(\"palpites\").doc(id);\n        batch.delete(palpiteDocRef);\n        return id;\n      });\n\n    return batch.commit()\n      .then(() => {\n        dispatch(adicionarMensagens(\"Palpites Atualizados com Sucesso!\"));\n        dispatch({ type: REMOVER_PALPITES, palpites: p });\n        return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n        return Promise.reject(erros)\n      });\n  }\n}\n\nexport const salvarPalpites = (palpites, usuarioId) => (dispatch, getState) => {\n  if (verificarPalpitesRepetidos(palpites)) {\n    return Promise.resolve(dispatch(adicionarMensagens(\"Palpites repetidos mais de 3 vezes\")));\n  }\n\n  dispatch(ligarCarregando());\n  const batch = firebase.firestore().batch();\n  palpites.forEach(p => {\n    const palpiteDocRef = p.id\n      ? firebase.firestore().collection(\"palpites\").doc(p.id)\n      : firebase.firestore().collection(\"palpites\").doc();\n    const { jogoId, mandante_placar, visitante_placar, rodada } = p;\n    const palpiteCorpo = { jogoId, usuarioId, mandante_placar, visitante_placar, rodada };\n    batch.set(palpiteDocRef, { ...palpiteCorpo });\n    // TODO: transportar isso para dentro do commit\n    const palpite = { id: palpiteDocRef.id, ...palpiteCorpo };\n    dispatch({ type: ADICIONAR_PALPITE, palpite });\n  });\n  return batch.commit()\n    .then(() => {\n      dispatch(adicionarMensagens(\"Palpites Atualizados com Sucesso!\"));\n      return Promise.resolve({ type: CARREGANDO_DESLIGADO });\n    })\n    .catch(erros => {\n      dispatch({ type: REMOVER_PALPITES, palpites: palpites.map(({ id }) => id) });\n      dispatch(adicionarMensagens(erros));\n      return Promise.reject(erros)\n    });\n}\n\nexport const quandoMudar = palpite => (dispatch, getState) => {\n  const { config: { bloquear } } = getState().admin;\n  const { palpites: todosPalpites, rodadaSelecionada } = getState().palpite;\n  if (bloquear) {\n    return dispatch(adicionarMensagens(\"Bolão bloqueado!\"));\n  }\n  const { usuarioId, rodada } = todosPalpites.find(p => p.id === palpite.id);\n\n  if (parseInt(rodada, base10) <= primeiroTurno && bloquear) {\n    // return dispatch(adicionarMensagens(\"Primeiro turno bloqueado!\"));\n  }\n\n  let palpites = todosPalpites.filter(p => p.rodada === rodadaSelecionada && p.usuarioId === usuarioId);\n\n  palpite = { ...palpites.find(p => p.id === palpite.id), ...palpite };\n  palpites = [...palpites.filter(p => p.id !== palpite.id), { ...palpite }];\n\n  if (verificarPalpitesRepetidos(palpites)) {\n    return dispatch(adicionarMensagens(\"Palpites repetidos mais de 3 vezes\"));\n  }\n  dispatch({ type: ADICIONAR_PALPITE, palpite });\n}\n\nconst verificarPalpitesRepetidos = palpites => {\n  let repetidos = {};\n  palpites\n    .filter(p => p.mandante_placar !== null && p.visitante_placar !== null)\n    .map(p => `pm${p.mandante_placar}_pv${p.visitante_placar}`)\n    .forEach(p => repetidos[p] = repetidos[p] ? repetidos[p] + 1 : 1);\n  return (Object.keys(repetidos).find(chave => repetidos[chave] > 3));\n}\n\nexport const verificarDependencias = (rodadaId, usuarioId) => (dispatch, getState) => Promise\n  .all([dispatch(buscarUsuarios(usuarioId)), dispatch(buscarRodada(rodadaId))]);\n\nexport const remover = palpiteId => dispatch => {\n  dispatch(ligarCarregando());\n\n  firebase.firestore().collection(\"palpites\")\n    .doc(palpiteId)\n    .delete()\n    .then(resposta => {\n      dispatch({ type: REMOVER_PALPITES, palpites: [palpiteId] });\n      dispatch(adicionarMensagens(\"Palpite Removido com Sucesso!\"));\n    })\n    .catch(erros => dispatch(adicionarMensagens(erros)));\n}","import firebase from \"firebase\";\nimport { persistor } from \"../store\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nimport { ADICIONAR_PALPITE, ADICIONAR_PALPITES, REMOVER_PALPITES } from \"../palpite/actions\";\nimport { buscarTodos as buscarUsuarios, ADICIONAR_USUARIOS, REMOVER_USUARIO } from \"../usuario/actions\";\nimport { ehAdmin } from \"seguranca/actions\";\nexport const RODADA_SELECIONADA = \"admin/RODADA_SELECIONADA\";\nexport const RODADA_GABARITO = \"admin/RODADA_GABARITO\";\nexport const ADICIONAR_PLACAR = \"admin/ADICIONAR_PLACAR\";\nexport const ADICIONAR_JOGO = \"admin/ADICIONAR_JOGO\";\nexport const ADICIONAR_JOGOS = \"admin/ADICIONAR_JOGOS\";\nexport const ADICIONAR_JOGO_GABARITO = \"admin/ADICIONAR_JOGO_GABARITO\";\nexport const ALTERNAR_MODAL_EXCLUIR_USUARIO = \"admin/ALTERNAR_MODAL_EXCLUIR_USUARIO\";\nexport const ATUALIZAR_VERIFICARCAO = \"admin/ATUALIZAR_VERIFICARCAO\";\nexport const ADICIONAR_CONFIG = \"admin/ADICIONAR_CONFIG\";\n\nexport const base10 = 10;\nexport const primeiroTurno = 19;\n\nexport const verificarConexao = () => (dispatch, getState) => {\n  let { ultimaVerificacao, config = {} } = getState().admin;\n  const dezMinutosDepois = new Date(Date.now() + (10 * 60 * 1000)).getTime();\n\n  if (!ultimaVerificacao) {\n    return persistor.purge()\n      .then(retorno => {\n        dispatch({ type: ATUALIZAR_VERIFICARCAO, dezMinutosDepois });\n        return dispatch(atualizarTudo());\n      })\n      .then(doc => {\n        return window.location.reload();\n      });\n  }\n\n  if (Date.now() > ultimaVerificacao && config.atualizacaoAutomatica) {\n    dispatch({ type: ATUALIZAR_VERIFICARCAO, dezMinutosDepois });\n    return firebase.firestore().collection(\"admin\").doc(\"config\")\n      .get()\n      .then(doc => {\n        if (doc.exists && doc.data().sistemaConectado) {\n          console.log(\"Document data:\", doc.data());\n          return dispatch(atualizarTudo());\n        }\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n      });\n  }\n}\n\nexport const buscarConfig = () => dispatch => firebase\n  .firestore()\n  .collection(\"admin\")\n  .doc(\"config\")\n  .get()\n  .then(doc => {\n    if (doc.exists) {\n      return dispatch({ type: ADICIONAR_CONFIG, config: doc.data() });\n    }\n  })\n  .catch(erros => {\n    dispatch(adicionarMensagens(erros));\n  });\n\nexport const quandoMudar = time => (dispatch, getState) => {\n  if (ehAdmin(getState())) {\n    dispatch({ type: ADICIONAR_PLACAR, time });\n  }\n}\n\nexport const enviarTudo = () => (dispatch, getState) => {\n\n  if (ehAdmin(getState())) {\n    dispatch(ligarCarregando());\n    const {\n      palpite: { palpites },\n      usuario: { usuarios: usuariosCache },\n      admin: { jogos: jogosCache }\n    } = getState();\n\n    // const config = JSON.stringify(configCache);\n    const palpitesPrimeiroTurno = JSON.stringify(palpites.filter(p => parseInt(p.rodada, base10) <= primeiroTurno));\n    const palpitesSegundoTurno = JSON.stringify(palpites.filter(p => parseInt(p.rodada, base10) > primeiroTurno));\n    const usuarios = JSON.stringify(usuariosCache);\n    const jogos = JSON.stringify(jogosCache);\n\n    const batch = firebase.firestore().batch();\n\n    // const configDocRef = firebase.firestore().collection(\"admin\").doc(\"config\");\n    // batch.set(configDocRef, { config });\n\n    const palpitesPrimeiroTurnoDocRef = firebase.firestore().collection(\"admin\").doc(\"palpitesPrimeiroTurno\");\n    batch.set(palpitesPrimeiroTurnoDocRef, { palpitesPrimeiroTurno });\n\n    const palpitesSegundoTurnoDocRef = firebase.firestore().collection(\"admin\").doc(\"palpitesSegundoTurno\");\n    batch.set(palpitesSegundoTurnoDocRef, { palpitesSegundoTurno });\n\n    const usuariosDocRef = firebase.firestore().collection(\"admin\").doc(\"usuarios\");\n    batch.set(usuariosDocRef, { usuarios });\n\n    const jogosDocRef = firebase.firestore().collection(\"admin\").doc(\"jogos\");\n    batch.set(jogosDocRef, { jogos });\n\n    //dispatch({ type: ADICIONAR_PALPITE, palpite });\n\n    batch.commit()\n      .then(() => {\n        dispatch(adicionarMensagens(\"Dados Enviados em Lote com Sucesso!\"));\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n      });\n  }\n}\n\nexport const atualizarTudo = () => (dispatch, getState) => {\n\n  if (!ehAdmin(getState())) {\n    dispatch(ligarCarregando());\n    return firebase.firestore().collection(\"admin\").get()\n      .then(function (querySnapshot) {\n        let palpites = [];\n        querySnapshot.forEach(doc => {\n          switch (doc.id) {\n            case \"jogos\":\n              dispatch({ type: ADICIONAR_JOGOS, jogos: JSON.parse(doc.data()[doc.id]) })\n              break;\n            case \"palpitesPrimeiroTurno\":\n            case \"palpitesSegundoTurno\":\n              palpites = [...palpites, ...JSON.parse(doc.data()[doc.id])]\n              dispatch({ type: ADICIONAR_PALPITES, palpites })\n              break;\n            case \"usuarios\":\n              dispatch({ type: ADICIONAR_USUARIOS, usuarios: JSON.parse(doc.data()[doc.id]) })\n              break;\n            case \"config\":\n              const config = doc.data();\n              dispatch({ type: ADICIONAR_CONFIG, config });\n              break;\n            default:\n              dispatch(adicionarMensagens(\"Erro: Dados inesperados foram retornados do servidor!\"));\n              break;\n          }\n        });\n        dispatch(adicionarMensagens(\"Dados Atualizados em Lote com Sucesso!\"));\n        return Promise.resolve(\"OK\");\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n        return Promise.reject(erros);\n      });\n  }\n\n  const forcarAtualizacao = true;\n  return Promise.all([dispatch(buscarUsuarios(forcarAtualizacao)), dispatch(buscarRodadas(forcarAtualizacao))]);\n}\n\nexport const buscarRodadas = (forcarAtualizar = false) => dispatch => {\n  dispatch(ligarCarregando());\n\n  if (forcarAtualizar) {\n\n    return Promise.all([firebase.firestore().collection(\"jogos\").get(), firebase.firestore().collection(\"palpites\").get()])\n      .then(([querySnapshotJogos, querySnapshotPalpites]) => {\n        if (!querySnapshotJogos.empty) {\n          let jogos = {};\n          querySnapshotJogos.forEach(doc => {\n            const jogo = { [doc.id]: { ...doc.data() } };\n            jogos = { ...jogos, ...jogo };\n          });\n          dispatch({ type: ADICIONAR_JOGOS, jogos })\n        }\n        if (!querySnapshotPalpites.empty) {\n          let palpites = [];\n          querySnapshotPalpites.forEach(doc => {\n            const palpite = { id: doc.id, ...doc.data() };\n            palpites.push(palpite);\n          });\n          dispatch({ type: ADICIONAR_PALPITES, palpites })\n        }\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(\"\");\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n        return Promise.reject(erros);\n      });\n  }\n}\n\nexport const atualizar = (rodadaId, usuarioId) => dispatch => {\n  dispatch(ligarCarregando());\n\n  Promise.all([\n    firebase.firestore().collection(\"jogos\").where(\"rodada\", \"==\", rodadaId).get(),\n    usuarioId\n      ? firebase.firestore().collection(\"palpites\").where(\"usuarioId\", \"==\", usuarioId).where(\"rodada\", \"==\", rodadaId).get()\n      : Promise.resolve({ empty: true })\n  ])\n    .then(([querySnapshotJogos, querySnapshotPalpites]) => {\n      if (!querySnapshotJogos.empty) {\n        querySnapshotJogos.forEach(doc => {\n          const jogo = { [doc.id]: { ...doc.data() } };\n          dispatch({ type: ADICIONAR_JOGO, jogo })\n        });\n      }\n      if (!querySnapshotPalpites.empty) {\n        querySnapshotPalpites.forEach(doc => {\n          const palpite = { id: doc.id, ...doc.data() };\n          dispatch({ type: ADICIONAR_PALPITE, palpite })\n        });\n      }\n      dispatch(adicionarMensagens(`Gabarito e Jogos da Rodada ${rodadaId} atualizados com sucesso!`));\n      dispatch({ type: CARREGANDO_DESLIGADO });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nexport const buscarRodada = (rodadaId = \"1\") => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n\n  const {\n    jogos,\n    config: {\n      campeonato = {}\n    } = {}\n  } = getState().admin;\n\n  const rodadaGabarito = Object.keys(jogos)\n    .filter(jogoId => jogos[jogoId].rodada === rodadaId)\n    .map(jogoId => ({ jogoId, ...jogos[jogoId] }));\n\n  if (rodadaGabarito.length === campeonato.jogosPorRodada) {\n    dispatch({ type: CARREGANDO_DESLIGADO });\n    return Promise.resolve(`Gabarito da rodada ${rodadaId} em cache`);\n  }\n\n  return firebase.firestore()\n    .collection(\"jogos\")\n    .where(\"rodada\", \"==\", rodadaId)\n    .get()\n    .then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          const jogo = { [doc.id]: { ...doc.data() } };\n          dispatch({ type: ADICIONAR_JOGO, jogo })\n        });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        return Promise.resolve(`Gabarito da rodada ${rodadaId} remota em cache`);\n      }\n      return Promise.reject(\"O Administrador ainda não cadastrou essa rodada\");\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      return Promise.reject(erros)\n    });\n}\n\nexport const buscarGabarito = (rodadaId = \"1\") => (dispatch, getState) => {\n  dispatch(ligarCarregando());\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n\n  if (ehAdmin(getState())) {\n    let {\n      config: {\n        campeonato = {}\n      } = {}\n    } = getState().admin;\n    if (campeonato.nome === \"Bolão da Copa\") {\n      buscarGabaritoCopa(rodadaId, campeonato.jogosPorRodada)\n        .then(rodadaGabarito => {\n          Object.keys(rodadaGabarito).forEach(jogoId => {\n            const jogoGabarito = { [jogoId]: { ...rodadaGabarito[jogoId] } };\n            dispatch({ type: ADICIONAR_JOGO_GABARITO, jogoGabarito })\n          });\n          dispatch({ type: CARREGANDO_DESLIGADO });\n          console.log(`Gabarito da rodada ${rodadaId} GloboEsporte em cache`);\n        })\n        .catch(erros => dispatch(adicionarMensagens(erros)));;\n    }\n    if (campeonato.nome === \"Brasileiro Série A\") {\n      buscarGabaritoBrasileiroA(rodadaId, campeonato.jogosPorRodada)\n        .then(rodadaGabarito => {\n          Object.keys(rodadaGabarito).forEach(jogoId => {\n            const jogoGabarito = { [jogoId]: { ...rodadaGabarito[jogoId] } };\n            dispatch({ type: ADICIONAR_JOGO_GABARITO, jogoGabarito })\n          });\n          dispatch({ type: CARREGANDO_DESLIGADO });\n          console.log(`Gabarito da rodada ${rodadaId} GloboEsporte em cache`);\n        });\n    }\n  }\n\n  dispatch({ type: CARREGANDO_DESLIGADO });\n  dispatch(buscarRodada(rodadaId))\n    .then(retorno => dispatch(adicionarMensagens(retorno)))\n    .catch(erros => dispatch(adicionarMensagens(erros)));\n}\n\nexport const salvarRodada = rodada => dispatch => {\n  dispatch(ligarCarregando());\n\n  const batch = firebase.firestore().batch();\n\n  const jogos = rodada.map(jogo => {\n    const jogoDocRef = firebase.firestore().collection(\"jogos\").doc(jogo.jogoId);\n    // const { mandante_escudo: me, visitante_escudo: ve } = jogo;\n    // const mandante_escudo = `${process.env.PUBLIC_URL}/escudos/${me.replace(/.*\\//, \"\")}`;\n    // const visitante_escudo = `${process.env.PUBLIC_URL}/escudos/${ve.replace(/.*\\//, \"\")}`;\n    // const jogoAtualizado = { ...jogo, mandante_escudo, visitante_escudo };\n    const jogoAtualizado = { ...jogo };\n    batch.set(jogoDocRef, { ...jogoAtualizado });\n    return jogoAtualizado;\n  });\n\n  batch.commit()\n    .then(_ => {\n      jogos.forEach(jogo => dispatch({ type: ADICIONAR_JOGO, jogo: { [jogo.jogoId]: { ...jogo } } }));\n\n      console.log(\"Transaction successfully committed!\");\n      dispatch({ type: CARREGANDO_DESLIGADO });\n      dispatch(adicionarMensagens(\"Rodada salva com sucesso!\"));\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nconst buscarGabaritoBrasileiroA = (rodadaId = \"1\", jogosPorRodada) => {\n  const headers = new Headers();\n  const base_url = \"https://globoesporte.globo.com/\";\n  const proxy_url = \"https://cors-anywhere.herokuapp.com/\";\n  const caminho = `servico/esportes_campeonato/responsivo/widget-uuid/1d8d8f08-d07c-4921-b35b-17701b1b73e5/fases/fase-unica-seriea-2018/rodada/${rodadaId}/jogos.html`;\n\n  var myInit = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(proxy_url + base_url + caminho, myInit)\n    .then(r => r.ok ? r.text() : Promise.reject(r))\n    .then(html => {\n      const rodadaHtml = new DOMParser().parseFromString(html, \"text/html\");\n\n      const rodadaJson = JSON.parse([...rodadaHtml.querySelectorAll(\".placar-jogo\")]\n        .map(jogo => [...jogo.querySelectorAll(\".placar-jogo-informacoes, .placar-jogo-equipes-escudo-visitante, .placar-jogo-equipes-escudo-mandante, .placar-jogo-equipes-nome, .placar-jogo-equipes-placar-mandante, .placar-jogo-equipes-placar-visitante\")])\n        .reduce((acumulador, time, j) => {\n          let jogo = JSON.parse(time.reduce((anterior, atual, i) => {\n            if (i === 0) {\n              const [, data = \"\", local = \"\", hora = \"\"] = atual.textContent.match(/^.*(\\d{2}\\/\\d{2}\\/\\d{4})\\s(.*)\\s(\\d{2}:\\d{2})$/) || [];\n              return anterior + `{\"data\":\"${data}\",\"hora\":\"${hora}\",\"local\":\"${local}\",`;\n            }\n            if (i === 1) return anterior + `\"mandante_nome\":\"${atual.textContent}\",`;\n            if (i === 2) return anterior + `\"mandante_escudo\":\"${atual.src}\",`;\n            if (i === 3) return anterior + `\"mandante_placar\":${atual.textContent || null},`;\n            if (i === 4) return anterior + `\"visitante_placar\":${atual.textContent || null},`;\n            if (i === 5) return anterior + `\"visitante_escudo\":\"${atual.src}\",`;\n            if (i === 6) return anterior + `\"visitante_nome\":\"${atual.textContent}\",\"rodada\": \"${rodadaId}\"}`;\n            return \"\";\n          }, \"\"));\n          return `${acumulador}\"${window.btoa(`${jogo.mandante_nome}_${jogo.visitante_nome}_${rodadaId}`)}\":${JSON.stringify(jogo)}${j === jogosPorRodada - 1 ? \"}\" : \",\"}`\n        }, \"{\"));\n\n      return Promise.resolve(rodadaJson);\n    })\n    .catch(erros => Promise.reject(erros));\n}\n\nconst buscarGabaritoCopa = (rodadaId = \"1\") => {\n  const headers = new Headers();\n  const base_url = \"http://globoesporte.globo.com/\";\n  const proxy_url = \"https://cors-proxy.htmldriven.com/?url=\";\n  const caminho = `servico/esportes_campeonato/responsivo/widget-uuid/cdec28af-302d-4a52-bcdc-283f6d63ea61/fases/fase-grupos-copa-do-mundo-2018/rodada/${rodadaId}/jogos.html`;\n\n  var myInit = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(proxy_url + base_url + caminho, myInit)\n    .then(r => r.ok ? r.text() : Promise.reject(r))\n    .then(html => {\n      const rodadaHtml = new DOMParser().parseFromString(JSON.parse(html).body, \"text/html\");\n\n      const rodadaJson = JSON.parse([...rodadaHtml.querySelectorAll(\".placar-jogo-equipes\")]\n        .map(jogo => [...jogo.querySelectorAll(\".placar-jogo-equipes-escudo-visitante, .placar-jogo-equipes-escudo-mandante, .placar-jogo-equipes-nome, .placar-jogo-equipes-placar-mandante, .placar-jogo-equipes-placar-visitante\")])\n        .reduce((acumulador, time, j) => {\n          let jogo = JSON.parse(time.reduce((anterior, atual, i) => {\n            if (i === 0) return anterior + `{\"mandante_nome\":\"${atual.textContent}\",`;\n            if (i === 1) return anterior + `\"mandante_escudo\":\"${atual.src}\",`;\n            if (i === 2) return anterior + `\"mandante_placar\":${atual.textContent || null},`;\n            if (i === 3) return anterior + `\"visitante_placar\":${atual.textContent || null},`;\n            if (i === 4) return anterior + `\"visitante_escudo\":\"${atual.src}\",`;\n            if (i === 5) return anterior + `\"visitante_nome\":\"${atual.textContent}\",\"rodada\": \"${rodadaId}\"}`;\n            return \"\";\n          }, \"\"));\n          return `${acumulador}\"${window.btoa(`${jogo.mandante_nome}_${jogo.visitante_nome}_${rodadaId}`)}\":${JSON.stringify(jogo)}${j === 15 ? \"}\" : \",\"}`\n        }, \"{\"));\n\n      return Promise.resolve(rodadaJson);\n    })\n    .catch(erros => Promise.reject(erros));\n}\n\nexport const removerUsuario = (exclusaoConfirmada = false, usuarioId) => (dispatch, getState) => {\n  if (exclusaoConfirmada) {\n    dispatch(ligarCarregando());\n    const { palpite: { palpites }, admin: { usuarioIdSelecionado: uid } } = getState();\n\n    const batch = firebase.firestore().batch();\n    const usuarioDocRef = firebase.firestore().collection(\"usuarios\").doc(uid);\n    batch.delete(usuarioDocRef);\n\n    const p = palpites\n      .filter(p => p.usuarioId === uid)\n      .map(p => {\n        const palpiteDocRef = firebase.firestore().collection(\"palpites\").doc(p.id);\n        batch.delete(palpiteDocRef);\n        return p;\n      });\n\n    batch.commit()\n      .then(() => {\n        dispatch({ type: REMOVER_PALPITES, palpites: p });\n        dispatch({ type: REMOVER_USUARIO, uid });\n        dispatch({ type: CARREGANDO_DESLIGADO });\n        dispatch(adicionarMensagens(\"Usuário e seus palpites removidos com Sucesso!\"));\n      })\n      .catch(erros => {\n        dispatch(adicionarMensagens(erros));\n      });\n\n    dispatch({ type: ALTERNAR_MODAL_EXCLUIR_USUARIO });\n  }\n  else {\n    dispatch({ type: ALTERNAR_MODAL_EXCLUIR_USUARIO, usuarioId });\n  }\n}\n\nexport const apagarCache = () => persistor\n  .purge()\n  .then(retorno => {\n    window.location.reload();\n  })\n  .catch(erros => {\n    window.location.reload();\n  });","import firebase from \"firebase\";\nimport { adicionarMensagens } from \"../app/actions\";\nimport { CARREGANDO_DESLIGADO, ligarCarregando } from \"../carregando/actions\";\nimport { mapearUsuarioBolao, ADICIONAR_USUARIO } from \"../usuario/actions\";\nimport { atualizarTudo } from \"../admin/actions\";\n\nexport const ENTRAR = \"seguranca/ENTRAR\";\nexport const SAIR = \"seguranca/SAIR\";\n\nexport const ehAdmin = state => {\n  let {\n    seguranca: { usuarioLogado },\n    admin: {\n      config: { usuarioAdmin = {} } = {}\n    }\n  } = state;\n  return usuarioAdmin.uid && usuarioLogado.uid === usuarioAdmin.uid;\n};\n\nexport const sair = () => dispatch => {\n  firebase.auth().signOut()\n    .then(function () {\n      dispatch({\n        type: SAIR\n      });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n    });\n}\n\nexport const entrarComGoogle = () => dispatch => {\n  dispatch(ligarCarregando());\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().languageCode = \"pt_BR\";\n  firebase.auth().signInWithRedirect(provider)\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      // dispatch(sair());\n      dispatch({\n        type: CARREGANDO_DESLIGADO\n      });\n    });\n}\n\nexport const entrarComFacebook = () => dispatch => {\n  dispatch(ligarCarregando());\n  const provider = new firebase.auth.FacebookAuthProvider();\n  firebase.auth().languageCode = \"pt_BR\";\n  firebase.auth().signInWithRedirect(provider)\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      // dispatch(sair());\n      dispatch({\n        type: CARREGANDO_DESLIGADO\n      });\n    });\n}\n\nexport const depoisDoLoginRedirect = () => dispatch => {\n  firebase.auth().getRedirectResult()\n    .then(result => {\n      console.log(result.user);\n\n      // if (result.credential) {\n      //   // This gives you a Google Access Token. You can use it to access the Google API.\n      //   var token = result.credential.accessToken;\n      // }\n      // // The signed-in user info.\n      // if (result.user) {\n      //   var user = result.user;\n      //   var correntUser = firebase.auth().correntUser;\n      // }\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros));\n      // dispatch(sair());\n    });\n}\n\nexport const atualizarSituacaoUsuarioLogado = () => dispatch => {\n\n  firebase.auth().onAuthStateChanged(usuarioFirebase => {\n\n    if (usuarioFirebase) {\n      dispatch(atualizarUsuario(mapearUsuarioBolao(usuarioFirebase)));\n    }\n    else {\n      dispatch(sair());\n    }\n  });\n}\n\nexport const atualizarUsuario = (usuarioLogado = {}) => (dispatch, getState) => {\n\n  const { seguranca: { usuarioLogado: usuarioLogadoCache } } = getState();\n\n  if (usuarioLogadoCache\n    && usuarioLogado.providerId === usuarioLogadoCache.providerId\n    && usuarioLogado.foto === usuarioLogadoCache.foto\n    && usuarioLogado.nome === usuarioLogadoCache.nome) {\n    return dispatch({ type: CARREGANDO_DESLIGADO });\n  }\n\n  const usuarioDocRef = firebase.firestore().collection(\"usuarios\").doc(usuarioLogado.uid);\n  firebase.firestore().runTransaction(transaction => {\n    return transaction.get(usuarioDocRef)\n      .then(usuarioDoc => {\n        if (usuarioDoc.exists) {\n          transaction.update(usuarioDocRef, { ...usuarioLogado });\n        }\n        else {\n          transaction.set(usuarioDocRef, { ...usuarioLogado });\n        }\n        return usuarioDoc.exists;\n      })\n  })\n    .then(usuarioExiste => {\n      console.log(\"Transaction successfully committed!\");\n\n      if (!usuarioExiste) {\n        return dispatch(atualizarTudo())\n          .then(resposta => {\n            dispatch({ type: ENTRAR, usuarioLogado });\n            const usuario = { [usuarioLogado.uid]: { ...usuarioLogado } };\n            dispatch({ type: ADICIONAR_USUARIO, usuario })\n            dispatch({ type: CARREGANDO_DESLIGADO });\n          })\n          .catch(erros => {\n            // dispatch({ type: ENTRAR, usuarioLogado });\n            dispatch(adicionarMensagens(erros))\n          });\n      }\n\n      dispatch({ type: ENTRAR, usuarioLogado });\n      const usuario = { [usuarioLogado.uid]: { ...usuarioLogado } };\n      dispatch({ type: ADICIONAR_USUARIO, usuario })\n      dispatch({ type: CARREGANDO_DESLIGADO });\n    })\n    .catch(erros => {\n      dispatch(adicionarMensagens(erros))\n    });\n}","import { ENTRAR, SAIR } from \"./actions\";\n\nconst initialState = {\n  usuarioLogado: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ENTRAR:\n      return { ...state, usuarioLogado: { ...action.usuarioLogado } }\n    case SAIR:\n      return { ...state, usuarioLogado: {} }\n    default:\n      return state\n  }\n}","import {\n  ADICIONAR_PALPITE,\n  ADICIONAR_PALPITES,\n  RODADA_SELECIONADA,\n  REMOVER_PALPITES\n} from \"./actions\";\n\nconst initialState = {\n  palpites: [],\n  rodadaSelecionada: \"1\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case RODADA_SELECIONADA:\n      return {\n        ...state,\n        rodadaSelecionada: action.rodadaId\n      }\n    case REMOVER_PALPITES: {\n      return { ...state, palpites: state.palpites.filter(p => !action.palpites.includes(p.id)) };\n    }\n    case ADICIONAR_PALPITES: {\n      return { ...state, palpites: action.palpites };\n    }\n    case ADICIONAR_PALPITE: {\n      const palpite = { ...state.palpites.find(p => p.id === action.palpite.id), ...action.palpite };\n      return { ...state, palpites: [...state.palpites.filter(p => p.id !== palpite.id), { ...palpite }] };\n    }\n    default:\n      return state\n  }\n}","import {\n  RODADA_SELECIONADA,\n  ADICIONAR_JOGO,\n  ADICIONAR_JOGOS,\n  ADICIONAR_PLACAR,\n  ADICIONAR_JOGO_GABARITO,\n  ALTERNAR_MODAL_EXCLUIR_USUARIO,\n  ATUALIZAR_VERIFICARCAO,\n  ADICIONAR_CONFIG\n} from \"./actions\";\n\nconst initialState = {\n  rodadaSelecionada: \"1\",\n  jogos: {},\n  jogosGabarito: {},\n  config: {\n    campeonato: { nome: \"Bolão\" },\n    usuarioAdmin: {},\n    atualizacaoAutomatica: false,\n    bloquear: false\n  },\n  modalAberto: false,\n  usuarioIdSelecionado: \"\",\n  ultimaVerificacao: Date.now()\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADICIONAR_CONFIG:\n      return { ...state, config: action.config };\n    case ATUALIZAR_VERIFICARCAO:\n      return { ...state, ultimaVerificacao: action.dezMinutosDepois };\n    case ADICIONAR_JOGOS:\n      return { ...state, jogos: action.jogos };\n    case ADICIONAR_JOGO:\n      return { ...state, jogos: { ...state.jogos, ...action.jogo } };\n    case ADICIONAR_JOGO_GABARITO:\n      return { ...state, jogosGabarito: { ...state.jogosGabarito, ...action.jogoGabarito } };\n    case ADICIONAR_PLACAR: {\n      const { id: jogoId, ...time } = action.time;\n      return { ...state, jogosGabarito: { ...state.jogosGabarito, [jogoId]: { ...state.jogosGabarito[jogoId], ...time } } };\n    }\n    case RODADA_SELECIONADA:\n      return { ...state, rodadaSelecionada: action.rodadaId }\n    case ALTERNAR_MODAL_EXCLUIR_USUARIO: {\n      if (action.usuarioId) {\n        return { ...state, modalAberto: true, usuarioIdSelecionado: action.usuarioId }\n      }\n      return { ...state, modalAberto: false, usuarioIdSelecionado: \"\" }\n    }\n    default:\n      return state\n  }\n}","export const RODADA_SELECIONADA = \"simulador/RODADA_SELECIONADA\";\nexport const ADICIONAR_PLACAR = \"simulador/ADICIONAR_PLACAR\";\nexport const ADICIONAR_JOGO_SIMULADOR = \"simulador/ADICIONAR_JOGO_SIMULADOR\";\n\nexport const quandoMudar = time => (dispatch, getState) => {\n  dispatch({ type: ADICIONAR_PLACAR, time });\n}\n\nexport const salvarSimulador = rodada => dispatch => {\n  rodada.forEach(jogoSimulador => {\n    // dispatch({ type: ADICIONAR_JOGO_SIMULADOR, jogoSimulador });\n  });\n}\n\nexport const buscarRodada = (rodadaId = \"1\") => (dispatch, getState) => {\n  dispatch({ type: RODADA_SELECIONADA, rodadaId });\n\n  const { jogos: jogosGabarito } = getState().admin;\n  Object\n    .keys(jogosGabarito)\n    .filter(jogoId => jogosGabarito[jogoId].rodada === rodadaId)\n    .forEach(jogoId => {\n      const jogoSimulador = { [jogoId]: { ...jogosGabarito[jogoId], mandante_placar: null, visitante_placar: null } };\n      dispatch({ type: ADICIONAR_JOGO_SIMULADOR, jogoSimulador });\n    });\n};\n","import {\n  RODADA_SELECIONADA,\n  ADICIONAR_PLACAR,\n  ADICIONAR_JOGO_SIMULADOR\n} from \"./actions\";\n\nconst initialState = {\n  rodadaSelecionada: \"1\",\n  jogosSimulador: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADICIONAR_JOGO_SIMULADOR:\n      return { ...state, jogosSimulador: { ...state.jogosSimulador, ...action.jogoSimulador } };\n    case ADICIONAR_PLACAR: {\n      const { id: jogoId, ...time } = action.time;\n      return { ...state, jogosSimulador: { ...state.jogosSimulador, [jogoId]: { ...state.jogosSimulador[jogoId], ...time } } };\n    }\n    case RODADA_SELECIONADA:\n      return { ...state, rodadaSelecionada: action.rodadaId }\n    default:\n      return state\n  }\n}","import {CARREGANDO_DESLIGADO, CARREGANDO_LIGADO} from \"./actions\"\n\nconst initialState = {\n  carregando: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CARREGANDO_LIGADO:\n      return {\n        ...state,\n        carregando: true\n      }\n    case CARREGANDO_DESLIGADO:\n      return {\n        ...state,\n        carregando: false\n      }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\";\nimport usuario from \"../usuario/reducers\";\nimport seguranca from \"../seguranca/reducers\";\nimport palpite from \"../palpite/reducers\";\nimport admin from \"../admin/reducers\";\nimport simulador from \"../simulador/reducers\";\nimport carregando from \"../carregando/reducers\";\n\nimport { MENSAGENS, LIMPAR_MENSAGENS } from \"./actions\";\n\nconst initialState = {\n  mensagens: []\n}\n\nconst app = (state = initialState, action) => {\n  switch (action.type) {\n    case MENSAGENS:\n      return { ...state, mensagens: [...action.mensagens] };\n    case LIMPAR_MENSAGENS:\n      return { ...state, mensagens: [] }\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  usuario,\n  seguranca,\n  palpite,\n  app,\n  admin,\n  simulador,\n  carregando\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./app/reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { atualizarSituacaoUsuarioLogado, depoisDoLoginRedirect } from \"./seguranca/actions\";\n\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyBb46_Qu1bo3QR8x47LnKdYt9BheD2P0pc\",\n    authDomain: \"combinados.firebaseapp.com\",\n    databaseURL: \"https://combinados.firebaseio.com\",\n    projectId: \"firebase-combinados\",\n    storageBucket: \"firebase-combinados.appspot.com\",\n    messagingSenderId: \"607735444379\"\n};\nfirebase.initializeApp(config);\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n  thunk\n]\nlet meuCompose = compose;\nif (process.env.NODE_ENV === \"development\") {\n  meuCompose = composeWithDevTools;\n}\n\nconst composedEnhancers = meuCompose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  persistedReducer,\n  initialState,\n  composedEnhancers\n);\n\nexport const persistor = persistStore(store)\n\nexport default store;\nstore.dispatch(atualizarSituacaoUsuarioLogado());\nstore.dispatch(depoisDoLoginRedirect());\n\n","export const buscarJogos = (state) => {\n  const { jogosSimulador: jogos, rodadaSelecionada } = state.simulador;\n  return {\n    jogos: Object\n      .keys(jogos)\n      .filter(jogoId => jogos[jogoId].rodada === rodadaSelecionada)\n      .map(jogoId => jogos[jogoId])\n      .sort((a, b) => a.mandante_nome > b.mandante_nome),\n    rodadaSelecionada\n  };\n}","import { buscarJogos as buscarJogosSimulacao } from \"../simulador/seletores\";\nexport const classificacao = (state, rodadaSimulada) => {\n  const usuarios = Object\n    .keys(state.usuario.usuarios)\n    .map(usuarioId => ({ ...state.usuario.usuarios[usuarioId], ...buscarJogos(state, usuarioId, undefined, rodadaSimulada) }))\n    .sort((a, b) => (b.pontos - a.pontos) || (b.placares - a.placares) || (a.nome === b.nome ? 0 : a.nome < b.nome ? -1 : 1));\n\n  let classificacao = 1;\n\n  return usuarios.map((usuario, i) => {\n    if (usuarios[i - 1]) {\n      classificacao = usuarios[i - 1].pontos === usuario.pontos && usuarios[i - 1].placares === usuario.placares ? classificacao : ++classificacao;\n    }\n    return { ...usuario, classificacao };\n  });\n}\n\nexport const buscarJogos = (state, usuarioId, rodadaSelecionada, rodadaSimulada) => {\n  // if (!rodadaSelecionada) {\n  //   return {};\n  // }\n  const usuario = state.usuario.usuarios[usuarioId] || {};\n  const todosPalpites = state.palpite.palpites;\n  let jogosGabarito = Object.assign({}, { ...state.admin.jogos });\n\n  if (rodadaSimulada) {\n    buscarJogosSimulacao(state).jogos.forEach(jogo => jogosGabarito[jogo.jogoId] = jogo);\n  }\n\n  const jogos = todosPalpites\n    .filter(palpite => rodadaSelecionada ? palpite.rodada === rodadaSelecionada && palpite.usuarioId === usuarioId : palpite.usuarioId === usuarioId)\n    .map(palpite => (\n      {\n        ...jogosGabarito[palpite.jogoId],\n        ...palpite,\n        ...calcularPontos(jogosGabarito[palpite.jogoId], palpite)\n      }))\n    .sort((a, b) => ('' + a.mandante_nome).localeCompare(b.mandante_nome));\n\n  const pontos = jogos.map(jogo => jogo.ponto).reduce((acumulado, atual) => acumulado + atual, 0);\n  const placares = jogos.filter(jogo => jogo.ponto === 3).length;\n  return {\n    usuario,\n    rodadaSelecionada,\n    jogos,\n    pontos,\n    placares\n  };\n}\n\nconst calcularPontos = (gabarito, palpite) => {\n  const gm = gabarito.mandante_placar,\n    gv = gabarito.visitante_placar,\n    pm = palpite.mandante_placar,\n    pv = palpite.visitante_placar,\n    vazio = gm === null || gv === null || pm === null || pv === null,\n    gEmpate = gm === gv,\n    pEmpate = pm === pv,\n    tresPontos = gm === pm && gv === pv,\n    umPonto = (gm > gv && pm > pv) || (gm < gv && pm < pv) || (gEmpate && pEmpate);\n\n  if (vazio) return { ponto: 0 };\n  if (tresPontos) return { ponto: 3 };\n  if (umPonto) return { ponto: 1 };\n  return { ponto: 0 };\n}","import React from \"react\";\n// import { push } from \"react-router-redux\"\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Avatar,\n  Divider,\n  List,\n  ListItem,\n  Subheader,\n  Button\n} from \"react-md\";\n\nimport { MdSync } from \"react-icons/lib/md\";\n\nconst ListaUsuarios = props => {\n\n\n  const usuariosPremiados = props.usuarios.filter(usuario => usuario.classificacao < 3);\n  const uidsPremiados = usuariosPremiados.map(premiado => premiado.uid);\n  const usuariosNaoPremiados = props.usuarios.filter(usuario => !uidsPremiados.includes(usuario.uid));\n\n  const pegarFoto = ({ providerId, foto }) => {\n    if (foto.includes(\"fbcdn\")) {\n      return `https://m.facebook.com/photo.php?fbid=${foto.split(\"_\")[1]}`\n      // return fetch(`https://m.facebook.com/photo.php?fbid=${foto.split(\"_\")[1]}`)\n      //   .then(r => {\n      //     return r.text()\n      //   })\n      //   .then(html => {\n      //     return \"\";\n      //   })\n      //   .catch(e => {\n      //     return \"\"\n      //   })\n    }\n\n    if (foto.includes(\"asid=\")) {\n      return foto.replace(/.*asid=([\\d]+).*/, \"https://graph.facebook.com/$1/picture\");\n    }\n\n    return foto;\n  }\n\n  return <div className=\"md-grid\">\n    <List className=\"md-cell md-cell--8-desktop md-cell--2-desktop-offset md-paper md-paper--1\">\n      <Subheader primaryText=\"Premiados\">\n        {\n          !props.ehSimulacao &&\n          <Button onClick={props.atualizarTudo} primary icon secondary><MdSync size={20} /></Button>\n        }\n      </Subheader>\n      <Divider inset />\n      {\n        usuariosPremiados.map(usuario => (\n          < ListItem key={usuario.uid}\n            component={Link}\n            to={`palpite/${usuario.uid}`}\n            leftAvatar={<Avatar src={pegarFoto(usuario)} role=\"presentation\" />}\n            rightAvatar={<Avatar suffix=\"green\">{usuario.classificacao}º</Avatar>}\n            primaryText={usuario.nome}\n            secondaryText={`Pontos: ${usuario.pontos}, Placares: ${usuario.placares}`}\n          />\n        ))\n      }\n      <Divider />\n      {\n        usuariosNaoPremiados.map(usuario => (\n          < ListItem key={usuario.uid}\n            component={Link}\n            to={`palpite/${usuario.uid}`}\n            leftAvatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n            rightIcon={<Avatar suffix=\"grey\">{usuario.classificacao}º</Avatar>}\n            primaryText={usuario.nome}\n            secondaryText={`Pontos: ${usuario.pontos}, Placares: ${usuario.placares}`}\n          />\n        ))\n      }\n    </List>\n  </div>\n}\nexport default ListaUsuarios;","import React, { Component } from \"react\";\n// import { push } from \"react-router-redux\"\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { atualizarTudo, verificarConexao } from \"../admin/actions\";\nimport { classificacao } from \"./seletores\";\nimport ListaUsuarios from \"../usuario/ListaUsuarios\";\n\nclass Classificacao extends Component {\n\n  componentDidMount() {\n    this.props.verificarConexao();\n  }\n\n  render() {\n    return <ListaUsuarios {...this.props} />\n  }\n}\n\nconst mapStateToProps = state => ({\n  usuarios: classificacao(state)\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  atualizarTudo,\n  verificarConexao\n  // changePage: () => push(\"/about-us\")\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Classificacao))\n","import React, { Component } from \"react\";\nimport {\n  Avatar,\n  FontIcon,\n  AccessibleFakeButton,\n  DropdownMenu\n} from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  entrarComGoogle,\n  entrarComFacebook,\n  sair\n} from \"./actions\";\nimport google from \"./google.svg\";\nimport deslogado from \"./deslogado.svg\";\nimport facebook from \"./facebook.svg\";\nimport { MdExitToApp } from \"react-icons/lib/md\";\n\nclass Login extends Component {\n  render() {\n    const { nome: nomeUsuarioLogado = \"Deslogado\", foto = deslogado } = this.props.usuarioLogado || {};\n    const itens = [\n      {\n        primaryText: nomeUsuarioLogado,\n        rightAvatar: <Avatar src={foto} role=\"presentation\" />\n      },\n      {\n        divider: true\n      },\n      {\n        key: \"entrarGoogle\",\n        onClick: this.props.entrarComGoogle,\n        leftAvatar: <Avatar src={google} role=\"presentation\" />,\n        primaryText: \"Google\",\n        secondaryText: \"Entrar com o google\"\n\n      },\n      {\n        key: \"entrarFacebook\",\n        onClick: this.props.entrarComFacebook,\n        leftAvatar: <Avatar src={facebook} role=\"presentation\" />,\n        primaryText: \"Facebook\",\n        secondaryText: \"Entrar com o facebook\"\n      },\n      { divider: true },\n      {\n        key: \"sair_do_bolao\",\n        onClick: this.props.sair,\n        primaryText: \"Sair\",\n        leftIcon: <FontIcon><MdExitToApp /></FontIcon>\n      }];\n    return (\n      <div>\n        <DropdownMenu\n          id=\"avatar-dropdown-menu\"\n          listHeightRestricted={false}\n          menuItems={itens}\n        >\n          <AccessibleFakeButton>\n            <Avatar src={foto} role=\"presentation\" className=\"md-btn md-btn--raised-pressed\" style={{ width: \"54px\", height: \"54px\" }} />\n          </AccessibleFakeButton>\n        </DropdownMenu>\n        {/* <p>{nomeUsuarioLogado.replace(/^(.{8}).*$/, \"$1...\")}</p> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  usuarioLogado: state.seguranca.usuarioLogado,\n  erros: state.seguranca.erros,\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  entrarComGoogle,\n  entrarComFacebook,\n  sair\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login))\n","import React from \"react\";\nimport { Link as RouterLink, Route, withRouter } from \"react-router-dom\";\nimport { FontIcon, ListItem } from \"react-md\";\n\nconst NavLink = ({ label, to, exact, icon }) => (\n  <Route path={to} exact={exact}>\n    {({ match }) => {\n      let leftIcon;\n      if (icon) {\n        leftIcon = <FontIcon>{icon}</FontIcon>;\n      }\n\n      return (\n        <ListItem\n          component={RouterLink}\n          active={!!match}\n          to={to}\n          primaryText={label}\n          leftIcon={leftIcon}\n        />\n      );\n    }}\n  </Route>\n);\n\nexport default withRouter(NavLink);\n\n","import React from \"react\";\nimport { TextField, Cell, Grid } from \"react-md\";\n// import ESCUDOS from \"app/escudos\";\nconst Jogos = props => {\n\n  return <Grid noSpacing={true}>\n    {\n      props.jogos.map((jogo, i) =>\n        <Cell key={jogo.jogoId + i} phoneSize={4} desktopSize={6}>\n          {/* <img alt={jogo.mandante_nome} style={{ width: \"15%\" }} src={ESCUDOS[jogo.mandante_nome]} /> */}\n          <img alt={jogo.mandante_nome} style={{ width: \"15%\" }} src={jogo.mandante_escudo} />\n          <TextField\n            id={`${jogo.jogoId}_mandante`}\n            type={props.exibirPlacar ? \"number\" : \"text\"}\n            readOnly={!props.exibirPlacar}\n            inputStyle={{ textAlign: \"center\" }}\n            style={{ width: \"25%\" }}\n            lineDirection=\"center\"\n            fullWidth={false}\n            label={jogo.mandante_nome.substring(0, 10)}\n            value={props.exibirPlacar || props.ehGabarito ? `${jogo.mandante_placar !== null ? jogo.mandante_placar : \"\"}` : \"?\"}\n            onChange={props.exibirPlacar ? placar => props.quandoMudar({ id: jogo.id || jogo.jogoId, mandante_placar: parseInt(placar, 10) }) : _ => \"\"} />\n\n          <span onDoubleClick={e => props.remover(jogo.id)} style={{ width: \"5%\" }}>{\"  vs  \"}</span>\n\n          <TextField\n            id={`${jogo.jogoId}_visitante`}\n            type={props.exibirPlacar ? \"number\" : \"text\"}\n            readOnly={!props.exibirPlacar}\n            inputStyle={{ textAlign: \"center\" }}\n            style={{ width: \"25%\" }}\n            lineDirection=\"center\"\n            fullWidth={false}\n            label={jogo.visitante_nome.substring(0, 10)}\n            value={props.exibirPlacar || props.ehGabarito ? `${jogo.visitante_placar !== null ? jogo.visitante_placar : \"\"}` : \"?\"}\n            onChange={props.exibirPlacar ? placar => props.quandoMudar({ id: jogo.id || jogo.jogoId, visitante_placar: parseInt(placar, 10) }) : _ => \"\"} />\n\n          <span style={{ width: \"5%\" }}>{`  ${jogo.ponto || 0}  `}</span>\n\n          {/* <img alt={jogo.visitante_nome} style={{ width: \"15%\" }} src={ESCUDOS[jogo.visitante_nome]} /> */}\n          <img alt={jogo.visitante_nome} style={{ width: \"15%\" }} src={jogo.visitante_escudo} />\n        </Cell>)\n    }\n  </Grid>\n}\n\nexport default Jogos;","import React from \"react\";\nimport { Divider, Button, Cell, Grid, AccessibleFakeInkedButton, ListItem, Avatar } from \"react-md\";\nimport Jogos from \"./jogos\"\nconst Rodada = props => {\n  const { usuario = {}, jogos, rodadaSelecionada } = props;\n  return <Grid noSpacing={true}>\n\n    <Cell phoneSize={4} desktopSize={12}>\n      {\n        props.usuario\n          ?\n          <ListItem style={{ listStyle: \"none\" }} key={usuario.uid}\n            leftAvatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n            rightIcon={<Avatar suffix={props.classificacaoUsuario <= 2 ? \"green\" : \"gray\"}>{`${props.classificacaoUsuario}º`}</Avatar>}\n            primaryText={`Palpites: ${rodadaSelecionada}ª rodada`}\n            secondaryText={`Pontos: ${props.pontos}, Placares: ${props.placares}`} />\n          :\n          <ListItem style={{ listStyle: \"none\" }}\n            primaryText={`${props.ehSimulacao ? \"Simulador: \" : \"Gabarito: \"}  ${rodadaSelecionada}ª rodada`}\n            secondaryText={`${props.ehSimulacao ? \"\" : \"Admin: Reinaldo Vale\"}`} />\n      }\n      <Divider />\n    </Cell>\n\n    <Cell phoneSize={1} desktopSize={4}>\n      <Grid noSpacing={true}>\n        {\n          [...new Array(props.rodadas)].map((_, i) =>\n            <Cell key={i} phoneSize={2} desktopSize={2}>\n              <AccessibleFakeInkedButton\n                className={`${parseInt(rodadaSelecionada, 10) === i + 1 ? \"md-background--secondary\" : \"\"} md-btn md-btn--icon md-btn--floating md-btn--raised-pressed md-btn--floating-mini md-pointer--hover md-paper md-paper--2`}\n                onClick={e => { props.buscar(i + 1 + \"\", usuario.uid) }}\n                style={{ width: \"80%\", height: \"85%\", padding: \"21%\" }}>\n                {i + 1}ª\n              </AccessibleFakeInkedButton>\n            </Cell>\n          )\n        }\n      </Grid>\n    </Cell>\n    <Cell phoneSize={3} desktopSize={8}>\n      <Jogos {...props} />\n    </Cell>\n    {\n      props.exibirBotoes &&\n      <Cell phoneSize={4} desktopSize={12} className=\"md-text-center\" >\n        <Button raised primary onClick={e => props.salvar(jogos, usuario.uid)}>Salvar</Button> {\"  \"}\n        {/* <Button raised primary onClick={e => props.atualizar(rodadaSelecionada, usuario.uid)}>Atualizar</Button> */}\n      </Cell>\n    }\n  </Grid>;\n}\nexport default Rodada;","import React, { Component } from \"react\";\nimport { Button, Cell } from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Rodada from \"../rodada\"\nimport { quandoMudar } from \"./actions\";\nimport { buscarRodada as buscar } from \"./actions\";\nimport { buscarJogos } from \"./seletores\";\nimport { classificacao } from \"../classificacao/seletores\";\nimport ListaUsuarios from \"../usuario/ListaUsuarios\";\n\n\nclass Simulador extends Component {\n  state = { classificacao: false };\n  componentDidMount() {\n    const { rodadaSelecionada, jogos, buscar } = this.props;\n    if (jogos.length === 0) {\n      buscar(rodadaSelecionada);\n    }\n  }\n\n  exibirClassificacao = () => this.setState({ classificacao: !this.state.classificacao });\n\n  render() {\n    return this.state.classificacao\n      ?\n      <div>\n        <ListaUsuarios {...this.props} />\n        <Cell phoneSize={4} desktopSize={12} className=\"md-text-center\" >\n          <Button raised primary onClick={this.exibirClassificacao}>Voltar</Button>\n        </Cell>\n      </div>\n      :\n      <Rodada {...{ ...this.props, salvar: this.exibirClassificacao }} />\n  }\n}\n\nconst mapStateToProps = state => {\n  const { ehSimulacao = true, exibirPlacar = true, exibirBotoes = true } = {};\n  const usuarios = classificacao(state, state.simulador.rodadaSelecionada);\n  let {\n    config: {\n      campeonato: { rodadas } = {}\n    } = {}\n  } = state.admin;\n  return { ...buscarJogos(state), usuarios, ehSimulacao, exibirPlacar, exibirBotoes, rodadas };\n  // return { jogos:state.simulador.jogosSimulador, ehSimulacao, exibirPlacar, exibirBotoes };\n\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  quandoMudar,\n  buscar\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulador))\n","import React, { Component, Fragment } from \"react\";\nimport { Button, LinearProgress } from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Rodada from \"../rodada\"\nimport {\n  buscarGabarito as buscar,\n  salvarRodada as salvar,\n  quandoMudar,\n  atualizar,\n  atualizarTudo,\n  enviarTudo,\n  apagarCache\n} from \"./actions\";\nimport { buscarJogos } from \"./seletores\";\n\nimport { MdSync, MdDelete, MdPublish, MdLockOutline, MdLockOpen } from \"react-icons/lib/md\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      menuSecreto: false,\n      contador: 0\n    }\n  }\n\n  componentDidMount() {\n    const { rodadaSelecionada, jogos, buscar } = this.props;\n    if (jogos.length === 0) {\n      buscar(rodadaSelecionada);\n    }\n  }\n\n  exibirMenuSecreto = () => {\n    if (this.state.contador === 5) {\n      this.setState({ contador: 0 });\n      this.setState({ menuSecreto: true });\n    }\n    else {\n      this.setState({ contador: this.state.contador + 1 });\n      this.setState({ menuSecreto: false });\n    }\n  }\n\n  render() {\n    return <div>\n      <Rodada {...this.props} />\n      {\n        this.state.menuSecreto && this.props.exibirBotoes &&\n        <Fragment>\n          <Button onClick={apagarCache} title=\"Apagar Tudo\" icon primary secondary><MdDelete /></Button>\n          <Button onClick={this.props.atualizarTudo} icon primary secondary><MdSync /></Button>\n          <Button onClick={this.props.enviarTudo} icon primary secondary><MdPublish /></Button>\n          <Button onClick={this.props.bloquear} icon primary secondary><MdLockOutline /></Button>\n          <Button onClick={this.props.desbloquear} icon primary secondary><MdLockOpen /></Button>\n        </Fragment>\n      }\n      <LinearProgress onClick={this.exibirMenuSecreto} id=\"query-indeterminate-progress\" query />\n    </div>\n  }\n}\n\nconst mapStateToProps = state => {\n  const ehGabarito = true;\n  let {\n    config: {\n      campeonato: { rodadas } = {}\n    } = {}\n  } = state.admin;\n  return { ...buscarJogos(state), ehGabarito, rodadas };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  buscar,\n  salvar,\n  quandoMudar,\n  atualizar,\n  atualizarTudo,\n  enviarTudo,\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Admin))\n","import { ehAdmin } from \"seguranca/actions\";\n\nexport const buscarJogos = state => {\n  let { rodadaSelecionada, jogos } = state.admin;\n  const admin = ehAdmin(state);\n  if (admin) {\n    jogos = state.admin.jogosGabarito;\n  }\n  jogos = Object\n    .keys(jogos)\n    .filter(jogoId => jogos[jogoId].rodada === rodadaSelecionada)\n    .map(jogoId => ({ jogoId, ...jogos[jogoId] }))\n    .sort((a, b) => ('' + a.mandante_nome).localeCompare(b.mandante_nome));\n  return {\n    jogos,\n    rodadaSelecionada,\n    exibirBotoes: admin,\n    exibirPlacar: admin\n  }\n}\n\n\nexport const situacaoPreenchimento = ({ usuario: { usuarios }, palpite: { palpites } }) =>\n  Object.keys(usuarios).map(i => ({\n    nome: usuarios[i].nome,\n    conta: usuarios[i].providerId,\n    foto: usuarios[i].foto,\n    uid: usuarios[i].uid,\n    rodadas: palpites\n      .filter(p => p.usuarioId === usuarios[i].uid && p.mandante_placar !== null && p.visitante_placar !== null)\n      .map(p => parseInt(p.rodada, 10))\n      .reduce((acc, curr) => {\n        if (typeof acc[curr] === 'undefined') {\n          acc[curr] = 1;\n        }\n        else {\n          acc[curr] += 1;\n        }\n        return acc;\n      }, {})\n  }));\n\nexport const auditoriaPrimeiroTurno = ({ usuario: { usuarios }, palpite: { palpites }, admin: { jogos } }) =>\n  Object.keys(usuarios).map(i => ({\n    nome: usuarios[i].nome,\n    conta: usuarios[i].providerId,\n    foto: usuarios[i].foto,\n    rodadas: palpites\n      .filter(p => p.usuarioId === usuarios[i].uid && parseInt(p.rodada, 10) <= 19)\n      .map(p => ({ ...jogos[p.jogoId], ...p }))\n      .sort((a, b) => parseInt(a.rodada, 10) - parseInt(b.rodada, 10))\n  }));","import React from \"react\";\nimport {\n  Avatar,\n  Grid,\n  Card,\n  CardTitle,\n  CardText,\n  DataTable,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableColumn,\n  CardActions,\n  Button,\n  DialogContainer\n} from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { situacaoPreenchimento } from \"./seletores\";\nimport { ehAdmin } from \"seguranca/actions\";\nimport google from \"../seguranca/google.svg\";\nimport facebook from \"../seguranca/facebook.svg\";\n\nimport { removerUsuario } from \"./actions\";\n\nconst Situacao = ({ situacaoPreenchimento, removerUsuario, modalAberto, somenteAdmin }) => {\n\n  return <Grid noSpacing={false}>\n    {\n      situacaoPreenchimento.map((usuario, i) => (\n        <Card key={i} className=\"md-cell md-cell--12\">\n          <CardTitle\n            title={usuario.nome}\n            subtitle={\n              usuario.conta === \"google.com\" ? <Avatar src={google} role=\"presentation\" /> : <Avatar src={facebook} role=\"presentation\" />\n            }\n            avatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n          />\n          {\n            somenteAdmin &&\n            <CardActions>\n              <Button flat onClick={e => removerUsuario(false, usuario.uid)}>Remover Usuário</Button>\n            </CardActions>\n          }\n          <CardText>\n            <DataTable plain>\n              <TableHeader>\n                <TableRow>\n                  <TableColumn>Rodada</TableColumn>\n                  <TableColumn>Jogos Preenchidos</TableColumn>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {\n                  Object.keys(usuario.rodadas).map((chave, i) =>\n                    <TableRow key={i}>\n                      <TableColumn>{chave}</TableColumn>\n                      <TableColumn>{usuario.rodadas[chave]}</TableColumn>\n                    </TableRow>\n                  )\n                }\n              </TableBody>\n            </DataTable>\n          </CardText>\n        </Card>\n      ))\n    }\n    <DialogContainer\n      id=\"simple-action-dialog\"\n      visible={modalAberto}\n      onHide={e => removerUsuario(false)}\n      actions={[<Button flat secondary onClick={e => removerUsuario(true)}>Confirmar</Button>]}\n      title=\"Confirma Exclusão?\" />\n  </Grid>\n}\n\nconst mapStateToProps = state => {\n  const modalAberto = state.admin.modalAberto;\n  const somenteAdmin = ehAdmin(state);\n  return { situacaoPreenchimento: situacaoPreenchimento(state), modalAberto, somenteAdmin };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  removerUsuario\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Situacao))\n","import React from \"react\";\nimport {\n  Avatar,\n  Grid,\n  Card,\n  CardTitle,\n  CardText,\n  DataTable,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableColumn\n} from \"react-md\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { auditoriaPrimeiroTurno } from \"./seletores\";\n\nimport google from \"../seguranca/google.svg\";\nimport facebook from \"../seguranca/facebook.svg\";\n\nconst Auditoria = ({ auditoriaPrimeiroTurno }) =>\n  <Grid noSpacing={false}>\n    {\n      auditoriaPrimeiroTurno.map((usuario, i) => (\n        <Card key={i} className=\"md-cell md-cell--12\">\n          <CardTitle\n            title={usuario.nome}\n            subtitle={\n              usuario.conta === \"google.com\" ? <Avatar src={google} role=\"presentation\" /> : <Avatar src={facebook} role=\"presentation\" />\n            }\n            avatar={<Avatar src={usuario.foto} role=\"presentation\" />}\n          />\n          <CardText>\n            <DataTable plain>\n              <TableHeader>\n                <TableRow>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}>Rodada</TableColumn>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}>Jogos</TableColumn>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}></TableColumn>\n                  <TableColumn adjusted={false} style={{ \"padding\": \"0\" }}></TableColumn>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {\n                  usuario.rodadas.map((jogo, i) =>\n                    <TableRow key={i}>\n                      <TableColumn adjusted={false} style={{ \"padding\": \"0\", \"height\": \"30px\" }}>{jogo.rodada}ª</TableColumn>\n                      <TableColumn colSpan={3} adjusted={false} style={{ \"padding\": \"0\", \"height\": \"30px\" }}>{`${jogo.mandante_nome} ${jogo.mandante_placar} vs ${jogo.visitante_placar} ${jogo.visitante_nome}`}</TableColumn>\n                    </TableRow>\n                  )\n                }\n              </TableBody>\n            </DataTable>\n          </CardText>\n        </Card>\n      ))\n    }\n  </Grid>\n\nconst mapStateToProps = state => {\n  return { auditoriaPrimeiroTurno: auditoriaPrimeiroTurno(state) };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Auditoria))\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { buscarPalpites as buscar, salvarPalpites as salvar, quandoMudar, remover } from \"./actions\";\nimport { atualizar, base10, primeiroTurno } from \"../admin/actions\";\nimport Rodada from \"../rodada\";\nimport { buscarJogos, classificacao } from \"../classificacao/seletores\";\n\nclass Palpite extends Component {\n\n  componentDidMount() {\n    const { rodadaSelecionada, jogos, buscar, usuario: { uid: usuarioId } } = this.props;\n    if (jogos.length === 0) {\n      buscar(rodadaSelecionada, usuarioId);\n    }\n  }\n\n  render() {\n    return <Rodada {...this.props} />\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const usuarioId = ownProps.match.params.usuarioId;\n  const rodadaSelecionada = state.palpite.rodadaSelecionada;\n  const classificacaoUsuario = classificacao(state).find(usuario => usuario.uid === usuarioId).classificacao;\n  const {\n    usuario,\n    jogos,\n    pontos,\n    placares\n  } = buscarJogos(state, usuarioId, rodadaSelecionada);\n\n  let {\n    config: {\n      campeonato: { rodadas } = {},\n      bloquear,\n      usuarioAdmin: { uid: adminId }\n    } = {}\n  } = state.admin;\n  const ehPrimeiroTurno = false;//parseInt(rodadaSelecionada, base10) <= primeiroTurno\n  const exibirPlacar = bloquear || state.seguranca.usuarioLogado.uid === usuarioId || state.seguranca.usuarioLogado.uid === adminId;\n  const exibirBotoes = (state.seguranca.usuarioLogado.uid === usuarioId && !bloquear && parseInt(rodadaSelecionada) > 19)\n    || state.seguranca.usuarioLogado.uid === adminId;\n\n  return { jogos, rodadaSelecionada, rodadas, usuario, pontos, placares, classificacaoUsuario, exibirPlacar, exibirBotoes };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  buscar,\n  salvar,\n  quandoMudar,\n  atualizar,\n  remover\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Palpite))\n","import React, { Component } from \"react\";\nimport { GridList, Card, CardTitle, CardText, List, ListItem, Subheader, FontIcon } from \"react-md\";\nimport { MdAttachMoney, MdRestaurant, MdLooksOne, MdLooksTwo, MdLooks3 } from \"react-icons/lib/md\";\n\nexport default class Regra extends Component {\n\n  render() {\n    const regras = [\n      {\n        titulo: \"Três Pontos\",\n        subTitulo: \"3 (três)\",\n        descricao: \"Os boleiros que acertarem o placar do jogo receberão 3 (três) pontos. Ou seja, a quantidade de gols do mandante e visitante são iguais ao do gabarito respectivamente.\"\n      },\n      {\n        titulo: \"Um Ponto\",\n        subTitulo: \"1 (um)\",\n        descricao: \"Os boleiros que errarem o placar, porém que acertarem o resultado do jogo, mesmo em caso de empate, receberão 1 (um) ponto. Ou seja, a quantidade de gols do mandante e visitante são proporcionais ao do gabarito respectivamente.\"\n      },\n      {\n        titulo: \"Critério de Desempate\",\n        subTitulo: \"Número de Placares\",\n        descricao: \"Caso exitam dois ou mais boleiros com o mesmo número de pontos, terão preferência aqueles que possuírem o maior número de placares.\"\n      },\n      {\n        titulo: \"Palpites Repetidos\",\n        subTitulo: \"Mesma Rodada: no máximo 3 repetições\",\n        descricao: \"Serão permitidos no máximo 3 palpites repedidos por rodada. Valores acima desse limite serão ignorados.\"\n      },\n      {\n        titulo: \"Ver Palpites dos outros\",\n        subTitulo: \"Depois do início do Turno\",\n        descricao: \"Somente será possível ver os palpites dos outros boleiros a partir do início do turno.\"\n      },\n      {\n        titulo: \"Registrar Palpites\",\n        subTitulo: \"1 (um) dia antes do início do turno\",\n        descricao: \"O registro de palpites estarão liberados até 1 (um) dia antes do início do turno.\"\n      },\n      {\n        titulo: \"Valor do Bolão\",\n        subTitulo: \"R$ 100,00\",\n        descricao: \"Cada participante contribui com R$ 100,00. Além de concorrer aos prêmios poderá participar do Churrasco do Campeão que ocorre no dia da última rodada.\"\n      },\n      {\n        titulo: \"Divisão do Prêmio\",\n        subTitulo: \"1º, 2º, Churrasco e talvez o 3º\",\n        descricao: [\n          {\n            regra: \"Total Arrecadado: TA\",\n            valor: \"Boleiros * R$ 100,00\",\n            icone: <MdAttachMoney />\n          },\n          {\n            regra: \"Churrasco: CH\",\n            valor: \"20% do TA\",\n            icone: <MdRestaurant />\n          },\n          {\n            regra: \"2º Lugar: 2L\",\n            valor: \"20% do (TA - CH)\",\n            icone: <MdLooksTwo />\n          },\n          {\n            regra: \"1º Lugar: 1L\",\n            valor: \"TA - CH - 2L\",\n            icone: <MdLooksOne />\n          },\n          {\n            regra: \"Cabecalho\",\n            valor: \"Caso o total de participantes for >= 30\"\n          },\n          {\n            regra: \"3º Lugar: 3L\",\n            valor: \"R$ 100,00\",\n            icone: <MdLooks3 />\n          },\n          {\n            regra: \"1º Lugar - 1L\",\n            valor: \"TA - CH - 2L - 3L\",\n            icone: <MdLooksOne />\n          }\n        ]\n      }\n    ];\n    return (\n      <GridList container=\"pictures\" size={12} component=\"section\">\n        {\n          regras.map(({ titulo, subTitulo, descricao }) => (\n            <Card key={titulo}>\n              <CardTitle title={titulo} subtitle={subTitulo} />\n              {\n                Array.isArray(descricao)\n                  ? <List>\n                    {\n                      descricao.map(({ regra, valor, icone }, i) => regra === \"Cabecalho\"\n                        ? <Subheader key={i} style={{ \"backgroundColor\": \"#ffc400\" }} primary primaryText={valor} />\n                        : <ListItem\n                          key={i}\n                          leftIcon={<FontIcon primary>{icone}</FontIcon>}\n                          primaryText={regra}\n                          secondaryText={valor}>\n                        </ListItem>\n                      )\n                    }\n                  </List>\n                  :\n                  <CardText>\n                    <p>{descricao}</p>\n                  </CardText>\n              }\n            </Card>\n          ))\n        }\n      </GridList>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Portal } from 'react-md';\nimport \"./index.css\";\nimport logo from \"./logo.svg\";\n\nclass Carregando extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      contador: 0\n    }\n  }\n  cancelar = () => {\n    if (this.state.contador === 5) {\n      this.setState({ contador: 0 });\n      this.props.cancelar();\n    }\n    else {\n      this.setState({ contador: this.state.contador + 1 });\n    }\n  }\n  render() {\n    return <Portal visible={this.props.carregando}>\n      <div>\n        <img onClick={this.cancelar} src={logo} className=\"carregando-logo\" alt=\"logo\" />\n        <div className=\"carregando\" />\n      </div>\n    </Portal>\n  }\n}\nexport default Carregando\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router-dom\"\nimport Classificacao from \"../classificacao\";\nimport { NavigationDrawer, Snackbar, FontIcon } from \"react-md\";\nimport Login from \"../seguranca\";\nimport NavLink from \"./NavLink\";\nimport logo from \"../carregando/logo.svg\";\n\nimport Simulador from \"../simulador\";\nimport Admin from \"../admin\";\nimport Situacao from \"../admin/Situacao\";\nimport Auditoria from \"../admin/Auditoria\";\nimport Palpite from \"../palpite\";\nimport Regra from \"../regra\";\n\nimport Carregando from \"../carregando\";\nimport { cancelar } from \"../carregando/actions\";\nimport { limparMensagens } from \"./actions\";\n\nimport { MdSort, MdSchool, MdFunctions, MdNewReleases, MdCompareArrows, MdGavel, MdMenu, MdArrowBack } from \"react-icons/lib/md\";\nimport { buscarConfig } from \"admin/actions\";\n\nconst navItems = [{\n  exact: true,\n  label: \"Classificacao\",\n  to: \"/\",\n  icon: <MdSort />,\n  exibir: true\n},\n// {\n//   label: \"Usuário\",\n//   to: \"/usuario\",\n//   icon: \"bookmark\",\n// }, \n{\n  label: \"Gabarito\",\n  to: \"/admin\",\n  icon: <MdSchool />,\n  exibir: true\n},\n{\n  label: \"Simulador\",\n  to: \"/simulador\",\n  icon: <MdFunctions />,\n  exibir: true\n},\n{\n  label: \"Regras\",\n  to: \"/regras\",\n  icon: <MdNewReleases />,\n  exibir: true\n},\n{\n  label: \"Preenchimento\",\n  to: \"/situacao\",\n  icon: <MdCompareArrows />,\n  exibir: true\n},\n{\n  label: \"Auditoria\",\n  to: \"/auditoria\",\n  icon: <MdGavel />\n}\n];\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.buscarConfig();\n  }\n  render() {\n    const itens = navItems.filter(({ label }) => {\n      if (label === \"Auditoria\") {\n        return this.props.bloquear\n      }\n      return true;\n    });\n\n    return (\n      <Route\n        render={({ location }) => (\n          <NavigationDrawer\n            temporaryIcon={<FontIcon><MdMenu /></FontIcon>}\n            persistentIcon={<FontIcon><MdArrowBack /></FontIcon>}\n            drawerTitle={<img alt=\"\" src={logo} />}\n            toolbarTitle={this.props.titulo}\n            navItems={itens.map(props => <NavLink {...props} key={props.to} />)}\n            toolbarActions={<Login />}\n          >\n            <Switch>\n              <Route exact path=\"/\" component={Classificacao} />\n              <Route path=\"/simulador\" component={Simulador} />\n              {/* <Route path=\"/usuario\" component={Usuario} /> */}\n              <Route path=\"/palpite/:usuarioId\" component={Palpite} />\n              <Route path=\"/admin\" component={Admin} />\n              <Route path=\"/regras\" component={Regra} />\n              <Route path=\"/situacao\" component={Situacao} />\n              <Route path=\"/auditoria\" component={Auditoria} />\n            </Switch>\n            <Snackbar\n              id=\"mensagens\"\n              toasts={this.props.mensagens}\n              autohide={true}\n              autohideTimeout={10000}\n              onDismiss={this.props.limparMensagens} />\n            <Carregando {...this.props} />\n          </NavigationDrawer>\n\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let {\n    config: {\n      campeonato: { nome: titulo, iniciado },\n      bloquear\n    } = {}\n  } = state.admin;\n  return {\n    mensagens: state.app.mensagens,\n    carregando: state.carregando.carregando,\n    titulo,\n    iniciado,\n    bloquear\n  }\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  limparMensagens,\n  buscarConfig,\n  cancelar\n}, dispatch)\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App));\n\n// export default App;","import React, { Component } from \"react\";\nimport { Button } from \"react-md\";\nimport { apagarCache } from \"admin/actions\";\n\n\nexport default class Erro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    apagarCache();\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    this.setState({ erros: { ...error, ...info } });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <h1>Erro, contate o administrador: tire um print da tela e envie para reinaldovale@gmail.com.</h1>\n          <div>{Object.keys(this.state.erros).map(error => <p>{this.state.erros[error]}</p>)}</div>\n          <Button raised primary iconClassName=\"fa fa-hand-spock-o\" onClick={e => this.setState({ hasError: false })}>OK</Button>\n        </div>\n      )\n    }\n    return this.props.children;\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\"\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport App from \"./app\";\nimport Erro from \"./app/erro\";\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nconst target = document.querySelector(\"#root\")\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading=\"loading...\" persistor={persistor}>\n      <BrowserRouter>\n        <Erro>\n          <App />\n        </Erro>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  target\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}